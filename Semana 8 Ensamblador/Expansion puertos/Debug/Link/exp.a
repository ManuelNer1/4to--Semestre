;/*
; * exp.c
; *
; * Created: 24/05/2021 10:05:10 a. m.
; * Author: ManuelNeri
; */
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;//595(escritura)
;#define DATA_595 PORTB.4
;#define STCLK_595 PORTB.5
;#define SHCLK_595 PORTB.3
;//165
;#define CLK_165 PORTB.2
;#define LOAD_165 PORTB.1
;#define DATA_165 PINB.0
;
;void Configura595()
; 0000 0013 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0014    DDRB.3=1;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0015    DDRB.4=1;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0016    DDRB.5=1;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0017 }
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;
;void Write595 (unsigned char dato)
; 0000 001A {
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 001B    unsigned char i;
; 0000 001C    for (i=0;i<8;i++)
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;	dato -> Y+1
;	i -> R16
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 001D    {
; 0000 001E       if ((dato&0x80)==0)   //DATA_595=dato.7;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 001F          DATA_595=0;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0020       else
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0021          DATA_595=1;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0022 
; 0000 0023       SHCLK_595=1;      //Shift clock
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0024       SHCLK_595=0;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0025       dato=dato<<1; //Se recorre una posición
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0026    }
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0027 
; 0000 0028    STCLK_595=1;     //storage clock
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0029    STCLK_595=0;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 002A }
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;
;
;void Configura165()
; 0000 002E {
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 002F    DDRB.2=1;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0030    DDRB.1=1;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0031 }
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;
;unsigned char Read165(void)
; 0000 0034 {
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0035    unsigned char i,val=0;
; 0000 0036    LOAD_165=1;    //Modo de shift
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;	i -> R16
;	val -> R17
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0037    for (i=0;i<8;i++)
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0038    {
; 0000 0039       val=val<<1;
;PCODE: $0000005C VOL: 0
; 0000 003A       if (DATA_165==1)
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 003B          val=val|1;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 003C       CLK_165=1;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 003D       CLK_165=0;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 003E    }
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 003F    LOAD_165=0;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0040    return val;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0041 
; 0000 0042 
; 0000 0043    LOAD_165=0;   //Modo de Load
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0044    return val;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0045 }
;PCODE: $00000076 VOL: 0
;
;void main(void)
; 0000 0048 {
;PCODE: $00000077 VOL: 0
; 0000 0049    unsigned char j;
; 0000 004A    Configura595();
;	j -> R16
;PCODE: $00000078 VOL: 0
; 0000 004B    Configura165();
;PCODE: $00000079 VOL: 0
; 0000 004C    while (1)
;PCODE: $0000007A VOL: 0
; 0000 004D    {
; 0000 004E       j=Read165();
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 004F       Write595(j);
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0050    }
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 0051 
; 0000 0052 }
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
