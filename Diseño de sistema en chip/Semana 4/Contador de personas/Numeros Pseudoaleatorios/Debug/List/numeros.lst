
AVRASM ver. 2.1.30  C:\Users\ManuelNeri\Desktop\Numeros Pseudoaleatorios\Debug\List\numeros.asm Mon Apr 19 11:16:21 2021

C:\Users\ManuelNeri\Desktop\Numeros Pseudoaleatorios\Debug\List\numeros.asm(1089): warning: Register r4 already defined by the .DEF directive
C:\Users\ManuelNeri\Desktop\Numeros Pseudoaleatorios\Debug\List\numeros.asm(1090): warning: Register r5 already defined by the .DEF directive
C:\Users\ManuelNeri\Desktop\Numeros Pseudoaleatorios\Debug\List\numeros.asm(1091): warning: Register r6 already defined by the .DEF directive
C:\Users\ManuelNeri\Desktop\Numeros Pseudoaleatorios\Debug\List\numeros.asm(1092): warning: Register r3 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.43 Evaluation
                 ;(C) Copyright 1998-2021 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega2560
                 ;Program type           : Application
                 ;Clock frequency        : 16.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 2048 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega2560
                 	#pragma AVRPART MEMORY PROG_FLASH 262144
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 8192
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x200
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU RAMPZ=0x3B
                 	.EQU EIND=0x3C
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x74
                 	.EQU XMCRB=0x75
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0200
                 	.EQU __SRAM_END=0x21FF
                 	.EQU __DSTACK_SIZE=0x0800
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _cursor=R4
                 	.DEF _num=R5
                 	.DEF _num_msb=R6
                 	.DEF _i=R3
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0096 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
000046 940c 0000 	JMP  0x00
000048 940c 0000 	JMP  0x00
00004a 940c 0000 	JMP  0x00
00004c 940c 0000 	JMP  0x00
00004e 940c 0000 	JMP  0x00
000050 940c 0000 	JMP  0x00
000052 940c 0000 	JMP  0x00
000054 940c 0000 	JMP  0x00
000056 940c 0000 	JMP  0x00
000058 940c 0000 	JMP  0x00
00005a 940c 0000 	JMP  0x00
00005c 940c 0000 	JMP  0x00
00005e 940c 0000 	JMP  0x00
000060 940c 0000 	JMP  0x00
000062 940c 0000 	JMP  0x00
000064 940c 0000 	JMP  0x00
000066 940c 0000 	JMP  0x00
000068 940c 0000 	JMP  0x00
00006a 940c 0000 	JMP  0x00
00006c 940c 0000 	JMP  0x00
00006e 940c 0000 	JMP  0x00
000070 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
000072 2710
000073 03e8
000074 0064
000075 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000076 0001      	.DB  0x1,0x0
                 _tbl16_G101:
000077 1000
000078 0100
000079 0010
00007a 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x3:
00007b 0303
00007c 0203
00007d 0c02
00007e 0800      	.DB  0x3,0x3,0x3,0x2,0x2,0xC,0x0,0x8
00007f 0100
000080 0600      	.DB  0x0,0x1,0x0,0x6
                 _0x0:
000081 6152
000082 646e
000083 6d6f
000084 4e20      	.DB  0x52,0x61,0x6E,0x64,0x6F,0x6D,0x20,0x4E
000085 6d75
000086 6562
000087 7372
000088 2500      	.DB  0x75,0x6D,0x62,0x65,0x72,0x73,0x0,0x25
000089 3030
00008a 6933
C:\Users\ManuelNeri\Desktop\Numeros Pseudoaleatorios\Debug\List\numeros.asm(1174): warning: .cseg .db misalignment - padding zero byte
00008b 0000      	.DB  0x30,0x30,0x33,0x69,0x0
                 _0x2000060:
C:\Users\ManuelNeri\Desktop\Numeros Pseudoaleatorios\Debug\List\numeros.asm(1176): warning: .cseg .db misalignment - padding zero byte
00008c 0001      	.DB  0x1
                 _0x2000000:
00008d 4e2d
00008e 4e41
00008f 4900
000090 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ManuelNeri\Desktop\Numeros Pseudoaleatorios\Debug\List\numeros.asm(1179): warning: .cseg .db misalignment - padding zero byte
000091 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000092 0001      	.DW  0x01
000093 0a04      	.DW  __seed_G100
000094 0118      	.DW  _0x2000060*2
                 
                 _0xFFFFFFFF:
000095 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000096 94f8      	CLI
000097 27ee      	CLR  R30
000098 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000099 e0f1      	LDI  R31,1
00009a bff5      	OUT  MCUCR,R31
00009b bfe5      	OUT  MCUCR,R30
00009c 93e0 0074 	STS  XMCRA,R30
00009e 93e0 0075 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
0000a0 e08d      	LDI  R24,(14-2)+1
0000a1 e0a2      	LDI  R26,2
0000a2 27bb      	CLR  R27
                 __CLEAR_REG:
0000a3 93ed      	ST   X+,R30
0000a4 958a      	DEC  R24
0000a5 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000a6 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000a7 e290      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000a8 e0a0      	LDI  R26,LOW(__SRAM_START)
0000a9 e0b2      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0000aa 93ed      	ST   X+,R30
0000ab 9701      	SBIW R24,1
0000ac f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000ad e2e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000ae e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000af 9185      	LPM  R24,Z+
0000b0 9195      	LPM  R25,Z+
0000b1 9700      	SBIW R24,0
0000b2 f061      	BREQ __GLOBAL_INI_END
0000b3 91a5      	LPM  R26,Z+
0000b4 91b5      	LPM  R27,Z+
0000b5 9005      	LPM  R0,Z+
0000b6 9015      	LPM  R1,Z+
0000b7 01bf      	MOVW R22,R30
0000b8 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000b9 9005      	LPM  R0,Z+
0000ba 920d      	ST   X+,R0
0000bb 9701      	SBIW R24,1
0000bc f7e1      	BRNE __GLOBAL_INI_LOOP
0000bd 01fb      	MOVW R30,R22
0000be cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0000bf bf8b      	OUT  RAMPZ,R24
                 
0000c0 bf8c      	OUT  EIND,R24
                 
                 ;GPIOR0 INITIALIZATION
0000c1 e0e0      	LDI  R30,__GPIOR0_INIT
0000c2 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000c3 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000c4 bfed      	OUT  SPL,R30
0000c5 e2e1      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000c6 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000c7 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000c8 e0da      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000c9 940c 015d 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0xA00
                 
                 	.CSEG
                     .equ __lcd_port=0x02
                     .equ __lcd_EN=1
                     .equ __lcd_RS=0
                     .equ __lcd_D4=2
                     .equ __lcd_D5=3
                     .equ __lcd_D6=4
                     .equ __lcd_D7=5
                 ; 0000 0010    #endasm
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 
                 	.CSEG
                 _SetupLCD:
                 ; .FSTART _SetupLCD
0000cb 972c      	SBIW R28,12
0000cc e08c      	LDI  R24,12
                +
0000cd e060     +LDI R22 , LOW ( 0 )
0000ce e070     +LDI R23 , HIGH ( 0 )
                 	__GETWRN 22,23,0
0000cf efe6      	LDI  R30,LOW(_0x3*2)
0000d0 e0f0      	LDI  R31,HIGH(_0x3*2)
0000d1 d2de      	RCALL __INITLOCB
0000d2 931a      	ST   -Y,R17
                 ;	TableSetup -> Y+1
                 ;	i -> R17
                 ; 0000 0013     SBI __lcd_port-1,__lcd_EN
0000d3 9a09          SBI __lcd_port-1,__lcd_EN
0000d4 9a08          SBI __lcd_port-1,__lcd_RS
0000d5 9a0a          SBI __lcd_port-1,__lcd_D4
0000d6 9a0b          SBI __lcd_port-1,__lcd_D5
0000d7 9a0c          SBI __lcd_port-1,__lcd_D6
0000d8 9a0d          SBI __lcd_port-1,__lcd_D7
0000d9 e3a2      	LDI  R26,LOW(50)
0000da e0b0      	LDI  R27,0
0000db d33f      	RCALL _delay_ms
0000dc e010      	LDI  R17,LOW(0)
                 _0x5:
0000dd 301c      	CPI  R17,12
0000de f470      	BRSH _0x6
0000df e0a2      	LDI  R26,LOW(2)
0000e0 e0b0      	LDI  R27,0
0000e1 d339      	RCALL _delay_ms
0000e2 2fe1      	MOV  R30,R17
0000e3 e0f0      	LDI  R31,0
0000e4 01de      	MOVW R26,R28
0000e5 9611      	ADIW R26,1
0000e6 0fae      	ADD  R26,R30
0000e7 1fbf      	ADC  R27,R31
0000e8 91ac      	LD   R26,X
0000e9 d00d      	RCALL _SendDataBitsLCD
0000ea d009      	RCALL _PulseEn
0000eb 5f1f      	SUBI R17,-1
0000ec cff0      	RJMP _0x5
                 _0x6:
0000ed e0ec      	LDI  R30,LOW(12)
0000ee 2e4e      	MOV  R4,R30
0000ef 2da4      	MOV  R26,R4
0000f0 d01e      	RCALL _WriteComandLCD
0000f1 8118      	LDD  R17,Y+0
0000f2 962d      	ADIW R28,13
0000f3 9508      	RET
                 ; .FEND
                 _PulseEn:
                 ; .FSTART _PulseEn
0000f4 9a11          SBI __lcd_port,__lcd_EN  // EN=1;
0000f5 9811          CBI __lcd_port,__lcd_EN // EN=0;
0000f6 9508      	RET
                 ; .FEND
                 _SendDataBitsLCD:
                 ; .FSTART _SendDataBitsLCD
0000f7 931a      	ST   -Y,R17
0000f8 2f1a      	MOV  R17,R26
                 ;	dato -> R17
0000f9 ff13      	SBRS R17,3
0000fa c002      	RJMP _0x7
0000fb 9a15      	SBI __lcd_port,__lcd_D7
0000fc c001      	RJMP _0x8
                 _0x7:
0000fd 9815      	CBI __lcd_port,__lcd_D7
                 _0x8:
0000fe ff12      	SBRS R17,2
0000ff c002      	RJMP _0x9
000100 9a14      	SBI __lcd_port,__lcd_D6
000101 c001      	RJMP _0xA
                 _0x9:
000102 9814      	CBI __lcd_port,__lcd_D6
                 _0xA:
000103 ff11      	SBRS R17,1
000104 c002      	RJMP _0xB
000105 9a13      	SBI __lcd_port,__lcd_D5
000106 c001      	RJMP _0xC
                 _0xB:
000107 9813      	CBI __lcd_port,__lcd_D5
                 _0xC:
000108 ff10      	SBRS R17,0
000109 c002      	RJMP _0xD
00010a 9a12      	SBI __lcd_port,__lcd_D4
00010b c001      	RJMP _0xE
                 _0xD:
00010c 9812      	CBI __lcd_port,__lcd_D4
                 _0xE:
00010d 9119      	LD   R17,Y+
00010e 9508      	RET
                 ; .FEND
                 _WriteComandLCD:
                 ; .FSTART _WriteComandLCD
00010f 931a      	ST   -Y,R17
000110 930a      	ST   -Y,R16
000111 2f0a      	MOV  R16,R26
                 ;	Comando -> R16
                 ;	tempComando -> R17
000112 9810      	CBI __lcd_port,__lcd_RS
000113 d243      	RCALL SUBOPT_0x0
000114 c08f      	RJMP _0x20A0002
                 ; .FEND
                 _CharLCD:
                 ; .FSTART _CharLCD
000115 931a      	ST   -Y,R17
000116 930a      	ST   -Y,R16
000117 2f0a      	MOV  R16,R26
                 ;	dato -> R16
                 ;	tempdato -> R17
000118 9a10      	SBI __lcd_port,__lcd_RS
000119 d23d      	RCALL SUBOPT_0x0
00011a c089      	RJMP _0x20A0002
                 ; .FEND
                 _StringLCD:
                 ; .FSTART _StringLCD
00011b d288      	RCALL __SAVELOCR4
00011c 019d      	MOVW R18,R26
                 ;	Mensaje -> R18,R19
                 ;	i -> R17
00011d e010      	LDI  R17,LOW(0)
                 _0x10:
00011e d24c      	RCALL SUBOPT_0x1
00011f 91a4      	LPM  R26,Z
000120 dff4      	RCALL _CharLCD
000121 2fe1      	MOV  R30,R17
000122 e0f0      	LDI  R31,0
000123 0fe2      	ADD  R30,R18
000124 1ff3      	ADC  R31,R19
000125 91e4      	LPM  R30,Z
000126 30e0      	CPI  R30,0
000127 f7b1      	BRNE _0x10
000128 c00d      	RJMP _0x20A0003
                 ; .FEND
                 ;	Mensaje -> R20,R21
                 ;	tiempo -> R18,R19
                 ;	i -> R17
                 _StringLCDVar:
                 ; .FSTART _StringLCDVar
000129 d27a      	RCALL __SAVELOCR4
00012a 019d      	MOVW R18,R26
                 ;	Mensaje -> R18,R19
                 ;	i -> R17
00012b e010      	LDI  R17,LOW(0)
                 _0x16:
00012c d23e      	RCALL SUBOPT_0x1
00012d 81a0      	LD   R26,Z
00012e dfe6      	RCALL _CharLCD
00012f 01d9      	MOVW R26,R18
000130 27ee      	CLR  R30
000131 0fa1      	ADD  R26,R17
000132 1fbe      	ADC  R27,R30
000133 91ec      	LD   R30,X
000134 30e0      	CPI  R30,0
000135 f7b1      	BRNE _0x16
                 _0x20A0003:
000136 d274      	RCALL __LOADLOCR4
000137 9624      	ADIW R28,4
000138 9508      	RET
                 ; .FEND
                 _MoveCursor:
                 ; .FSTART _MoveCursor
000139 931a      	ST   -Y,R17
00013a 930a      	ST   -Y,R16
00013b 2f1a      	MOV  R17,R26
00013c 810a      	LDD  R16,Y+2
                 ;	x -> R16
                 ;	y -> R17
00013d 2fe1      	MOV  R30,R17
00013e e0f0      	LDI  R31,0
00013f 9730      	SBIW R30,0
000140 f419      	BRNE _0x1B
000141 2fa0      	MOV  R26,R16
000142 58a0      	SUBI R26,-LOW(128)
000143 c014      	RJMP _0x35
                 _0x1B:
000144 30e1      	CPI  R30,LOW(0x1)
000145 e0a0      	LDI  R26,HIGH(0x1)
000146 07fa      	CPC  R31,R26
000147 f419      	BRNE _0x1C
000148 2fa0      	MOV  R26,R16
000149 54a0      	SUBI R26,-LOW(192)
00014a c00d      	RJMP _0x35
                 _0x1C:
00014b 30e2      	CPI  R30,LOW(0x2)
00014c e0a0      	LDI  R26,HIGH(0x2)
00014d 07fa      	CPC  R31,R26
00014e f419      	BRNE _0x1D
00014f 2fa0      	MOV  R26,R16
000150 56ac      	SUBI R26,-LOW(148)
000151 c006      	RJMP _0x35
                 _0x1D:
000152 30e3      	CPI  R30,LOW(0x3)
000153 e0a0      	LDI  R26,HIGH(0x3)
000154 07fa      	CPC  R31,R26
000155 f419      	BRNE _0x1A
000156 2fa0      	MOV  R26,R16
000157 52ac      	SUBI R26,-LOW(212)
                 _0x35:
000158 dfb6      	RCALL _WriteComandLCD
                 _0x1A:
000159 8119      	LDD  R17,Y+1
00015a 8108      	LDD  R16,Y+0
00015b 9623      	ADIW R28,3
00015c 9508      	RET
                 ; .FEND
                 ;	NoCaracter -> R16
                 ;	datos -> R18,R19
                 ;	i -> R17
                 ;void main(void)
                 ; 0000 001D {
                 _main:
                 ; .FSTART _main
                 ; 0000 001E SetupLCD();
00015d df6d      	RCALL _SetupLCD
                 ; 0000 001F MoveCursor(1,0);
00015e e0e1      	LDI  R30,LOW(1)
00015f 93ea      	ST   -Y,R30
000160 e0a0      	LDI  R26,LOW(0)
000161 dfd7      	RCALL _MoveCursor
                 ; 0000 0020 StringLCD("Random Numbers");
                +
000162 e0a2     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
000163 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
000164 dfb6      	RCALL _StringLCD
                 ; 0000 0021 PORTC.0 = 1; //PC0 con pull-up switch
000165 9a40      	SBI  0x8,0
                 ; 0000 0022 DDRC.1 = 1;  //PC1 de salida Bocina
000166 9a39      	SBI  0x7,1
                 ; 0000 0023 TCCR0B = 0x01;
000167 e0e1      	LDI  R30,LOW(1)
000168 bde5      	OUT  0x25,R30
                 ; 0000 0024 while (1)
                 _0x26:
                 ; 0000 0025 {
                 ; 0000 0026 if(PINC.0==0)
000169 9930      	SBIC 0x6,0
00016a c031      	RJMP _0x29
                 ; 0000 0027 {
                 ; 0000 0028 srand(TCNT0);
00016b b5e6      	IN   R30,0x26
00016c e0f0      	LDI  R31,0
00016d 01df      	MOVW R26,R30
00016e d02f      	RCALL _srand
                 ; 0000 0029 num = rand()%1000;
00016f d037      	RCALL _rand
000170 01df      	MOVW R26,R30
000171 eee8      	LDI  R30,LOW(1000)
000172 e0f3      	LDI  R31,HIGH(1000)
000173 d28c      	RCALL __MODW21
                +
000174 2e5e     +MOV R5 , R30
000175 2e6f     +MOV R6 , R31
                 	__PUTW1R 5,6
                 ; 0000 002A sprintf(Cadena,"%003i",num);
000176 e0e0      	LDI  R30,LOW(_Cadena)
000177 e0fa      	LDI  R31,HIGH(_Cadena)
000178 93fa      	ST   -Y,R31
000179 93ea      	ST   -Y,R30
                +
00017a e1e1     +LDI R30 , LOW ( 2 * _0x0 + ( 15 ) )
00017b e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 15 ) )
                 	__POINTW1FN _0x0,15
00017c 93fa      	ST   -Y,R31
00017d 93ea      	ST   -Y,R30
                +
00017e 2de5     +MOV R30 , R5
00017f 2df6     +MOV R31 , R6
                 	__GETW1R 5,6
000180 2766      	CLR  R22
000181 2777      	CLR  R23
000182 d293      	RCALL __PUTPARD1
000183 e084      	LDI  R24,4
000184 d188      	RCALL _sprintf
000185 9628      	ADIW R28,8
                 ; 0000 002B MoveCursor(6,1);
000186 e0e6      	LDI  R30,LOW(6)
000187 93ea      	ST   -Y,R30
000188 e0a1      	LDI  R26,LOW(1)
000189 dfaf      	RCALL _MoveCursor
                 ; 0000 002C StringLCDVar(Cadena);
00018a e0a0      	LDI  R26,LOW(_Cadena)
00018b e0ba      	LDI  R27,HIGH(_Cadena)
00018c df9c      	RCALL _StringLCDVar
                 ; 0000 002D for (i=0;i<80;i++)
00018d 2433      	CLR  R3
                 _0x2B:
00018e e5e0      	LDI  R30,LOW(80)
00018f 163e      	CP   R3,R30
000190 f430      	BRSH _0x2C
                 ; 0000 002E {
                 ; 0000 002F PORTC.1 = 1;
000191 9a41      	SBI  0x8,1
                 ; 0000 0030 delay_us(1250);
000192 d1de      	RCALL SUBOPT_0x2
                 ; 0000 0031 PORTC.1 = 0;
000193 9841      	CBI  0x8,1
                 ; 0000 0032 delay_us(1250);
000194 d1dc      	RCALL SUBOPT_0x2
                 ; 0000 0033 }
000195 9433      	INC  R3
000196 cff7      	RJMP _0x2B
                 _0x2C:
                 ; 0000 0034 while(PINC.0 == 0);
                 _0x31:
000197 9b30      	SBIS 0x6,0
000198 cffe      	RJMP _0x31
                 ; 0000 0035 delay_ms(10);
000199 e0aa      	LDI  R26,LOW(10)
00019a e0b0      	LDI  R27,0
00019b d27f      	RCALL _delay_ms
                 ; 0000 0036 }
                 ; 0000 0037 }
                 _0x29:
00019c cfcc      	RJMP _0x26
                 ; 0000 0038 }
                 _0x34:
00019d cfff      	RJMP _0x34
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 _srand:
                 ; .FSTART _srand
00019e 931a      	ST   -Y,R17
00019f 930a      	ST   -Y,R16
0001a0 018d      	MOVW R16,R26
0001a1 01f8      	MOVW R30,R16
0001a2 d225      	RCALL __CWD1
0001a3 d1d2      	RCALL SUBOPT_0x3
                 _0x20A0002:
0001a4 9109      	LD   R16,Y+
0001a5 9119      	LD   R17,Y+
0001a6 9508      	RET
                 ; .FEND
                 _rand:
                 ; .FSTART _rand
0001a7 91e0 0a04 	LDS  R30,__seed_G100
0001a9 91f0 0a05 	LDS  R31,__seed_G100+1
0001ab 9160 0a06 	LDS  R22,__seed_G100+2
0001ad 9170 0a07 	LDS  R23,__seed_G100+3
                +
0001af e6ad     +LDI R26 , LOW ( 0x41C64E6D )
0001b0 e4be     +LDI R27 , HIGH ( 0x41C64E6D )
0001b1 ec86     +LDI R24 , BYTE3 ( 0x41C64E6D )
0001b2 e491     +LDI R25 , BYTE4 ( 0x41C64E6D )
                 	__GETD2N 0x41C64E6D
0001b3 d219      	RCALL __MULD12U
                +
0001b4 59ee     +SUBI R30 , LOW ( - 30562 )
0001b5 48f8     +SBCI R31 , HIGH ( - 30562 )
0001b6 4f6f     +SBCI R22 , BYTE3 ( - 30562 )
0001b7 4f7f     +SBCI R23 , BYTE4 ( - 30562 )
                 	__ADDD1N 30562
0001b8 d1bd      	RCALL SUBOPT_0x3
0001b9 01fb      	movw r30,r22
0001ba 77ff      	andi r31,0x7F
0001bb 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
0001bc d1e5      	RCALL __SAVELOCR6
0001bd 019d      	MOVW R18,R26
0001be 815e      	LDD  R21,Y+6
0001bf 9612      	ADIW R26,2
0001c0 d24d      	RCALL __GETW1P
0001c1 9730      	SBIW R30,0
0001c2 f0e1      	BREQ _0x2020016
0001c3 01d9      	MOVW R26,R18
0001c4 9614      	ADIW R26,4
0001c5 d248      	RCALL __GETW1P
0001c6 018f      	MOVW R16,R30
0001c7 9730      	SBIW R30,0
0001c8 f059      	BREQ _0x2020018
                +
0001c9 3002     +CPI R16 , LOW ( 2 )
0001ca e0e0     +LDI R30 , HIGH ( 2 )
0001cb 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0001cc f060      	BRLO _0x2020019
0001cd 01f8      	MOVW R30,R16
0001ce 9731      	SBIW R30,1
0001cf 018f      	MOVW R16,R30
                +
0001d0 01d9     +MOVW R26 , R18
0001d1 9614     +ADIW R26 , 4
0001d2 93ed     +ST X + , R30
0001d3 93fc     +ST X , R31
                 	__PUTW1RNS 18,4
                 _0x2020018:
0001d4 01d9      	MOVW R26,R18
0001d5 9612      	ADIW R26,2
0001d6 d1a8      	RCALL SUBOPT_0x4
0001d7 9731      	SBIW R30,1
0001d8 8350      	ST   Z,R21
                 _0x2020019:
0001d9 01d9      	MOVW R26,R18
0001da d233      	RCALL __GETW1P
0001db 23ff      	TST  R31
0001dc f00a      	BRMI _0x202001A
0001dd d1a1      	RCALL SUBOPT_0x4
                 _0x202001A:
0001de c005      	RJMP _0x202001B
                 _0x2020016:
0001df 01d9      	MOVW R26,R18
0001e0 efef      	LDI  R30,LOW(65535)
0001e1 efff      	LDI  R31,HIGH(65535)
0001e2 93ed      	ST   X+,R30
0001e3 93fc      	ST   X,R31
                 _0x202001B:
0001e4 d1c4      	RCALL __LOADLOCR6
0001e5 9627      	ADIW R28,7
0001e6 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0001e7 93ba      	ST   -Y,R27
0001e8 93aa      	ST   -Y,R26
0001e9 9726      	SBIW R28,6
0001ea d1b7      	RCALL __SAVELOCR6
0001eb e010      	LDI  R17,0
0001ec 85ac      	LDD  R26,Y+12
0001ed 85bd      	LDD  R27,Y+12+1
0001ee e0e0      	LDI  R30,LOW(0)
0001ef e0f0      	LDI  R31,HIGH(0)
0001f0 93ed      	ST   X+,R30
0001f1 93fc      	ST   X,R31
                 _0x202001C:
0001f2 89ea      	LDD  R30,Y+18
0001f3 89fb      	LDD  R31,Y+18+1
0001f4 9631      	ADIW R30,1
0001f5 8bea      	STD  Y+18,R30
0001f6 8bfb      	STD  Y+18+1,R31
0001f7 9731      	SBIW R30,1
0001f8 91e4      	LPM  R30,Z
0001f9 2f2e      	MOV  R18,R30
0001fa 30e0      	CPI  R30,0
0001fb f409      	BRNE PC+2
0001fc c109      	RJMP _0x202001E
0001fd 2fe1      	MOV  R30,R17
0001fe 30e0      	CPI  R30,0
0001ff f431      	BRNE _0x2020022
000200 3225      	CPI  R18,37
000201 f411      	BRNE _0x2020023
000202 e011      	LDI  R17,LOW(1)
000203 c001      	RJMP _0x2020024
                 _0x2020023:
000204 d180      	RCALL SUBOPT_0x5
                 _0x2020024:
000205 c0ff      	RJMP _0x2020021
                 _0x2020022:
000206 30e1      	CPI  R30,LOW(0x1)
000207 f4a1      	BRNE _0x2020025
000208 3225      	CPI  R18,37
000209 f411      	BRNE _0x2020026
00020a d17a      	RCALL SUBOPT_0x5
00020b c0f8      	RJMP _0x20200D2
                 _0x2020026:
00020c e012      	LDI  R17,LOW(2)
00020d e040      	LDI  R20,LOW(0)
00020e e000      	LDI  R16,LOW(0)
00020f 322d      	CPI  R18,45
000210 f411      	BRNE _0x2020027
000211 e001      	LDI  R16,LOW(1)
000212 c0f2      	RJMP _0x2020021
                 _0x2020027:
000213 322b      	CPI  R18,43
000214 f411      	BRNE _0x2020028
000215 e24b      	LDI  R20,LOW(43)
000216 c0ee      	RJMP _0x2020021
                 _0x2020028:
000217 3220      	CPI  R18,32
000218 f411      	BRNE _0x2020029
000219 e240      	LDI  R20,LOW(32)
00021a c0ea      	RJMP _0x2020021
                 _0x2020029:
00021b c002      	RJMP _0x202002A
                 _0x2020025:
00021c 30e2      	CPI  R30,LOW(0x2)
00021d f439      	BRNE _0x202002B
                 _0x202002A:
00021e e050      	LDI  R21,LOW(0)
00021f e013      	LDI  R17,LOW(3)
000220 3320      	CPI  R18,48
000221 f411      	BRNE _0x202002C
000222 6800      	ORI  R16,LOW(128)
000223 c0e1      	RJMP _0x2020021
                 _0x202002C:
000224 c003      	RJMP _0x202002D
                 _0x202002B:
000225 30e3      	CPI  R30,LOW(0x3)
000226 f009      	BREQ PC+2
000227 c0dd      	RJMP _0x2020021
                 _0x202002D:
000228 3320      	CPI  R18,48
000229 f010      	BRLO _0x2020030
00022a 332a      	CPI  R18,58
00022b f008      	BRLO _0x2020031
                 _0x2020030:
00022c c007      	RJMP _0x202002F
                 _0x2020031:
00022d e0aa      	LDI  R26,LOW(10)
00022e 9f5a      	MUL  R21,R26
00022f 2d50      	MOV  R21,R0
000230 2fe2      	MOV  R30,R18
000231 53e0      	SUBI R30,LOW(48)
000232 0f5e      	ADD  R21,R30
000233 c0d1      	RJMP _0x2020021
                 _0x202002F:
000234 2fe2      	MOV  R30,R18
000235 36e3      	CPI  R30,LOW(0x63)
000236 f439      	BRNE _0x2020035
000237 d154      	RCALL SUBOPT_0x6
000238 89e8      	LDD  R30,Y+16
000239 89f9      	LDD  R31,Y+16+1
00023a 81a4      	LDD  R26,Z+4
00023b 93aa      	ST   -Y,R26
00023c d155      	RCALL SUBOPT_0x7
00023d c0c6      	RJMP _0x2020036
                 _0x2020035:
00023e 37e3      	CPI  R30,LOW(0x73)
00023f f429      	BRNE _0x2020038
000240 d14b      	RCALL SUBOPT_0x6
000241 d156      	RCALL SUBOPT_0x8
000242 d0fb      	RCALL _strlen
000243 2f1e      	MOV  R17,R30
000244 c007      	RJMP _0x2020039
                 _0x2020038:
000245 37e0      	CPI  R30,LOW(0x70)
000246 f449      	BRNE _0x202003B
000247 d144      	RCALL SUBOPT_0x6
000248 d14f      	RCALL SUBOPT_0x8
000249 d100      	RCALL _strlenf
00024a 2f1e      	MOV  R17,R30
00024b 6008      	ORI  R16,LOW(8)
                 _0x2020039:
00024c 6002      	ORI  R16,LOW(2)
00024d 770f      	ANDI R16,LOW(127)
00024e e030      	LDI  R19,LOW(0)
00024f c038      	RJMP _0x202003C
                 _0x202003B:
000250 36e4      	CPI  R30,LOW(0x64)
000251 f011      	BREQ _0x202003F
000252 36e9      	CPI  R30,LOW(0x69)
000253 f411      	BRNE _0x2020040
                 _0x202003F:
000254 6004      	ORI  R16,LOW(4)
000255 c002      	RJMP _0x2020041
                 _0x2020040:
000256 37e5      	CPI  R30,LOW(0x75)
000257 f431      	BRNE _0x2020042
                 _0x2020041:
000258 eee4      	LDI  R30,LOW(_tbl10_G101*2)
000259 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
00025a 83ee      	STD  Y+6,R30
00025b 83ff      	STD  Y+6+1,R31
00025c e015      	LDI  R17,LOW(5)
00025d c00c      	RJMP _0x2020043
                 _0x2020042:
00025e 35e8      	CPI  R30,LOW(0x58)
00025f f411      	BRNE _0x2020045
000260 6008      	ORI  R16,LOW(8)
000261 c003      	RJMP _0x2020046
                 _0x2020045:
000262 37e8      	CPI  R30,LOW(0x78)
000263 f009      	BREQ PC+2
000264 c09f      	RJMP _0x2020077
                 _0x2020046:
000265 eeee      	LDI  R30,LOW(_tbl16_G101*2)
000266 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000267 83ee      	STD  Y+6,R30
000268 83ff      	STD  Y+6+1,R31
000269 e014      	LDI  R17,LOW(4)
                 _0x2020043:
00026a ff02      	SBRS R16,2
00026b c015      	RJMP _0x2020048
00026c d11f      	RCALL SUBOPT_0x6
00026d 89a8      	LDD  R26,Y+16
00026e 89b9      	LDD  R27,Y+16+1
00026f 9614      	ADIW R26,4
000270 91ed      	LD   R30,X+
000271 91fd      	LD   R31,X+
000272 87ea      	STD  Y+10,R30
000273 87fb      	STD  Y+10+1,R31
000274 85ab      	LDD  R26,Y+11
000275 23aa      	TST  R26
000276 f422      	BRPL _0x2020049
000277 d14c      	RCALL __ANEGW1
000278 87ea      	STD  Y+10,R30
000279 87fb      	STD  Y+10+1,R31
00027a e24d      	LDI  R20,LOW(45)
                 _0x2020049:
00027b 3040      	CPI  R20,0
00027c f011      	BREQ _0x202004A
00027d 5f1f      	SUBI R17,-LOW(1)
00027e c001      	RJMP _0x202004B
                 _0x202004A:
00027f 7f0b      	ANDI R16,LOW(251)
                 _0x202004B:
000280 c007      	RJMP _0x202004C
                 _0x2020048:
000281 d10a      	RCALL SUBOPT_0x6
000282 89a8      	LDD  R26,Y+16
000283 89b9      	LDD  R27,Y+16+1
000284 9614      	ADIW R26,4
000285 d188      	RCALL __GETW1P
000286 87ea      	STD  Y+10,R30
000287 87fb      	STD  Y+10+1,R31
                 _0x202004C:
                 _0x202003C:
000288 fd00      	SBRC R16,0
000289 c010      	RJMP _0x202004D
                 _0x202004E:
00028a 1715      	CP   R17,R21
00028b f470      	BRSH _0x2020050
00028c ff07      	SBRS R16,7
00028d c008      	RJMP _0x2020051
00028e ff02      	SBRS R16,2
00028f c004      	RJMP _0x2020052
000290 7f0b      	ANDI R16,LOW(251)
000291 2f24      	MOV  R18,R20
000292 5011      	SUBI R17,LOW(1)
000293 c001      	RJMP _0x2020053
                 _0x2020052:
000294 e320      	LDI  R18,LOW(48)
                 _0x2020053:
000295 c001      	RJMP _0x2020054
                 _0x2020051:
000296 e220      	LDI  R18,LOW(32)
                 _0x2020054:
000297 d0ed      	RCALL SUBOPT_0x5
000298 5051      	SUBI R21,LOW(1)
000299 cff0      	RJMP _0x202004E
                 _0x2020050:
                 _0x202004D:
00029a 2f31      	MOV  R19,R17
00029b ff01      	SBRS R16,1
00029c c016      	RJMP _0x2020055
                 _0x2020056:
00029d 3030      	CPI  R19,0
00029e f099      	BREQ _0x2020058
00029f ff03      	SBRS R16,3
0002a0 c006      	RJMP _0x2020059
0002a1 81ee      	LDD  R30,Y+6
0002a2 81ff      	LDD  R31,Y+6+1
0002a3 9125      	LPM  R18,Z+
0002a4 83ee      	STD  Y+6,R30
0002a5 83ff      	STD  Y+6+1,R31
0002a6 c005      	RJMP _0x202005A
                 _0x2020059:
0002a7 81ae      	LDD  R26,Y+6
0002a8 81bf      	LDD  R27,Y+6+1
0002a9 912d      	LD   R18,X+
0002aa 83ae      	STD  Y+6,R26
0002ab 83bf      	STD  Y+6+1,R27
                 _0x202005A:
0002ac d0d8      	RCALL SUBOPT_0x5
0002ad 3050      	CPI  R21,0
0002ae f009      	BREQ _0x202005B
0002af 5051      	SUBI R21,LOW(1)
                 _0x202005B:
0002b0 5031      	SUBI R19,LOW(1)
0002b1 cfeb      	RJMP _0x2020056
                 _0x2020058:
0002b2 c048      	RJMP _0x202005C
                 _0x2020055:
                 _0x202005E:
0002b3 e320      	LDI  R18,LOW(48)
0002b4 81ee      	LDD  R30,Y+6
0002b5 81ff      	LDD  R31,Y+6+1
0002b6 d15b      	RCALL __GETW1PF
0002b7 87e8      	STD  Y+8,R30
0002b8 87f9      	STD  Y+8+1,R31
0002b9 81ee      	LDD  R30,Y+6
0002ba 81ff      	LDD  R31,Y+6+1
0002bb 9632      	ADIW R30,2
0002bc 83ee      	STD  Y+6,R30
0002bd 83ff      	STD  Y+6+1,R31
                 _0x2020060:
0002be 85e8      	LDD  R30,Y+8
0002bf 85f9      	LDD  R31,Y+8+1
0002c0 85aa      	LDD  R26,Y+10
0002c1 85bb      	LDD  R27,Y+10+1
0002c2 17ae      	CP   R26,R30
0002c3 07bf      	CPC  R27,R31
0002c4 f050      	BRLO _0x2020062
0002c5 5f2f      	SUBI R18,-LOW(1)
0002c6 85a8      	LDD  R26,Y+8
0002c7 85b9      	LDD  R27,Y+8+1
0002c8 85ea      	LDD  R30,Y+10
0002c9 85fb      	LDD  R31,Y+10+1
0002ca 1bea      	SUB  R30,R26
0002cb 0bfb      	SBC  R31,R27
0002cc 87ea      	STD  Y+10,R30
0002cd 87fb      	STD  Y+10+1,R31
0002ce cfef      	RJMP _0x2020060
                 _0x2020062:
0002cf 332a      	CPI  R18,58
0002d0 f028      	BRLO _0x2020063
0002d1 ff03      	SBRS R16,3
0002d2 c002      	RJMP _0x2020064
0002d3 5f29      	SUBI R18,-LOW(7)
0002d4 c001      	RJMP _0x2020065
                 _0x2020064:
0002d5 5d29      	SUBI R18,-LOW(39)
                 _0x2020065:
                 _0x2020063:
0002d6 fd04      	SBRC R16,4
0002d7 c019      	RJMP _0x2020067
0002d8 3321      	CPI  R18,49
0002d9 f420      	BRSH _0x2020069
0002da 85a8      	LDD  R26,Y+8
0002db 85b9      	LDD  R27,Y+8+1
0002dc 9711      	SBIW R26,1
0002dd f409      	BRNE _0x2020068
                 _0x2020069:
0002de c009      	RJMP _0x20200D3
                 _0x2020068:
0002df 1753      	CP   R21,R19
0002e0 f010      	BRLO _0x202006D
0002e1 ff00      	SBRS R16,0
0002e2 c001      	RJMP _0x202006E
                 _0x202006D:
0002e3 c011      	RJMP _0x202006C
                 _0x202006E:
0002e4 e220      	LDI  R18,LOW(32)
0002e5 ff07      	SBRS R16,7
0002e6 c00a      	RJMP _0x202006F
0002e7 e320      	LDI  R18,LOW(48)
                 _0x20200D3:
0002e8 6100      	ORI  R16,LOW(16)
0002e9 ff02      	SBRS R16,2
0002ea c006      	RJMP _0x2020070
0002eb 7f0b      	ANDI R16,LOW(251)
0002ec 934a      	ST   -Y,R20
0002ed d0a4      	RCALL SUBOPT_0x7
0002ee 3050      	CPI  R21,0
0002ef f009      	BREQ _0x2020071
0002f0 5051      	SUBI R21,LOW(1)
                 _0x2020071:
                 _0x2020070:
                 _0x202006F:
                 _0x2020067:
0002f1 d093      	RCALL SUBOPT_0x5
0002f2 3050      	CPI  R21,0
0002f3 f009      	BREQ _0x2020072
0002f4 5051      	SUBI R21,LOW(1)
                 _0x2020072:
                 _0x202006C:
0002f5 5031      	SUBI R19,LOW(1)
0002f6 85a8      	LDD  R26,Y+8
0002f7 85b9      	LDD  R27,Y+8+1
0002f8 9712      	SBIW R26,2
0002f9 f008      	BRLO _0x202005F
0002fa cfb8      	RJMP _0x202005E
                 _0x202005F:
                 _0x202005C:
0002fb ff00      	SBRS R16,0
0002fc c007      	RJMP _0x2020073
                 _0x2020074:
0002fd 3050      	CPI  R21,0
0002fe f029      	BREQ _0x2020076
0002ff 5051      	SUBI R21,LOW(1)
000300 e2e0      	LDI  R30,LOW(32)
000301 93ea      	ST   -Y,R30
000302 d08f      	RCALL SUBOPT_0x7
000303 cff9      	RJMP _0x2020074
                 _0x2020076:
                 _0x2020073:
                 _0x2020077:
                 _0x2020036:
                 _0x20200D2:
000304 e010      	LDI  R17,LOW(0)
                 _0x2020021:
000305 ceec      	RJMP _0x202001C
                 _0x202001E:
000306 85ac      	LDD  R26,Y+12
000307 85bd      	LDD  R27,Y+12+1
000308 91ed      	LD   R30,X+
000309 91fd      	LD   R31,X+
00030a d09e      	RCALL __LOADLOCR6
00030b 9664      	ADIW R28,20
00030c 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
00030d 92ff      	PUSH R15
00030e 2ef8      	MOV  R15,R24
00030f 9726      	SBIW R28,6
000310 d091      	RCALL __SAVELOCR6
000311 01fe      	MOVW R30,R28
000312 d0a9      	RCALL __ADDW1R15
                +
000313 8546     +LDD R20 , Z + 14
000314 8557     +LDD R21 , Z + 14 + 1
                 	__GETWRZ 20,21,14
000315 2e04      	MOV  R0,R20
000316 2a05      	OR   R0,R21
000317 f419      	BRNE _0x2020078
000318 efef      	LDI  R30,LOW(65535)
000319 efff      	LDI  R31,HIGH(65535)
00031a c01f      	RJMP _0x20A0001
                 _0x2020078:
00031b 01de      	MOVW R26,R28
00031c 9618      	ADIW R26,8
00031d d0a2      	RCALL __ADDW2R15
00031e 018d      	MOVW R16,R26
                +
00031f 8748     +STD Y + 8 , R20
000320 8759     +STD Y + 8 + 1 , R21
                 	__PUTWSR 20,21,8
000321 e0e0      	LDI  R30,LOW(0)
000322 87ea      	STD  Y+10,R30
000323 87eb      	STD  Y+10+1,R30
000324 01de      	MOVW R26,R28
000325 961c      	ADIW R26,12
000326 d099      	RCALL __ADDW2R15
000327 91ed      	LD   R30,X+
000328 91fd      	LD   R31,X+
000329 93fa      	ST   -Y,R31
00032a 93ea      	ST   -Y,R30
00032b 931a      	ST   -Y,R17
00032c 930a      	ST   -Y,R16
00032d ebec      	LDI  R30,LOW(_put_buff_G101)
00032e e0f1      	LDI  R31,HIGH(_put_buff_G101)
00032f 93fa      	ST   -Y,R31
000330 93ea      	ST   -Y,R30
000331 01de      	MOVW R26,R28
000332 961c      	ADIW R26,12
000333 deb3      	RCALL __print_G101
000334 019f      	MOVW R18,R30
000335 85a8      	LDD  R26,Y+8
000336 85b9      	LDD  R27,Y+8+1
000337 e0e0      	LDI  R30,LOW(0)
000338 93ec      	ST   X,R30
000339 01f9      	MOVW R30,R18
                 _0x20A0001:
00033a d06e      	RCALL __LOADLOCR6
00033b 962c      	ADIW R28,12
00033c 90ff      	POP  R15
00033d 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
00033e 93ba      	ST   -Y,R27
00033f 93aa      	ST   -Y,R26
000340 91a9          ld   r26,y+
000341 91b9          ld   r27,y+
000342 27ee          clr  r30
000343 27ff          clr  r31
                 strlen0:
000344 916d          ld   r22,x+
000345 2366          tst  r22
000346 f011          breq strlen1
000347 9631          adiw r30,1
000348 cffb          rjmp strlen0
                 strlen1:
000349 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00034a 93ba      	ST   -Y,R27
00034b 93aa      	ST   -Y,R26
00034c 27aa          clr  r26
00034d 27bb          clr  r27
00034e 91e9          ld   r30,y+
00034f 91f9          ld   r31,y+
                 strlenf0:
000350 9005      	lpm  r0,z+
000351 2000          tst  r0
000352 f011          breq strlenf1
000353 9611          adiw r26,1
000354 cffb          rjmp strlenf0
                 strlenf1:
000355 01fd          movw r30,r26
000356 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _Cadena:
000a00           	.BYTE 0x4
                 __seed_G100:
000a04           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x0:
000357 e0a2      	LDI  R26,LOW(2)
000358 e0b0      	LDI  R27,0
000359 d0c1      	RCALL _delay_ms
00035a 2fe0      	MOV  R30,R16
00035b 7fe0      	ANDI R30,LOW(0xF0)
00035c 2f1e      	MOV  R17,R30
00035d 9512      	SWAP R17
00035e 701f      	ANDI R17,0xF
00035f 2fa1      	MOV  R26,R17
000360 dd96      	RCALL _SendDataBitsLCD
000361 dd92      	RCALL _PulseEn
000362 2fe0      	MOV  R30,R16
000363 70ef      	ANDI R30,LOW(0xF)
000364 2f1e      	MOV  R17,R30
000365 2fa1      	MOV  R26,R17
000366 dd90      	RCALL _SendDataBitsLCD
000367 e0a2      	LDI  R26,LOW(2)
000368 e0b0      	LDI  R27,0
000369 d0b1      	RCALL _delay_ms
00036a cd89      	RJMP _PulseEn
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
00036b 2fe1      	MOV  R30,R17
00036c 5f1f      	SUBI R17,-1
00036d e0f0      	LDI  R31,0
00036e 0fe2      	ADD  R30,R18
00036f 1ff3      	ADC  R31,R19
000370 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
                +
000371 e888     +LDI R24 , LOW ( 5000 )
000372 e193     +LDI R25 , HIGH ( 5000 )
                +__DELAY_USW_LOOP :
000373 9701     +SBIW R24 , 1
000374 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 5000
000375 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3:
000376 93e0 0a04 	STS  __seed_G100,R30
000378 93f0 0a05 	STS  __seed_G100+1,R31
00037a 9360 0a06 	STS  __seed_G100+2,R22
00037c 9370 0a07 	STS  __seed_G100+3,R23
00037e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
00037f 91ed      	LD   R30,X+
000380 91fd      	LD   R31,X+
000381 9631      	ADIW R30,1
000382 93fe      	ST   -X,R31
000383 93ee      	ST   -X,R30
000384 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x5:
000385 932a      	ST   -Y,R18
000386 85ad      	LDD  R26,Y+13
000387 85be      	LDD  R27,Y+13+1
000388 85ef      	LDD  R30,Y+15
000389 89f8      	LDD  R31,Y+15+1
00038a 9509      	ICALL
00038b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x6:
00038c 89e8      	LDD  R30,Y+16
00038d 89f9      	LDD  R31,Y+16+1
00038e 9734      	SBIW R30,4
00038f 8be8      	STD  Y+16,R30
000390 8bf9      	STD  Y+16+1,R31
000391 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7:
000392 85ad      	LDD  R26,Y+13
000393 85be      	LDD  R27,Y+13+1
000394 85ef      	LDD  R30,Y+15
000395 89f8      	LDD  R31,Y+15+1
000396 9509      	ICALL
000397 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8:
000398 89a8      	LDD  R26,Y+16
000399 89b9      	LDD  R27,Y+16+1
00039a 9614      	ADIW R26,4
00039b 91ed      	LD   R30,X+
00039c 91fd      	LD   R31,X+
00039d 83ee      	STD  Y+6,R30
00039e 83ff      	STD  Y+6+1,R31
00039f 81ae      	LDD  R26,Y+6
0003a0 81bf      	LDD  R27,Y+6+1
0003a1 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
0003a2 935a      	ST   -Y,R21
                 __SAVELOCR5:
0003a3 934a      	ST   -Y,R20
                 __SAVELOCR4:
0003a4 933a      	ST   -Y,R19
                 __SAVELOCR3:
0003a5 932a      	ST   -Y,R18
                 __SAVELOCR2:
0003a6 931a      	ST   -Y,R17
0003a7 930a      	ST   -Y,R16
0003a8 9508      	RET
                 
                 __LOADLOCR6:
0003a9 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0003aa 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0003ab 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0003ac 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0003ad 8119      	LDD  R17,Y+1
0003ae 8108      	LD   R16,Y
0003af 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
0003b0 93af      	PUSH R26
0003b1 93bf      	PUSH R27
0003b2 01db      	MOVW R26,R22
0003b3 0fac      	ADD  R26,R28
0003b4 1fbd      	ADC  R27,R29
                 __INITLOC0:
0003b5 9005      	LPM  R0,Z+
0003b6 920d      	ST   X+,R0
0003b7 958a      	DEC  R24
0003b8 f7e1      	BRNE __INITLOC0
0003b9 91bf      	POP  R27
0003ba 91af      	POP  R26
0003bb 9508      	RET
                 
                 __ADDW1R15:
0003bc 2400      	CLR  R0
0003bd 0def      	ADD  R30,R15
0003be 1df0      	ADC  R31,R0
0003bf 9508      	RET
                 
                 __ADDW2R15:
0003c0 2400      	CLR  R0
0003c1 0daf      	ADD  R26,R15
0003c2 1db0      	ADC  R27,R0
0003c3 9508      	RET
                 
                 __ANEGW1:
0003c4 95f1      	NEG  R31
0003c5 95e1      	NEG  R30
0003c6 40f0      	SBCI R31,0
0003c7 9508      	RET
                 
                 __CWD1:
0003c8 2f6f      	MOV  R22,R31
0003c9 0f66      	ADD  R22,R22
0003ca 0b66      	SBC  R22,R22
0003cb 2f76      	MOV  R23,R22
0003cc 9508      	RET
                 
                 __MULD12U:
0003cd 9f7a      	MUL  R23,R26
0003ce 2d70      	MOV  R23,R0
0003cf 9f6b      	MUL  R22,R27
0003d0 0d70      	ADD  R23,R0
0003d1 9ff8      	MUL  R31,R24
0003d2 0d70      	ADD  R23,R0
0003d3 9fe9      	MUL  R30,R25
0003d4 0d70      	ADD  R23,R0
0003d5 9f6a      	MUL  R22,R26
0003d6 2d60      	MOV  R22,R0
0003d7 0d71      	ADD  R23,R1
0003d8 9ffb      	MUL  R31,R27
0003d9 0d60      	ADD  R22,R0
0003da 1d71      	ADC  R23,R1
0003db 9fe8      	MUL  R30,R24
0003dc 0d60      	ADD  R22,R0
0003dd 1d71      	ADC  R23,R1
0003de 2788      	CLR  R24
0003df 9ffa      	MUL  R31,R26
0003e0 2df0      	MOV  R31,R0
0003e1 0d61      	ADD  R22,R1
0003e2 1f78      	ADC  R23,R24
0003e3 9feb      	MUL  R30,R27
0003e4 0df0      	ADD  R31,R0
0003e5 1d61      	ADC  R22,R1
0003e6 1f78      	ADC  R23,R24
0003e7 9fea      	MUL  R30,R26
0003e8 2de0      	MOV  R30,R0
0003e9 0df1      	ADD  R31,R1
0003ea 1f68      	ADC  R22,R24
0003eb 1f78      	ADC  R23,R24
0003ec 9508      	RET
                 
                 __DIVW21U:
0003ed 2400      	CLR  R0
0003ee 2411      	CLR  R1
0003ef e190      	LDI  R25,16
                 __DIVW21U1:
0003f0 0faa      	LSL  R26
0003f1 1fbb      	ROL  R27
0003f2 1c00      	ROL  R0
0003f3 1c11      	ROL  R1
0003f4 1a0e      	SUB  R0,R30
0003f5 0a1f      	SBC  R1,R31
0003f6 f418      	BRCC __DIVW21U2
0003f7 0e0e      	ADD  R0,R30
0003f8 1e1f      	ADC  R1,R31
0003f9 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
0003fa 60a1      	SBR  R26,1
                 __DIVW21U3:
0003fb 959a      	DEC  R25
0003fc f799      	BRNE __DIVW21U1
0003fd 01fd      	MOVW R30,R26
0003fe 01d0      	MOVW R26,R0
0003ff 9508      	RET
                 
                 __MODW21:
000400 94e8      	CLT
000401 ffb7      	SBRS R27,7
000402 c004      	RJMP __MODW211
000403 95b1      	NEG  R27
000404 95a1      	NEG  R26
000405 40b0      	SBCI R27,0
000406 9468      	SET
                 __MODW211:
000407 fdf7      	SBRC R31,7
000408 dfbb      	RCALL __ANEGW1
000409 dfe3      	RCALL __DIVW21U
00040a 01fd      	MOVW R30,R26
00040b f40e      	BRTC __MODW212
00040c dfb7      	RCALL __ANEGW1
                 __MODW212:
00040d 9508      	RET
                 
                 __GETW1P:
00040e 91ed      	LD   R30,X+
00040f 91fc      	LD   R31,X
000410 9711      	SBIW R26,1
000411 9508      	RET
                 
                 __GETW1PF:
000412 9005      	LPM  R0,Z+
000413 91f4      	LPM  R31,Z
000414 2de0      	MOV  R30,R0
000415 9508      	RET
                 
                 __PUTPARD1:
000416 937a      	ST   -Y,R23
000417 936a      	ST   -Y,R22
000418 93fa      	ST   -Y,R31
000419 93ea      	ST   -Y,R30
00041a 9508      	RET
                 
                 _delay_ms:
00041b 9610      	adiw r26,0
00041c f039      	breq __delay_ms1
                 __delay_ms0:
00041d 95a8      	wdr
                +
00041e ea80     +LDI R24 , LOW ( 0xFA0 )
00041f e09f     +LDI R25 , HIGH ( 0xFA0 )
                +__DELAY_USW_LOOP :
000420 9701     +SBIW R24 , 1
000421 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA0
000422 9711      	sbiw r26,1
000423 f7c9      	brne __delay_ms0
                 __delay_ms1:
000424 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega2560 register use summary:
r0 :  32 r1 :  11 r2 :   0 r3 :   3 r4 :   2 r5 :   2 r6 :   2 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   5 
r16:  49 r17:  51 r18:  40 r19:  10 r20:  12 r21:  22 r22:  26 r23:  18 
r24:  25 r25:   8 r26: 117 r27:  46 r28:  17 r29:   2 r30: 171 r31:  86 
x  :  29 y  : 139 z  :  20 
Registers used: 26 out of 35 (74.3%)

ATmega2560 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  15 add   :  19 
adiw  :  24 and   :   0 andi  :   8 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  15 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   7 
brlt  :   0 brmi  :   1 brne  :  32 brpl  :   1 brsh  :   4 brtc  :   1 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   7 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  15 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   5 cpi   :  36 cpse  :   0 dec   :   3 des   :   0 
eicall:   0 eijmp :   0 elpm  :   0 eor   :   0 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   2 ijmp  :   0 in    :   1 inc   :   1 jmp   :  58 
ld    :  25 ldd   :  62 ldi   : 104 lds   :   4 lpm   :  19 lsl   :   1 
lsr   :   0 mov   :  42 movw  :  33 mul   :  11 muls  :   0 mulsu :   0 
neg   :   4 nop   :   0 or    :   1 ori   :   6 out   :   9 pop   :   3 
push  :   3 rcall :  76 ret   :  34 reti  :   0 rjmp  :  75 rol   :   3 
ror   :   0 sbc   :   3 sbci  :   5 sbi   :  15 sbic  :   1 sbis  :   1 
sbiw  :  19 sbr   :   1 sbrc  :   3 sbrs  :  15 sec   :   0 seh   :   0 
sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   1 sev   :   0 
sez   :   0 sleep :   0 spm   :   0 st    :  56 std   :  30 sts   :   6 
sub   :   2 subi  :  20 swap  :   1 tst   :   4 wdr   :   1 
Instructions used: 61 out of 119 (51.3%)

ATmega2560 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00084a   2050     72   2122  262144   0.8%
[.dseg] 0x000200 0x000a08      0      8      8    8192   0.1%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 7 warnings
