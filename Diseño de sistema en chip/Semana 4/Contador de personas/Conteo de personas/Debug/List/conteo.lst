
AVRASM ver. 2.1.30  C:\Users\ManuelNeri\Desktop\Conteo de personas\Debug\List\conteo.asm Fri Apr 23 15:11:11 2021

                 
                 
                 ;CodeVisionAVR C Compiler V3.43 Evaluation
                 ;(C) Copyright 1998-2021 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega2560
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 2048 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: Off
                 ;Smart register allocation: Off
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega2560
                 	#pragma AVRPART MEMORY PROG_FLASH 262144
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 8192
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x200
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU RAMPZ=0x3B
                 	.EQU EIND=0x3C
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x74
                 	.EQU XMCRB=0x75
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0200
                 	.EQU __SRAM_END=0x21FF
                 	.EQU __DSTACK_SIZE=0x0800
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 008c 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
000046 940c 0000 	JMP  0x00
000048 940c 0000 	JMP  0x00
00004a 940c 0000 	JMP  0x00
00004c 940c 0000 	JMP  0x00
00004e 940c 0000 	JMP  0x00
000050 940c 0000 	JMP  0x00
000052 940c 0000 	JMP  0x00
000054 940c 0000 	JMP  0x00
000056 940c 0000 	JMP  0x00
000058 940c 0000 	JMP  0x00
00005a 940c 0000 	JMP  0x00
00005c 940c 0000 	JMP  0x00
00005e 940c 0000 	JMP  0x00
000060 940c 0000 	JMP  0x00
000062 940c 0000 	JMP  0x00
000064 940c 0000 	JMP  0x00
000066 940c 0000 	JMP  0x00
000068 940c 0000 	JMP  0x00
00006a 940c 0000 	JMP  0x00
00006c 940c 0000 	JMP  0x00
00006e 940c 0000 	JMP  0x00
000070 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
000072 2710
000073 03e8
000074 0064
000075 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000076 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000077 1000
000078 0100
000079 0010
00007a 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x3:
00007b 0303
00007c 0203
00007d 0c02
00007e 0800      	.DB  0x3,0x3,0x3,0x2,0x2,0xC,0x0,0x8
00007f 0100
000080 0600      	.DB  0x0,0x1,0x0,0x6
                 _0x0:
000081 6550
000082 706f
000083 656c
000084 4320      	.DB  0x50,0x65,0x6F,0x70,0x6C,0x65,0x20,0x43
000085 756f
000086 746e
000087 7265
000088 2500      	.DB  0x6F,0x75,0x6E,0x74,0x65,0x72,0x0,0x25
000089 2569
00008a 2569
00008b 0069      	.DB  0x69,0x25,0x69,0x25,0x69,0x0
                 __RESET:
00008c 94f8      	CLI
00008d 27ee      	CLR  R30
00008e bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00008f e0f1      	LDI  R31,1
000090 bff5      	OUT  MCUCR,R31
000091 bfe5      	OUT  MCUCR,R30
000092 93e0 0074 	STS  XMCRA,R30
000094 93e0 0075 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000096 e08d      	LDI  R24,(14-2)+1
000097 e0a2      	LDI  R26,2
000098 27bb      	CLR  R27
                 __CLEAR_REG:
000099 93ed      	ST   X+,R30
00009a 958a      	DEC  R24
00009b f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00009c e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00009d e290      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00009e e0a0      	LDI  R26,LOW(__SRAM_START)
00009f e0b2      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0000a0 93ed      	ST   X+,R30
0000a1 9701      	SBIW R24,1
0000a2 f7e9      	BRNE __CLEAR_SRAM
                 
0000a3 bf8b      	OUT  RAMPZ,R24
                 
0000a4 bf8c      	OUT  EIND,R24
                 
                 ;GPIOR0 INITIALIZATION
0000a5 e0e0      	LDI  R30,__GPIOR0_INIT
0000a6 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000a7 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000a8 bfed      	OUT  SPL,R30
0000a9 e2e1      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000aa bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000ab e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000ac e0da      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000ad 940c 0154 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0xA00
                 
                 	.CSEG
                     .equ __lcd_port=0x02
                     .equ __lcd_EN=1
                     .equ __lcd_RS=0
                     .equ __lcd_D4=2
                     .equ __lcd_D5=3
                     .equ __lcd_D6=4
                     .equ __lcd_D7=5
                 ; 0000 0013    #endasm
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 
                 	.CSEG
                 _SetupLCD:
                 ; .FSTART _SetupLCD
0000af 972c      	SBIW R28,12
0000b0 e08c      	LDI  R24,12
                +
0000b1 e060     +LDI R22 , LOW ( 0 )
0000b2 e070     +LDI R23 , HIGH ( 0 )
                 	__GETWRN 22,23,0
0000b3 efe6      	LDI  R30,LOW(_0x3*2)
0000b4 e0f0      	LDI  R31,HIGH(_0x3*2)
0000b5 d341      	RCALL __INITLOCB
0000b6 930a      	ST   -Y,R16
                 ;	TableSetup -> Y+1
                 ;	i -> R16
                 ; 0000 0017     SBI __lcd_port-1,__lcd_EN
0000b7 9a09          SBI __lcd_port-1,__lcd_EN
0000b8 9a08          SBI __lcd_port-1,__lcd_RS
0000b9 9a0a          SBI __lcd_port-1,__lcd_D4
0000ba 9a0b          SBI __lcd_port-1,__lcd_D5
0000bb 9a0c          SBI __lcd_port-1,__lcd_D6
0000bc 9a0d          SBI __lcd_port-1,__lcd_D7
0000bd e3a2      	LDI  R26,LOW(50)
0000be e0b0      	LDI  R27,0
0000bf d361      	RCALL _delay_ms
0000c0 e000      	LDI  R16,LOW(0)
                 _0x5:
0000c1 300c      	CPI  R16,12
0000c2 f470      	BRSH _0x6
0000c3 e0a2      	LDI  R26,LOW(2)
0000c4 e0b0      	LDI  R27,0
0000c5 d35b      	RCALL _delay_ms
0000c6 2fe0      	MOV  R30,R16
0000c7 e0f0      	LDI  R31,0
0000c8 01de      	MOVW R26,R28
0000c9 9611      	ADIW R26,1
0000ca 0fae      	ADD  R26,R30
0000cb 1fbf      	ADC  R27,R31
0000cc 91ac      	LD   R26,X
0000cd d00f      	RCALL _SendDataBitsLCD
0000ce d00b      	RCALL _PulseEn
0000cf 5f0f      	SUBI R16,-1
0000d0 cff0      	RJMP _0x5
                 _0x6:
0000d1 e0ec      	LDI  R30,LOW(12)
0000d2 93e0 0a00 	STS  _cursor,R30
0000d4 91a0 0a00 	LDS  R26,_cursor
0000d6 d01e      	RCALL _WriteComandLCD
0000d7 8108      	LDD  R16,Y+0
0000d8 962d      	ADIW R28,13
0000d9 9508      	RET
                 ; .FEND
                 _PulseEn:
                 ; .FSTART _PulseEn
0000da 9a11          SBI __lcd_port,__lcd_EN  // EN=1;
0000db 9811          CBI __lcd_port,__lcd_EN // EN=0;
0000dc 9508      	RET
                 ; .FEND
                 _SendDataBitsLCD:
                 ; .FSTART _SendDataBitsLCD
0000dd 930a      	ST   -Y,R16
0000de 2f0a      	MOV  R16,R26
                 ;	dato -> R16
0000df ff03      	SBRS R16,3
0000e0 c002      	RJMP _0x7
0000e1 9a15      	SBI __lcd_port,__lcd_D7
0000e2 c001      	RJMP _0x8
                 _0x7:
0000e3 9815      	CBI __lcd_port,__lcd_D7
                 _0x8:
0000e4 ff02      	SBRS R16,2
0000e5 c002      	RJMP _0x9
0000e6 9a14      	SBI __lcd_port,__lcd_D6
0000e7 c001      	RJMP _0xA
                 _0x9:
0000e8 9814      	CBI __lcd_port,__lcd_D6
                 _0xA:
0000e9 ff01      	SBRS R16,1
0000ea c002      	RJMP _0xB
0000eb 9a13      	SBI __lcd_port,__lcd_D5
0000ec c001      	RJMP _0xC
                 _0xB:
0000ed 9813      	CBI __lcd_port,__lcd_D5
                 _0xC:
0000ee ff00      	SBRS R16,0
0000ef c002      	RJMP _0xD
0000f0 9a12      	SBI __lcd_port,__lcd_D4
0000f1 c001      	RJMP _0xE
                 _0xD:
0000f2 9812      	CBI __lcd_port,__lcd_D4
                 _0xE:
0000f3 9109      	LD   R16,Y+
0000f4 9508      	RET
                 ; .FEND
                 _WriteComandLCD:
                 ; .FSTART _WriteComandLCD
0000f5 931a      	ST   -Y,R17
0000f6 930a      	ST   -Y,R16
0000f7 2f1a      	MOV  R17,R26
                 ;	Comando -> R17
                 ;	tempComando -> R16
0000f8 9810      	CBI __lcd_port,__lcd_RS
0000f9 c004      	RJMP _0x2060003
                 ; .FEND
                 _CharLCD:
                 ; .FSTART _CharLCD
0000fa 931a      	ST   -Y,R17
0000fb 930a      	ST   -Y,R16
0000fc 2f1a      	MOV  R17,R26
                 ;	dato -> R17
                 ;	tempdato -> R16
0000fd 9a10      	SBI __lcd_port,__lcd_RS
                 _0x2060003:
0000fe e0a2      	LDI  R26,LOW(2)
0000ff e0b0      	LDI  R27,0
000100 d320      	RCALL _delay_ms
000101 2fe1      	MOV  R30,R17
000102 7fe0      	ANDI R30,LOW(0xF0)
000103 2f0e      	MOV  R16,R30
000104 9502      	SWAP R16
000105 700f      	ANDI R16,0xF
000106 2fa0      	MOV  R26,R16
000107 dfd5      	RCALL _SendDataBitsLCD
000108 dfd1      	RCALL _PulseEn
000109 2fe1      	MOV  R30,R17
00010a 70ef      	ANDI R30,LOW(0xF)
00010b 2f0e      	MOV  R16,R30
00010c 2fa0      	MOV  R26,R16
00010d dfcf      	RCALL _SendDataBitsLCD
00010e e0a2      	LDI  R26,LOW(2)
00010f e0b0      	LDI  R27,0
000110 d310      	RCALL _delay_ms
000111 dfc8      	RCALL _PulseEn
000112 9109      	LD   R16,Y+
000113 9119      	LD   R17,Y+
000114 9508      	RET
                 ; .FEND
                 _StringLCD:
                 ; .FSTART _StringLCD
000115 d269      	RCALL SUBOPT_0x0
                 ;	Mensaje -> R17,R18
                 ;	i -> R16
                 _0x10:
000116 d26d      	RCALL SUBOPT_0x1
000117 91a4      	LPM  R26,Z
000118 dfe1      	RCALL _CharLCD
000119 2fe0      	MOV  R30,R16
00011a e0f0      	LDI  R31,0
00011b 0fe1      	ADD  R30,R17
00011c 1ff2      	ADC  R31,R18
00011d 91e4      	LPM  R30,Z
00011e 30e0      	CPI  R30,0
00011f f7b1      	BRNE _0x10
000120 d2d2      	RCALL __LOADLOCR3
000121 c030      	RJMP _0x2060002
                 ; .FEND
                 ;	Mensaje -> R19,R20
                 ;	tiempo -> R17,R18
                 ;	i -> R16
                 _StringLCDVar:
                 ; .FSTART _StringLCDVar
000122 d25c      	RCALL SUBOPT_0x0
                 ;	Mensaje -> R17,R18
                 ;	i -> R16
                 _0x16:
000123 d260      	RCALL SUBOPT_0x1
000124 81a0      	LD   R26,Z
000125 dfd4      	RCALL _CharLCD
                +
000126 2fa1     +MOV R26 , R17
000127 2fb2     +MOV R27 , R18
                 	__GETW2R 17,18
000128 27ee      	CLR  R30
000129 0fa0      	ADD  R26,R16
00012a 1fbe      	ADC  R27,R30
00012b 91ec      	LD   R30,X
00012c 30e0      	CPI  R30,0
00012d f7a9      	BRNE _0x16
00012e d2c4      	RCALL __LOADLOCR3
00012f c022      	RJMP _0x2060002
                 ; .FEND
                 _MoveCursor:
                 ; .FSTART _MoveCursor
000130 931a      	ST   -Y,R17
000131 930a      	ST   -Y,R16
000132 2f0a      	MOV  R16,R26
000133 811a      	LDD  R17,Y+2
                 ;	x -> R17
                 ;	y -> R16
000134 2fe0      	MOV  R30,R16
000135 e0f0      	LDI  R31,0
000136 9730      	SBIW R30,0
000137 f419      	BRNE _0x1B
000138 2fa1      	MOV  R26,R17
000139 58a0      	SUBI R26,-LOW(128)
00013a c014      	RJMP _0x3F
                 _0x1B:
00013b 30e1      	CPI  R30,LOW(0x1)
00013c e0a0      	LDI  R26,HIGH(0x1)
00013d 07fa      	CPC  R31,R26
00013e f419      	BRNE _0x1C
00013f 2fa1      	MOV  R26,R17
000140 54a0      	SUBI R26,-LOW(192)
000141 c00d      	RJMP _0x3F
                 _0x1C:
000142 30e2      	CPI  R30,LOW(0x2)
000143 e0a0      	LDI  R26,HIGH(0x2)
000144 07fa      	CPC  R31,R26
000145 f419      	BRNE _0x1D
000146 2fa1      	MOV  R26,R17
000147 56ac      	SUBI R26,-LOW(148)
000148 c006      	RJMP _0x3F
                 _0x1D:
000149 30e3      	CPI  R30,LOW(0x3)
00014a e0a0      	LDI  R26,HIGH(0x3)
00014b 07fa      	CPC  R31,R26
00014c f419      	BRNE _0x1A
00014d 2fa1      	MOV  R26,R17
00014e 52ac      	SUBI R26,-LOW(212)
                 _0x3F:
00014f dfa5      	RCALL _WriteComandLCD
                 _0x1A:
000150 8119      	LDD  R17,Y+1
000151 8108      	LDD  R16,Y+0
                 _0x2060002:
000152 9623      	ADIW R28,3
000153 9508      	RET
                 ; .FEND
                 ;	NoCaracter -> R19
                 ;	datos -> R17,R18
                 ;	i -> R16
                 ;void main(void)
                 ; 0000 001E {
                 _main:
                 ; .FSTART _main
                 ; 0000 001F SetupLCD();
000154 df5a      	RCALL _SetupLCD
                 ; 0000 0020 MoveCursor(1,0);
000155 e0e1      	LDI  R30,LOW(1)
000156 93ea      	ST   -Y,R30
000157 e0a0      	LDI  R26,LOW(0)
000158 dfd7      	RCALL _MoveCursor
                 ; 0000 0021 StringLCD("People Counter");
                +
000159 e0a2     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
00015a e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
00015b dfb9      	RCALL _StringLCD
                 ; 0000 0022 PORTC = 0x07;       //Pull-ups en PC0, PC1 y PC2
00015c e0e7      	LDI  R30,LOW(7)
00015d b9e8      	OUT  0x8,R30
                 ; 0000 0023 
                 ; 0000 0024 while (1)
                 _0x22:
                 ; 0000 0025 {
                 ; 0000 0026 sprintf(valor,"%i%i%i",centena,decena,unidad);
00015e e0e7      	LDI  R30,LOW(_valor)
00015f e0fa      	LDI  R31,HIGH(_valor)
000160 93fa      	ST   -Y,R31
000161 93ea      	ST   -Y,R30
                +
000162 e1e1     +LDI R30 , LOW ( 2 * _0x0 + ( 15 ) )
000163 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 15 ) )
                 	__POINTW1FN _0x0,15
000164 93fa      	ST   -Y,R31
000165 93ea      	ST   -Y,R30
000166 91e0 0a05 	LDS  R30,_centena
000168 91f0 0a06 	LDS  R31,_centena+1
00016a d2a4      	RCALL __CWD1
00016b d2b0      	RCALL __PUTPARD1
00016c 91e0 0a03 	LDS  R30,_decena
00016e 91f0 0a04 	LDS  R31,_decena+1
000170 d29e      	RCALL __CWD1
000171 d2aa      	RCALL __PUTPARD1
000172 91e0 0a01 	LDS  R30,_unidad
000174 91f0 0a02 	LDS  R31,_unidad+1
000176 d298      	RCALL __CWD1
000177 d2a4      	RCALL __PUTPARD1
000178 e08c      	LDI  R24,12
000179 d1bb      	RCALL _sprintf
00017a 9660      	ADIW R28,16
                 ; 0000 0027 MoveCursor(5,1);
00017b e0e5      	LDI  R30,LOW(5)
00017c 93ea      	ST   -Y,R30
00017d e0a1      	LDI  R26,LOW(1)
00017e dfb1      	RCALL _MoveCursor
                 ; 0000 0028 StringLCDVar(valor);
00017f e0a7      	LDI  R26,LOW(_valor)
000180 e0ba      	LDI  R27,HIGH(_valor)
000181 dfa0      	RCALL _StringLCDVar
                 ; 0000 0029 
                 ; 0000 002A //SUMA
                 ; 0000 002B if (PINC.0 == 0)
000182 9930      	SBIC 0x6,0
000183 c026      	RJMP _0x25
                 ; 0000 002C {
                 ; 0000 002D if (unidad == 9 && decena == 9 && centena ==9)
000184 d205      	RCALL SUBOPT_0x2
000185 9719      	SBIW R26,9
000186 f431      	BRNE _0x27
000187 d207      	RCALL SUBOPT_0x3
000188 9719      	SBIW R26,9
000189 f419      	BRNE _0x27
00018a d209      	RCALL SUBOPT_0x4
00018b 9719      	SBIW R26,9
00018c f009      	BREQ _0x28
                 _0x27:
00018d c002      	RJMP _0x26
                 _0x28:
                 ; 0000 002E {
                 ; 0000 002F unidad = 9;
00018e d20a      	RCALL SUBOPT_0x5
                 ; 0000 0030 }
                 ; 0000 0031 else {
00018f c018      	RJMP _0x29
                 _0x26:
                 ; 0000 0032 unidad++;
000190 d20f      	RCALL SUBOPT_0x6
000191 9631      	ADIW R30,1
000192 93fe      	ST   -X,R31
000193 93ee      	ST   -X,R30
                 ; 0000 0033 if (unidad == 10)
000194 d1f5      	RCALL SUBOPT_0x2
000195 971a      	SBIW R26,10
000196 f489      	BRNE _0x2A
                 ; 0000 0034 {
                 ; 0000 0035 unidad = 0;
000197 d20d      	RCALL SUBOPT_0x7
                 ; 0000 0036 decena++;
000198 d212      	RCALL SUBOPT_0x8
000199 9631      	ADIW R30,1
00019a 93fe      	ST   -X,R31
00019b 93ee      	ST   -X,R30
                 ; 0000 0037 if (decena == 10)
00019c d1f2      	RCALL SUBOPT_0x3
00019d 971a      	SBIW R26,10
00019e f449      	BRNE _0x2B
                 ; 0000 0038 {
                 ; 0000 0039 decena = 0;
00019f d210      	RCALL SUBOPT_0x9
                 ; 0000 003A centena ++;
0001a0 d215      	RCALL SUBOPT_0xA
0001a1 9631      	ADIW R30,1
0001a2 93fe      	ST   -X,R31
0001a3 93ee      	ST   -X,R30
                 ; 0000 003B if (centena == 10)
0001a4 d1ef      	RCALL SUBOPT_0x4
0001a5 971a      	SBIW R26,10
0001a6 f409      	BRNE _0x2C
                 ; 0000 003C {
                 ; 0000 003D centena = 0;
0001a7 d213      	RCALL SUBOPT_0xB
                 ; 0000 003E }
                 ; 0000 003F }
                 _0x2C:
                 ; 0000 0040 }
                 _0x2B:
                 ; 0000 0041 }
                 _0x2A:
                 _0x29:
                 ; 0000 0042 while (PINC.0 == 0);
                 _0x2D:
0001a8 9b30      	SBIS 0x6,0
0001a9 cffe      	RJMP _0x2D
                 ; 0000 0043 }
                 ; 0000 0044 
                 ; 0000 0045 //RESTA
                 ; 0000 0046 if (PINC.1 == 0)
                 _0x25:
0001aa 9931      	SBIC 0x6,1
0001ab c031      	RJMP _0x30
                 ; 0000 0047 {
                 ; 0000 0048 unidad--;
0001ac d1f3      	RCALL SUBOPT_0x6
0001ad 9731      	SBIW R30,1
0001ae 93fe      	ST   -X,R31
0001af 93ee      	ST   -X,R30
                 ; 0000 0049 if (unidad == -1 && decena != 0)
0001b0 d210      	RCALL SUBOPT_0xC
0001b1 f419      	BRNE _0x32
0001b2 d1dc      	RCALL SUBOPT_0x3
0001b3 9710      	SBIW R26,0
0001b4 f409      	BRNE _0x33
                 _0x32:
0001b5 c005      	RJMP _0x31
                 _0x33:
                 ; 0000 004A {
                 ; 0000 004B unidad = 9;
0001b6 d1e2      	RCALL SUBOPT_0x5
                 ; 0000 004C decena--;
0001b7 d1f3      	RCALL SUBOPT_0x8
0001b8 9731      	SBIW R30,1
0001b9 93fe      	ST   -X,R31
0001ba 93ee      	ST   -X,R30
                 ; 0000 004D }
                 ; 0000 004E 
                 ; 0000 004F if (unidad == -1 && decena == 0)
                 _0x31:
0001bb d205      	RCALL SUBOPT_0xC
0001bc f419      	BRNE _0x35
0001bd d1d1      	RCALL SUBOPT_0x3
0001be 9710      	SBIW R26,0
0001bf f009      	BREQ _0x36
                 _0x35:
0001c0 c00b      	RJMP _0x34
                 _0x36:
                 ; 0000 0050 {
                 ; 0000 0051 unidad = 9;
0001c1 d1d7      	RCALL SUBOPT_0x5
                 ; 0000 0052 decena = 9;
0001c2 e0e9      	LDI  R30,LOW(9)
0001c3 e0f0      	LDI  R31,HIGH(9)
0001c4 93e0 0a03 	STS  _decena,R30
0001c6 93f0 0a04 	STS  _decena+1,R31
                 ; 0000 0053 centena--;
0001c8 d1ed      	RCALL SUBOPT_0xA
0001c9 9731      	SBIW R30,1
0001ca 93fe      	ST   -X,R31
0001cb 93ee      	ST   -X,R30
                 ; 0000 0054 }
                 ; 0000 0055 if (unidad == 9 && decena == 9 && centena == -1)
                 _0x34:
0001cc d1bd      	RCALL SUBOPT_0x2
0001cd 9719      	SBIW R26,9
0001ce f441      	BRNE _0x38
0001cf d1bf      	RCALL SUBOPT_0x3
0001d0 9719      	SBIW R26,9
0001d1 f429      	BRNE _0x38
0001d2 d1c1      	RCALL SUBOPT_0x4
0001d3 3faf      	CPI  R26,LOW(0xFFFF)
0001d4 efef      	LDI  R30,HIGH(0xFFFF)
0001d5 07be      	CPC  R27,R30
0001d6 f009      	BREQ _0x39
                 _0x38:
0001d7 c003      	RJMP _0x37
                 _0x39:
                 ; 0000 0056 {
                 ; 0000 0057 unidad = 0;
0001d8 d1cc      	RCALL SUBOPT_0x7
                 ; 0000 0058 decena = 0;
0001d9 d1d6      	RCALL SUBOPT_0x9
                 ; 0000 0059 centena = 0;
0001da d1e0      	RCALL SUBOPT_0xB
                 ; 0000 005A }
                 ; 0000 005B while (PINC.1 == 0);
                 _0x37:
                 _0x3A:
0001db 9b31      	SBIS 0x6,1
0001dc cffe      	RJMP _0x3A
                 ; 0000 005C }
                 ; 0000 005D 
                 ; 0000 005E //CLEAR
                 ; 0000 005F if (PINC.2 == 0)
                 _0x30:
0001dd 9932      	SBIC 0x6,2
0001de c003      	RJMP _0x3D
                 ; 0000 0060 {
                 ; 0000 0061 unidad = 0;
0001df d1c5      	RCALL SUBOPT_0x7
                 ; 0000 0062 decena = 0;
0001e0 d1cf      	RCALL SUBOPT_0x9
                 ; 0000 0063 centena = 0;
0001e1 d1d9      	RCALL SUBOPT_0xB
                 ; 0000 0064 }
                 ; 0000 0065 }
                 _0x3D:
0001e2 cf7b      	RJMP _0x22
                 ; 0000 0066 }
                 _0x3E:
0001e3 cfff      	RJMP _0x3E
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
0001e4 d205      	RCALL __SAVELOCR5
0001e5 019d      	MOVW R18,R26
0001e6 814d      	LDD  R20,Y+5
0001e7 9612      	ADIW R26,2
0001e8 d22b      	RCALL __GETW1P
0001e9 9730      	SBIW R30,0
0001ea f0e1      	BREQ _0x2000016
0001eb 01d9      	MOVW R26,R18
0001ec 9614      	ADIW R26,4
0001ed d226      	RCALL __GETW1P
0001ee 018f      	MOVW R16,R30
0001ef 9730      	SBIW R30,0
0001f0 f059      	BREQ _0x2000018
                +
0001f1 3002     +CPI R16 , LOW ( 2 )
0001f2 e0e0     +LDI R30 , HIGH ( 2 )
0001f3 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0001f4 f060      	BRLO _0x2000019
0001f5 01f8      	MOVW R30,R16
0001f6 9731      	SBIW R30,1
0001f7 018f      	MOVW R16,R30
                +
0001f8 01d9     +MOVW R26 , R18
0001f9 9614     +ADIW R26 , 4
0001fa 93ed     +ST X + , R30
0001fb 93fc     +ST X , R31
                 	__PUTW1RNS 18,4
                 _0x2000018:
0001fc 01d9      	MOVW R26,R18
0001fd 9612      	ADIW R26,2
0001fe d1c7      	RCALL SUBOPT_0xD
0001ff 9731      	SBIW R30,1
000200 8340      	ST   Z,R20
                 _0x2000019:
000201 01d9      	MOVW R26,R18
000202 d211      	RCALL __GETW1P
000203 23ff      	TST  R31
000204 f00a      	BRMI _0x200001A
000205 d1c0      	RCALL SUBOPT_0xD
                 _0x200001A:
000206 c005      	RJMP _0x200001B
                 _0x2000016:
000207 01d9      	MOVW R26,R18
000208 efef      	LDI  R30,LOW(65535)
000209 efff      	LDI  R31,HIGH(65535)
00020a 93ed      	ST   X+,R30
00020b 93fc      	ST   X,R31
                 _0x200001B:
00020c d1e4      	RCALL __LOADLOCR5
00020d 9626      	ADIW R28,6
00020e 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
00020f 93ba      	ST   -Y,R27
000210 93aa      	ST   -Y,R26
000211 9726      	SBIW R28,6
000212 d1d6      	RCALL __SAVELOCR6
000213 e000      	LDI  R16,0
000214 85ac      	LDD  R26,Y+12
000215 85bd      	LDD  R27,Y+12+1
000216 e0e0      	LDI  R30,LOW(0)
000217 e0f0      	LDI  R31,HIGH(0)
000218 93ed      	ST   X+,R30
000219 93fc      	ST   X,R31
                 _0x200001C:
00021a 89ea      	LDD  R30,Y+18
00021b 89fb      	LDD  R31,Y+18+1
00021c 9631      	ADIW R30,1
00021d 8bea      	STD  Y+18,R30
00021e 8bfb      	STD  Y+18+1,R31
00021f 9731      	SBIW R30,1
000220 91e4      	LPM  R30,Z
000221 2f3e      	MOV  R19,R30
000222 30e0      	CPI  R30,0
000223 f409      	BRNE PC+2
000224 c109      	RJMP _0x200001E
000225 2fe0      	MOV  R30,R16
000226 30e0      	CPI  R30,0
000227 f431      	BRNE _0x2000022
000228 3235      	CPI  R19,37
000229 f411      	BRNE _0x2000023
00022a e001      	LDI  R16,LOW(1)
00022b c001      	RJMP _0x2000024
                 _0x2000023:
00022c d19f      	RCALL SUBOPT_0xE
                 _0x2000024:
00022d c0ff      	RJMP _0x2000021
                 _0x2000022:
00022e 30e1      	CPI  R30,LOW(0x1)
00022f f4a1      	BRNE _0x2000025
000230 3235      	CPI  R19,37
000231 f411      	BRNE _0x2000026
000232 d199      	RCALL SUBOPT_0xE
000233 c0f8      	RJMP _0x20000D2
                 _0x2000026:
000234 e002      	LDI  R16,LOW(2)
000235 e050      	LDI  R21,LOW(0)
000236 e010      	LDI  R17,LOW(0)
000237 323d      	CPI  R19,45
000238 f411      	BRNE _0x2000027
000239 e011      	LDI  R17,LOW(1)
00023a c0f2      	RJMP _0x2000021
                 _0x2000027:
00023b 323b      	CPI  R19,43
00023c f411      	BRNE _0x2000028
00023d e25b      	LDI  R21,LOW(43)
00023e c0ee      	RJMP _0x2000021
                 _0x2000028:
00023f 3230      	CPI  R19,32
000240 f411      	BRNE _0x2000029
000241 e250      	LDI  R21,LOW(32)
000242 c0ea      	RJMP _0x2000021
                 _0x2000029:
000243 c002      	RJMP _0x200002A
                 _0x2000025:
000244 30e2      	CPI  R30,LOW(0x2)
000245 f439      	BRNE _0x200002B
                 _0x200002A:
000246 e040      	LDI  R20,LOW(0)
000247 e003      	LDI  R16,LOW(3)
000248 3330      	CPI  R19,48
000249 f411      	BRNE _0x200002C
00024a 6810      	ORI  R17,LOW(128)
00024b c0e1      	RJMP _0x2000021
                 _0x200002C:
00024c c003      	RJMP _0x200002D
                 _0x200002B:
00024d 30e3      	CPI  R30,LOW(0x3)
00024e f009      	BREQ PC+2
00024f c0dd      	RJMP _0x2000021
                 _0x200002D:
000250 3330      	CPI  R19,48
000251 f010      	BRLO _0x2000030
000252 333a      	CPI  R19,58
000253 f008      	BRLO _0x2000031
                 _0x2000030:
000254 c007      	RJMP _0x200002F
                 _0x2000031:
000255 e0aa      	LDI  R26,LOW(10)
000256 9f4a      	MUL  R20,R26
000257 2d40      	MOV  R20,R0
000258 2fe3      	MOV  R30,R19
000259 53e0      	SUBI R30,LOW(48)
00025a 0f4e      	ADD  R20,R30
00025b c0d1      	RJMP _0x2000021
                 _0x200002F:
00025c 2fe3      	MOV  R30,R19
00025d 36e3      	CPI  R30,LOW(0x63)
00025e f439      	BRNE _0x2000035
00025f d173      	RCALL SUBOPT_0xF
000260 89e8      	LDD  R30,Y+16
000261 89f9      	LDD  R31,Y+16+1
000262 81a4      	LDD  R26,Z+4
000263 93aa      	ST   -Y,R26
000264 d174      	RCALL SUBOPT_0x10
000265 c0c6      	RJMP _0x2000036
                 _0x2000035:
000266 37e3      	CPI  R30,LOW(0x73)
000267 f429      	BRNE _0x2000038
000268 d16a      	RCALL SUBOPT_0xF
000269 d175      	RCALL SUBOPT_0x11
00026a d0fb      	RCALL _strlen
00026b 2f0e      	MOV  R16,R30
00026c c007      	RJMP _0x2000039
                 _0x2000038:
00026d 37e0      	CPI  R30,LOW(0x70)
00026e f449      	BRNE _0x200003B
00026f d163      	RCALL SUBOPT_0xF
000270 d16e      	RCALL SUBOPT_0x11
000271 d100      	RCALL _strlenf
000272 2f0e      	MOV  R16,R30
000273 6018      	ORI  R17,LOW(8)
                 _0x2000039:
000274 6012      	ORI  R17,LOW(2)
000275 771f      	ANDI R17,LOW(127)
000276 e020      	LDI  R18,LOW(0)
000277 c038      	RJMP _0x200003C
                 _0x200003B:
000278 36e4      	CPI  R30,LOW(0x64)
000279 f011      	BREQ _0x200003F
00027a 36e9      	CPI  R30,LOW(0x69)
00027b f411      	BRNE _0x2000040
                 _0x200003F:
00027c 6014      	ORI  R17,LOW(4)
00027d c002      	RJMP _0x2000041
                 _0x2000040:
00027e 37e5      	CPI  R30,LOW(0x75)
00027f f431      	BRNE _0x2000042
                 _0x2000041:
000280 eee4      	LDI  R30,LOW(_tbl10_G100*2)
000281 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000282 83ee      	STD  Y+6,R30
000283 83ff      	STD  Y+6+1,R31
000284 e005      	LDI  R16,LOW(5)
000285 c00c      	RJMP _0x2000043
                 _0x2000042:
000286 35e8      	CPI  R30,LOW(0x58)
000287 f411      	BRNE _0x2000045
000288 6018      	ORI  R17,LOW(8)
000289 c003      	RJMP _0x2000046
                 _0x2000045:
00028a 37e8      	CPI  R30,LOW(0x78)
00028b f009      	BREQ PC+2
00028c c09f      	RJMP _0x2000077
                 _0x2000046:
00028d eeee      	LDI  R30,LOW(_tbl16_G100*2)
00028e e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
00028f 83ee      	STD  Y+6,R30
000290 83ff      	STD  Y+6+1,R31
000291 e004      	LDI  R16,LOW(4)
                 _0x2000043:
000292 ff12      	SBRS R17,2
000293 c015      	RJMP _0x2000048
000294 d13e      	RCALL SUBOPT_0xF
000295 89a8      	LDD  R26,Y+16
000296 89b9      	LDD  R27,Y+16+1
000297 9614      	ADIW R26,4
000298 91ed      	LD   R30,X+
000299 91fd      	LD   R31,X+
00029a 87ea      	STD  Y+10,R30
00029b 87fb      	STD  Y+10+1,R31
00029c 85ab      	LDD  R26,Y+11
00029d 23aa      	TST  R26
00029e f422      	BRPL _0x2000049
00029f d16b      	RCALL __ANEGW1
0002a0 87ea      	STD  Y+10,R30
0002a1 87fb      	STD  Y+10+1,R31
0002a2 e25d      	LDI  R21,LOW(45)
                 _0x2000049:
0002a3 3050      	CPI  R21,0
0002a4 f011      	BREQ _0x200004A
0002a5 5f0f      	SUBI R16,-LOW(1)
0002a6 c001      	RJMP _0x200004B
                 _0x200004A:
0002a7 7f1b      	ANDI R17,LOW(251)
                 _0x200004B:
0002a8 c007      	RJMP _0x200004C
                 _0x2000048:
0002a9 d129      	RCALL SUBOPT_0xF
0002aa 89a8      	LDD  R26,Y+16
0002ab 89b9      	LDD  R27,Y+16+1
0002ac 9614      	ADIW R26,4
0002ad d166      	RCALL __GETW1P
0002ae 87ea      	STD  Y+10,R30
0002af 87fb      	STD  Y+10+1,R31
                 _0x200004C:
                 _0x200003C:
0002b0 fd10      	SBRC R17,0
0002b1 c010      	RJMP _0x200004D
                 _0x200004E:
0002b2 1704      	CP   R16,R20
0002b3 f470      	BRSH _0x2000050
0002b4 ff17      	SBRS R17,7
0002b5 c008      	RJMP _0x2000051
0002b6 ff12      	SBRS R17,2
0002b7 c004      	RJMP _0x2000052
0002b8 7f1b      	ANDI R17,LOW(251)
0002b9 2f35      	MOV  R19,R21
0002ba 5001      	SUBI R16,LOW(1)
0002bb c001      	RJMP _0x2000053
                 _0x2000052:
0002bc e330      	LDI  R19,LOW(48)
                 _0x2000053:
0002bd c001      	RJMP _0x2000054
                 _0x2000051:
0002be e230      	LDI  R19,LOW(32)
                 _0x2000054:
0002bf d10c      	RCALL SUBOPT_0xE
0002c0 5041      	SUBI R20,LOW(1)
0002c1 cff0      	RJMP _0x200004E
                 _0x2000050:
                 _0x200004D:
0002c2 2f20      	MOV  R18,R16
0002c3 ff11      	SBRS R17,1
0002c4 c016      	RJMP _0x2000055
                 _0x2000056:
0002c5 3020      	CPI  R18,0
0002c6 f099      	BREQ _0x2000058
0002c7 ff13      	SBRS R17,3
0002c8 c006      	RJMP _0x2000059
0002c9 81ee      	LDD  R30,Y+6
0002ca 81ff      	LDD  R31,Y+6+1
0002cb 9135      	LPM  R19,Z+
0002cc 83ee      	STD  Y+6,R30
0002cd 83ff      	STD  Y+6+1,R31
0002ce c005      	RJMP _0x200005A
                 _0x2000059:
0002cf 81ae      	LDD  R26,Y+6
0002d0 81bf      	LDD  R27,Y+6+1
0002d1 913d      	LD   R19,X+
0002d2 83ae      	STD  Y+6,R26
0002d3 83bf      	STD  Y+6+1,R27
                 _0x200005A:
0002d4 d0f7      	RCALL SUBOPT_0xE
0002d5 3040      	CPI  R20,0
0002d6 f009      	BREQ _0x200005B
0002d7 5041      	SUBI R20,LOW(1)
                 _0x200005B:
0002d8 5021      	SUBI R18,LOW(1)
0002d9 cfeb      	RJMP _0x2000056
                 _0x2000058:
0002da c048      	RJMP _0x200005C
                 _0x2000055:
                 _0x200005E:
0002db e330      	LDI  R19,LOW(48)
0002dc 81ee      	LDD  R30,Y+6
0002dd 81ff      	LDD  R31,Y+6+1
0002de d139      	RCALL __GETW1PF
0002df 87e8      	STD  Y+8,R30
0002e0 87f9      	STD  Y+8+1,R31
0002e1 81ee      	LDD  R30,Y+6
0002e2 81ff      	LDD  R31,Y+6+1
0002e3 9632      	ADIW R30,2
0002e4 83ee      	STD  Y+6,R30
0002e5 83ff      	STD  Y+6+1,R31
                 _0x2000060:
0002e6 85e8      	LDD  R30,Y+8
0002e7 85f9      	LDD  R31,Y+8+1
0002e8 85aa      	LDD  R26,Y+10
0002e9 85bb      	LDD  R27,Y+10+1
0002ea 17ae      	CP   R26,R30
0002eb 07bf      	CPC  R27,R31
0002ec f050      	BRLO _0x2000062
0002ed 5f3f      	SUBI R19,-LOW(1)
0002ee 85a8      	LDD  R26,Y+8
0002ef 85b9      	LDD  R27,Y+8+1
0002f0 85ea      	LDD  R30,Y+10
0002f1 85fb      	LDD  R31,Y+10+1
0002f2 1bea      	SUB  R30,R26
0002f3 0bfb      	SBC  R31,R27
0002f4 87ea      	STD  Y+10,R30
0002f5 87fb      	STD  Y+10+1,R31
0002f6 cfef      	RJMP _0x2000060
                 _0x2000062:
0002f7 333a      	CPI  R19,58
0002f8 f028      	BRLO _0x2000063
0002f9 ff13      	SBRS R17,3
0002fa c002      	RJMP _0x2000064
0002fb 5f39      	SUBI R19,-LOW(7)
0002fc c001      	RJMP _0x2000065
                 _0x2000064:
0002fd 5d39      	SUBI R19,-LOW(39)
                 _0x2000065:
                 _0x2000063:
0002fe fd14      	SBRC R17,4
0002ff c019      	RJMP _0x2000067
000300 3331      	CPI  R19,49
000301 f420      	BRSH _0x2000069
000302 85a8      	LDD  R26,Y+8
000303 85b9      	LDD  R27,Y+8+1
000304 9711      	SBIW R26,1
000305 f409      	BRNE _0x2000068
                 _0x2000069:
000306 c009      	RJMP _0x20000D3
                 _0x2000068:
000307 1742      	CP   R20,R18
000308 f010      	BRLO _0x200006D
000309 ff10      	SBRS R17,0
00030a c001      	RJMP _0x200006E
                 _0x200006D:
00030b c011      	RJMP _0x200006C
                 _0x200006E:
00030c e230      	LDI  R19,LOW(32)
00030d ff17      	SBRS R17,7
00030e c00a      	RJMP _0x200006F
00030f e330      	LDI  R19,LOW(48)
                 _0x20000D3:
000310 6110      	ORI  R17,LOW(16)
000311 ff12      	SBRS R17,2
000312 c006      	RJMP _0x2000070
000313 7f1b      	ANDI R17,LOW(251)
000314 935a      	ST   -Y,R21
000315 d0c3      	RCALL SUBOPT_0x10
000316 3040      	CPI  R20,0
000317 f009      	BREQ _0x2000071
000318 5041      	SUBI R20,LOW(1)
                 _0x2000071:
                 _0x2000070:
                 _0x200006F:
                 _0x2000067:
000319 d0b2      	RCALL SUBOPT_0xE
00031a 3040      	CPI  R20,0
00031b f009      	BREQ _0x2000072
00031c 5041      	SUBI R20,LOW(1)
                 _0x2000072:
                 _0x200006C:
00031d 5021      	SUBI R18,LOW(1)
00031e 85a8      	LDD  R26,Y+8
00031f 85b9      	LDD  R27,Y+8+1
000320 9712      	SBIW R26,2
000321 f008      	BRLO _0x200005F
000322 cfb8      	RJMP _0x200005E
                 _0x200005F:
                 _0x200005C:
000323 ff10      	SBRS R17,0
000324 c007      	RJMP _0x2000073
                 _0x2000074:
000325 3040      	CPI  R20,0
000326 f029      	BREQ _0x2000076
000327 5041      	SUBI R20,LOW(1)
000328 e2e0      	LDI  R30,LOW(32)
000329 93ea      	ST   -Y,R30
00032a d0ae      	RCALL SUBOPT_0x10
00032b cff9      	RJMP _0x2000074
                 _0x2000076:
                 _0x2000073:
                 _0x2000077:
                 _0x2000036:
                 _0x20000D2:
00032c e000      	LDI  R16,LOW(0)
                 _0x2000021:
00032d ceec      	RJMP _0x200001C
                 _0x200001E:
00032e 85ac      	LDD  R26,Y+12
00032f 85bd      	LDD  R27,Y+12+1
000330 91ed      	LD   R30,X+
000331 91fd      	LD   R31,X+
000332 d0bd      	RCALL __LOADLOCR6
000333 9664      	ADIW R28,20
000334 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000335 92ff      	PUSH R15
000336 2ef8      	MOV  R15,R24
000337 9726      	SBIW R28,6
000338 d0b0      	RCALL __SAVELOCR6
000339 01fe      	MOVW R30,R28
00033a d0c8      	RCALL __ADDW1R15
                +
00033b 8546     +LDD R20 , Z + 14
00033c 8557     +LDD R21 , Z + 14 + 1
                 	__GETWRZ 20,21,14
00033d 2e04      	MOV  R0,R20
00033e 2a05      	OR   R0,R21
00033f f419      	BRNE _0x2000078
000340 efef      	LDI  R30,LOW(65535)
000341 efff      	LDI  R31,HIGH(65535)
000342 c01f      	RJMP _0x2060001
                 _0x2000078:
000343 01de      	MOVW R26,R28
000344 9618      	ADIW R26,8
000345 d0c1      	RCALL __ADDW2R15
000346 018d      	MOVW R16,R26
                +
000347 8748     +STD Y + 8 , R20
000348 8759     +STD Y + 8 + 1 , R21
                 	__PUTWSR 20,21,8
000349 e0e0      	LDI  R30,LOW(0)
00034a 87ea      	STD  Y+10,R30
00034b 87eb      	STD  Y+10+1,R30
00034c 01de      	MOVW R26,R28
00034d 961c      	ADIW R26,12
00034e d0b8      	RCALL __ADDW2R15
00034f 91ed      	LD   R30,X+
000350 91fd      	LD   R31,X+
000351 93fa      	ST   -Y,R31
000352 93ea      	ST   -Y,R30
000353 931a      	ST   -Y,R17
000354 930a      	ST   -Y,R16
000355 eee4      	LDI  R30,LOW(_put_buff_G100)
000356 e0f1      	LDI  R31,HIGH(_put_buff_G100)
000357 93fa      	ST   -Y,R31
000358 93ea      	ST   -Y,R30
000359 01de      	MOVW R26,R28
00035a 961c      	ADIW R26,12
00035b deb3      	RCALL __print_G100
00035c 019f      	MOVW R18,R30
00035d 85a8      	LDD  R26,Y+8
00035e 85b9      	LDD  R27,Y+8+1
00035f e0e0      	LDI  R30,LOW(0)
000360 93ec      	ST   X,R30
000361 01f9      	MOVW R30,R18
                 _0x2060001:
000362 d08d      	RCALL __LOADLOCR6
000363 962c      	ADIW R28,12
000364 90ff      	POP  R15
000365 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000366 93ba      	ST   -Y,R27
000367 93aa      	ST   -Y,R26
000368 91a9          ld   r26,y+
000369 91b9          ld   r27,y+
00036a 27ee          clr  r30
00036b 27ff          clr  r31
                 strlen0:
00036c 916d          ld   r22,x+
00036d 2366          tst  r22
00036e f011          breq strlen1
00036f 9631          adiw r30,1
000370 cffb          rjmp strlen0
                 strlen1:
000371 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000372 93ba      	ST   -Y,R27
000373 93aa      	ST   -Y,R26
000374 27aa          clr  r26
000375 27bb          clr  r27
000376 91e9          ld   r30,y+
000377 91f9          ld   r31,y+
                 strlenf0:
000378 9005      	lpm  r0,z+
000379 2000          tst  r0
00037a f011          breq strlenf1
00037b 9611          adiw r26,1
00037c cffb          rjmp strlenf0
                 strlenf1:
00037d 01fd          movw r30,r26
00037e 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _cursor:
000a00           	.BYTE 0x1
                 _unidad:
000a01           	.BYTE 0x2
                 _decena:
000a03           	.BYTE 0x2
                 _centena:
000a05           	.BYTE 0x2
                 _valor:
000a07           	.BYTE 0x2
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
00037f d06c      	RCALL __SAVELOCR3
                +
000380 2f1a     +MOV R17 , R26
000381 2f2b     +MOV R18 , R27
                 	__PUTW2R 17,18
000382 e000      	LDI  R16,LOW(0)
000383 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
000384 2fe0      	MOV  R30,R16
000385 5f0f      	SUBI R16,-1
000386 e0f0      	LDI  R31,0
000387 0fe1      	ADD  R30,R17
000388 1ff2      	ADC  R31,R18
000389 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x2:
00038a 91a0 0a01 	LDS  R26,_unidad
00038c 91b0 0a02 	LDS  R27,_unidad+1
00038e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x3:
00038f 91a0 0a03 	LDS  R26,_decena
000391 91b0 0a04 	LDS  R27,_decena+1
000393 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
000394 91a0 0a05 	LDS  R26,_centena
000396 91b0 0a06 	LDS  R27,_centena+1
000398 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x5:
000399 e0e9      	LDI  R30,LOW(9)
00039a e0f0      	LDI  R31,HIGH(9)
00039b 93e0 0a01 	STS  _unidad,R30
00039d 93f0 0a02 	STS  _unidad+1,R31
00039f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
0003a0 e0a1      	LDI  R26,LOW(_unidad)
0003a1 e0ba      	LDI  R27,HIGH(_unidad)
0003a2 91ed      	LD   R30,X+
0003a3 91fd      	LD   R31,X+
0003a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7:
0003a5 e0e0      	LDI  R30,LOW(0)
0003a6 93e0 0a01 	STS  _unidad,R30
0003a8 93e0 0a02 	STS  _unidad+1,R30
0003aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
0003ab e0a3      	LDI  R26,LOW(_decena)
0003ac e0ba      	LDI  R27,HIGH(_decena)
0003ad 91ed      	LD   R30,X+
0003ae 91fd      	LD   R31,X+
0003af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x9:
0003b0 e0e0      	LDI  R30,LOW(0)
0003b1 93e0 0a03 	STS  _decena,R30
0003b3 93e0 0a04 	STS  _decena+1,R30
0003b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
0003b6 e0a5      	LDI  R26,LOW(_centena)
0003b7 e0ba      	LDI  R27,HIGH(_centena)
0003b8 91ed      	LD   R30,X+
0003b9 91fd      	LD   R31,X+
0003ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xB:
0003bb e0e0      	LDI  R30,LOW(0)
0003bc 93e0 0a05 	STS  _centena,R30
0003be 93e0 0a06 	STS  _centena+1,R30
0003c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
0003c1 dfc8      	RCALL SUBOPT_0x2
0003c2 3faf      	CPI  R26,LOW(0xFFFF)
0003c3 efef      	LDI  R30,HIGH(0xFFFF)
0003c4 07be      	CPC  R27,R30
0003c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD:
0003c6 91ed      	LD   R30,X+
0003c7 91fd      	LD   R31,X+
0003c8 9631      	ADIW R30,1
0003c9 93fe      	ST   -X,R31
0003ca 93ee      	ST   -X,R30
0003cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0xE:
0003cc 933a      	ST   -Y,R19
0003cd 85ad      	LDD  R26,Y+13
0003ce 85be      	LDD  R27,Y+13+1
0003cf 85ef      	LDD  R30,Y+15
0003d0 89f8      	LDD  R31,Y+15+1
0003d1 9509      	ICALL
0003d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0xF:
0003d3 89e8      	LDD  R30,Y+16
0003d4 89f9      	LDD  R31,Y+16+1
0003d5 9734      	SBIW R30,4
0003d6 8be8      	STD  Y+16,R30
0003d7 8bf9      	STD  Y+16+1,R31
0003d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x10:
0003d9 85ad      	LDD  R26,Y+13
0003da 85be      	LDD  R27,Y+13+1
0003db 85ef      	LDD  R30,Y+15
0003dc 89f8      	LDD  R31,Y+15+1
0003dd 9509      	ICALL
0003de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11:
0003df 89a8      	LDD  R26,Y+16
0003e0 89b9      	LDD  R27,Y+16+1
0003e1 9614      	ADIW R26,4
0003e2 91ed      	LD   R30,X+
0003e3 91fd      	LD   R31,X+
0003e4 83ee      	STD  Y+6,R30
0003e5 83ff      	STD  Y+6+1,R31
0003e6 81ae      	LDD  R26,Y+6
0003e7 81bf      	LDD  R27,Y+6+1
0003e8 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
0003e9 935a      	ST   -Y,R21
                 __SAVELOCR5:
0003ea 934a      	ST   -Y,R20
                 __SAVELOCR4:
0003eb 933a      	ST   -Y,R19
                 __SAVELOCR3:
0003ec 932a      	ST   -Y,R18
                 __SAVELOCR2:
0003ed 931a      	ST   -Y,R17
0003ee 930a      	ST   -Y,R16
0003ef 9508      	RET
                 
                 __LOADLOCR6:
0003f0 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0003f1 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0003f2 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0003f3 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0003f4 8119      	LDD  R17,Y+1
0003f5 8108      	LD   R16,Y
0003f6 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
0003f7 93af      	PUSH R26
0003f8 93bf      	PUSH R27
0003f9 01db      	MOVW R26,R22
0003fa 0fac      	ADD  R26,R28
0003fb 1fbd      	ADC  R27,R29
                 __INITLOC0:
0003fc 9005      	LPM  R0,Z+
0003fd 920d      	ST   X+,R0
0003fe 958a      	DEC  R24
0003ff f7e1      	BRNE __INITLOC0
000400 91bf      	POP  R27
000401 91af      	POP  R26
000402 9508      	RET
                 
                 __ADDW1R15:
000403 2400      	CLR  R0
000404 0def      	ADD  R30,R15
000405 1df0      	ADC  R31,R0
000406 9508      	RET
                 
                 __ADDW2R15:
000407 2400      	CLR  R0
000408 0daf      	ADD  R26,R15
000409 1db0      	ADC  R27,R0
00040a 9508      	RET
                 
                 __ANEGW1:
00040b 95f1      	NEG  R31
00040c 95e1      	NEG  R30
00040d 40f0      	SBCI R31,0
00040e 9508      	RET
                 
                 __CWD1:
00040f 2f6f      	MOV  R22,R31
000410 0f66      	ADD  R22,R22
000411 0b66      	SBC  R22,R22
000412 2f76      	MOV  R23,R22
000413 9508      	RET
                 
                 __GETW1P:
000414 91ed      	LD   R30,X+
000415 91fc      	LD   R31,X
000416 9711      	SBIW R26,1
000417 9508      	RET
                 
                 __GETW1PF:
000418 9005      	LPM  R0,Z+
000419 91f4      	LPM  R31,Z
00041a 2de0      	MOV  R30,R0
00041b 9508      	RET
                 
                 __PUTPARD1:
00041c 937a      	ST   -Y,R23
00041d 936a      	ST   -Y,R22
00041e 93fa      	ST   -Y,R31
00041f 93ea      	ST   -Y,R30
000420 9508      	RET
                 
                 _delay_ms:
000421 9610      	adiw r26,0
000422 f039      	breq __delay_ms1
                 __delay_ms0:
000423 95a8      	wdr
                +
000424 ed80     +LDI R24 , LOW ( 0x7D0 )
000425 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000426 9701     +SBIW R24 , 1
000427 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000428 9711      	sbiw r26,1
000429 f7c9      	brne __delay_ms0
                 __delay_ms1:
00042a 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega2560 register use summary:
r0 :  13 r1 :   0 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   5 
r16:  53 r17:  46 r18:  20 r19:  27 r20:  22 r21:  12 r22:  11 r23:   3 
r24:  12 r25:   2 r26: 118 r27:  46 r28:  16 r29:   2 r30: 180 r31:  84 
x  :  46 y  : 137 z  :  13 
Registers used: 21 out of 35 (60.0%)

ATmega2560 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   7 add   :   9 
adiw  :  26 and   :   0 andi  :   7 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  17 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   7 
brlt  :   0 brmi  :   1 brne  :  39 brpl  :   1 brsh  :   3 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   6 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   9 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   3 cpc   :   7 cpi   :  38 cpse  :   0 dec   :   2 des   :   0 
eicall:   0 eijmp :   0 elpm  :   0 eor   :   0 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   2 ijmp  :   0 in    :   0 inc   :   0 jmp   :  58 
ld    :  31 ldd   :  62 ldi   : 103 lds   :  13 lpm   :  12 lsl   :   0 
lsr   :   0 mov   :  36 movw  :  19 mul   :   1 muls  :   0 mulsu :   0 
neg   :   2 nop   :   0 or    :   1 ori   :   6 out   :   9 pop   :   3 
push  :   3 rcall : 101 ret   :  39 reti  :   0 rjmp  :  78 rol   :   0 
ror   :   0 sbc   :   2 sbci  :   1 sbi   :  12 sbic  :   3 sbis  :   2 
sbiw  :  29 sbr   :   0 sbrc  :   2 sbrs  :  14 sec   :   0 seh   :   0 
sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   0 sev   :   0 
sez   :   0 sleep :   0 spm   :   0 st    :  65 std   :  30 sts   :  13 
sub   :   1 subi  :  19 swap  :   1 tst   :   4 wdr   :   1 
Instructions used: 52 out of 119 (43.7%)

ATmega2560 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000856   2082     52   2134  262144   0.8%
[.dseg] 0x000200 0x000a09      0      9      9    8192   0.1%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 0 warnings
