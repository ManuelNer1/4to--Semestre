;/*
; * examen.c
; *
; * Created: 17/05/2021 10:49:32 a. m.
; * Author: ManuelNeri
; */
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <stdio.h>
;
;// Declare your global variables here
;int Val;
;unsigned char SieteSeg[16]={0xFC, 0x60, 0xDB, 0xF3,
;                            0x66, 0xB7, 0xBE, 0XE1,
;                            0xFE, 0xF6, 0xEE, 0x3F,
;                            0x9C, 0x7B, 0x9E, 0x8E};

	.DSEG
;
;
;// Voltage Reference: AVCC pin
;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (0<<ADLAR))
;
;// Read the AD conversion result
;unsigned int read_adc(unsigned char adc_input)
; 0000 0019 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 001A ADMUX=adc_input | ADC_VREF_TYPE;
;PCODE: $0000000F VOL: 0
;	adc_input -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 001B // Delay needed for the stabilization of the ADC input voltage
; 0000 001C delay_us(10);
;PCODE: $00000013 VOL: 0
; 0000 001D // Start the AD conversion
; 0000 001E ADCSRA|=(1<<ADSC);
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 001F // Wait for the AD conversion to complete
; 0000 0020 while ((ADCSRA & (1<<ADIF))==0);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0021 ADCSRA|=(1<<ADIF);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0022 return ADCW;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0023 }
;PCODE: $00000023 VOL: 0
;
;void main(void)
; 0000 0026 {
;PCODE: $00000024 VOL: 0
; 0000 0027 
; 0000 0028 // ADC initialization
; 0000 0029 // ADC Clock frequency: 125.000 kHz
; 0000 002A // ADC Voltage Reference: AVCC pin
; 0000 002B // ADC Auto Trigger Source: ADC Stopped
; 0000 002C // Digital input buffers on ADC0: On, ADC1: Off, ADC2: On, ADC3: On
; 0000 002D // ADC4: On, ADC5: On
; 0000 002E DIDR0=(0<<ADC5D) | (0<<ADC4D) | (0<<ADC3D) | (0<<ADC2D) | (1<<ADC1D) | (0<<ADC0D);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 002F ADMUX=ADC_VREF_TYPE;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0030 ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (1<<ADPS1) | (0<<ADPS0);
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0031 ADCSRB=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0032 
; 0000 0033 // USART initialization
; 0000 0034 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0035 // USART Receiver: On
; 0000 0036 // USART Transmitter: On
; 0000 0037 // USART0 Mode: Asynchronous
; 0000 0038 // USART Baud Rate: 1200
; 0000 0039 UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 003A UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 003B UCSR0C=(0<<UMSEL01) | (0<<UMSEL00) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 003C UBRR0H=0x01;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 003D UBRR0L=0xA0;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 003E 
; 0000 003F printf("Jose Manuel Neri Villeda A01706450\r");
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0040 
; 0000 0041 
; 0000 0042 DDRD.6 = 1;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0043 TCCR0A = 0x42;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0044 TCCR0B = 0x03;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0045 OCR0A = 1458;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0046 
; 0000 0047 DDRC.5 = 1;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0048 TCCR1A=0;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0049 TCCR1B= 0x0B;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 004A OCR1AH= 12499/256;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 004B OCR1AL= 12499%256;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 004C TIMSK1=0x02;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 004D #asm("SEI")
;PCODE: $00000052 VOL: 0
	SEI
;PCODE: $00000053 VOL: 0
; 0000 004E PORTC.5=~PORTC.5;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 004F 
; 0000 0050 while (1)
;PCODE: $0000005E VOL: 0
; 0000 0051     {
; 0000 0052       //PARTE 2
; 0000 0053       DDRB = 0xFE;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0054       Val = read_adc(1);
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0055       if (Val < 0.5)
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0056         PORTB = SieteSeg[0];
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0057       if ((Val >= 0.5)||(Val < 1.5))
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0058         PORTB = SieteSeg[1];
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0059       if ((Val >= 1.5)||(Val < 2.5))
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 005A         PORTB = SieteSeg[2];
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 005B       if ((Val >= 2.5)||(Val < 3.5))
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 005C         PORTB = SieteSeg[3];
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 005D       if ((Val >= 3.5)||(Val < 4.5))
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 005E         PORTB = SieteSeg[4];
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 005F       if (Val >= 4.5)
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 0060         PORTB = SieteSeg[5];
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 0061 
; 0000 0062 
; 0000 0063 
; 0000 0064     }
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 0065 }
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
