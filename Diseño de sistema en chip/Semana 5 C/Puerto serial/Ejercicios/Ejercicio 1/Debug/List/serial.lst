
AVRASM ver. 2.1.30  C:\Users\ManuelNeri\Desktop\Puerto serial\Ejercicios\Ejercicio 1\Debug\List\serial.asm Wed Apr 28 10:32:38 2021

                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega328P
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: Off
                 ;Smart register allocation: Off
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004f 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
000034 2710
000035 03e8
000036 0064
000037 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000038 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000039 1000
00003a 0100
00003b 0010
00003c 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
00003d 6f48
00003e 616c
00003f 4d20
000040 6e75      	.DB  0x48,0x6F,0x6C,0x61,0x20,0x4D,0x75,0x6E
000041 6f64
000042 0d21
000043 2000
000044 5345      	.DB  0x64,0x6F,0x21,0xD,0x0,0x20,0x45,0x53
000045 4e20
000046 4d55
000047 5245
000048 0d4f      	.DB  0x20,0x4E,0x55,0x4D,0x45,0x52,0x4F,0xD
000049 2000
00004a 5345
00004b 4f20
00004c 5254      	.DB  0x0,0x20,0x45,0x53,0x20,0x4F,0x54,0x52
00004d 0d4f
C:\Users\ManuelNeri\Desktop\Puerto serial\Ejercicios\Ejercicio 1\Debug\List\serial.asm(1137): warning: .cseg .db misalignment - padding zero byte
00004e 0000      	.DB  0x4F,0xD,0x0
                 __RESET:
00004f 94f8      	CLI
000050 27ee      	CLR  R30
000051 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000052 e0f1      	LDI  R31,1
000053 bff5      	OUT  MCUCR,R31
000054 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000055 e08d      	LDI  R24,(14-2)+1
000056 e0a2      	LDI  R26,2
000057 27bb      	CLR  R27
                 __CLEAR_REG:
000058 93ed      	ST   X+,R30
000059 958a      	DEC  R24
00005a f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00005b e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00005c e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005d e0a0      	LDI  R26,LOW(__SRAM_START)
00005e e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00005f 93ed      	ST   X+,R30
000060 9701      	SBIW R24,1
000061 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GPIOR0 INITIALIZATION
000062 e0e0      	LDI  R30,__GPIOR0_INIT
000063 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000064 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000065 bfed      	OUT  SPL,R30
000066 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000067 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000068 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000069 e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00006a 940c 006c 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 ;/*
                 ; * serial.c
                 ; *
                 ; * Created: 28/04/2021 10:25:26 a. m.
                 ; * Author: ManuelNeri
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <stdio.h>
                 ;
                 ;char dato;
                 ;
                 ;void main(void)
                 ; 0000 000E {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 000F     // USART initialization
                 ; 0000 0010     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0011     // USART Receiver: On
                 ; 0000 0012     // USART Transmitter: On
                 ; 0000 0013     // USART0 Mode: Asynchronous
                 ; 0000 0014     // USART Baud Rate: 9600 (Double Speed Mode)
                 ; 0000 0015     UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (1<<U2X0) | (0<<MPCM0);
00006c e0e2      	LDI  R30,LOW(2)
00006d 93e0 00c0 	STS  192,R30
                 ; 0000 0016     UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
00006f e1e8      	LDI  R30,LOW(24)
000070 93e0 00c1 	STS  193,R30
                 ; 0000 0017     UCSR0C=(0<<UMSEL01) | (0<<UMSEL00) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
000072 e0e6      	LDI  R30,LOW(6)
000073 93e0 00c2 	STS  194,R30
                 ; 0000 0018     UBRR0H=0x00;
000075 e0e0      	LDI  R30,LOW(0)
000076 93e0 00c5 	STS  197,R30
                 ; 0000 0019     UBRR0L=0x0C;
000078 e0ec      	LDI  R30,LOW(12)
000079 93e0 00c4 	STS  196,R30
                 ; 0000 001A 
                 ; 0000 001B     printf("Hola Mundo!\r");
                +
00007b e7ea     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00007c e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00007d 93fa      	ST   -Y,R31
00007e 93ea      	ST   -Y,R30
00007f e080      	LDI  R24,0
000080 d169      	RCALL _printf
000081 9622      	ADIW R28,2
                 ; 0000 001C 
                 ; 0000 001D     while (1)
                 _0x3:
                 ; 0000 001E     {
                 ; 0000 001F         dato = getchar();   //Leer del puerto serial un caracter
000082 d015      	RCALL _getchar
000083 93e0 0300 	STS  _dato,R30
                 ; 0000 0020         if ((dato >= '0')&&(dato<='9'))
000085 91a0 0300 	LDS  R26,_dato
000087 33a0      	CPI  R26,LOW(0x30)
000088 f010      	BRLO _0x7
000089 33aa      	CPI  R26,LOW(0x3A)
00008a f008      	BRLO _0x8
                 _0x7:
00008b c003      	RJMP _0x6
                 _0x8:
                 ; 0000 0021             printf(" ES NUMERO\r");
                +
00008c e8e7     +LDI R30 , LOW ( 2 * _0x0 + ( 13 ) )
00008d e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 13 ) )
                 	__POINTW1FN _0x0,13
00008e c002      	RJMP _0xB
                 ; 0000 0022         else
                 _0x6:
                 ; 0000 0023             printf(" ES OTRO\r");
                +
00008f e9e3     +LDI R30 , LOW ( 2 * _0x0 + ( 25 ) )
000090 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 25 ) )
                 	__POINTW1FN _0x0,25
                 _0xB:
000091 93fa      	ST   -Y,R31
000092 93ea      	ST   -Y,R30
000093 e080      	LDI  R24,0
000094 d155      	RCALL _printf
000095 9622      	ADIW R28,2
                 ; 0000 0024     }
000096 cfeb      	RJMP _0x3
                 ; 0000 0025 }
                 _0xA:
000097 cfff      	RJMP _0xA
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _getchar:
                 ; .FSTART _getchar
                 _0x2000003:
000098 91e0 00c0 	LDS  R30,192
00009a 78e0      	ANDI R30,LOW(0x80)
00009b f3e1      	BREQ _0x2000003
00009c 91e0 00c6 	LDS  R30,198
00009e 9508      	RET
                 ; .FEND
                 _putchar:
                 ; .FSTART _putchar
00009f 93aa      	ST   -Y,R26
                 _0x2000006:
0000a0 91e0 00c0 	LDS  R30,192
0000a2 72e0      	ANDI R30,LOW(0x20)
0000a3 f3e1      	BREQ _0x2000006
0000a4 81e8      	LD   R30,Y
0000a5 93e0 00c6 	STS  198,R30
0000a7 9621      	ADIW R28,1
0000a8 9508      	RET
                 ; .FEND
                 _put_usart_G100:
                 ; .FSTART _put_usart_G100
0000a9 93ba      	ST   -Y,R27
0000aa 93aa      	ST   -Y,R26
0000ab 81aa      	LDD  R26,Y+2
0000ac dff2      	RCALL _putchar
0000ad 81a8      	LD   R26,Y
0000ae 81b9      	LDD  R27,Y+1
0000af 91ed      	LD   R30,X+
0000b0 91fd      	LD   R31,X+
0000b1 9631      	ADIW R30,1
0000b2 93fe      	ST   -X,R31
0000b3 93ee      	ST   -X,R30
0000b4 9623      	ADIW R28,3
0000b5 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0000b6 93ba      	ST   -Y,R27
0000b7 93aa      	ST   -Y,R26
0000b8 9726      	SBIW R28,6
0000b9 940e 025d 	CALL __SAVELOCR6
0000bb e000      	LDI  R16,0
0000bc 85ac      	LDD  R26,Y+12
0000bd 85bd      	LDD  R27,Y+12+1
0000be e0e0      	LDI  R30,LOW(0)
0000bf e0f0      	LDI  R31,HIGH(0)
0000c0 93ed      	ST   X+,R30
0000c1 93fc      	ST   X,R31
                 _0x200001C:
0000c2 89ea      	LDD  R30,Y+18
0000c3 89fb      	LDD  R31,Y+18+1
0000c4 9631      	ADIW R30,1
0000c5 8bea      	STD  Y+18,R30
0000c6 8bfb      	STD  Y+18+1,R31
0000c7 9731      	SBIW R30,1
0000c8 91e4      	LPM  R30,Z
0000c9 2f3e      	MOV  R19,R30
0000ca 30e0      	CPI  R30,0
0000cb f409      	BRNE PC+2
0000cc c115      	RJMP _0x200001E
0000cd 2fe0      	MOV  R30,R16
0000ce 30e0      	CPI  R30,0
0000cf f439      	BRNE _0x2000022
0000d0 3235      	CPI  R19,37
0000d1 f411      	BRNE _0x2000023
0000d2 e001      	LDI  R16,LOW(1)
0000d3 c002      	RJMP _0x2000024
                 _0x2000023:
0000d4 940e 0228 	CALL SUBOPT_0x0
                 _0x2000024:
0000d6 c10a      	RJMP _0x2000021
                 _0x2000022:
0000d7 30e1      	CPI  R30,LOW(0x1)
0000d8 f4a9      	BRNE _0x2000025
0000d9 3235      	CPI  R19,37
0000da f419      	BRNE _0x2000026
0000db 940e 0228 	CALL SUBOPT_0x0
0000dd c102      	RJMP _0x20000D2
                 _0x2000026:
0000de e002      	LDI  R16,LOW(2)
0000df e050      	LDI  R21,LOW(0)
0000e0 e010      	LDI  R17,LOW(0)
0000e1 323d      	CPI  R19,45
0000e2 f411      	BRNE _0x2000027
0000e3 e011      	LDI  R17,LOW(1)
0000e4 c0fc      	RJMP _0x2000021
                 _0x2000027:
0000e5 323b      	CPI  R19,43
0000e6 f411      	BRNE _0x2000028
0000e7 e25b      	LDI  R21,LOW(43)
0000e8 c0f8      	RJMP _0x2000021
                 _0x2000028:
0000e9 3230      	CPI  R19,32
0000ea f411      	BRNE _0x2000029
0000eb e250      	LDI  R21,LOW(32)
0000ec c0f4      	RJMP _0x2000021
                 _0x2000029:
0000ed c002      	RJMP _0x200002A
                 _0x2000025:
0000ee 30e2      	CPI  R30,LOW(0x2)
0000ef f439      	BRNE _0x200002B
                 _0x200002A:
0000f0 e040      	LDI  R20,LOW(0)
0000f1 e003      	LDI  R16,LOW(3)
0000f2 3330      	CPI  R19,48
0000f3 f411      	BRNE _0x200002C
0000f4 6810      	ORI  R17,LOW(128)
0000f5 c0eb      	RJMP _0x2000021
                 _0x200002C:
0000f6 c003      	RJMP _0x200002D
                 _0x200002B:
0000f7 30e3      	CPI  R30,LOW(0x3)
0000f8 f009      	BREQ PC+2
0000f9 c0e7      	RJMP _0x2000021
                 _0x200002D:
0000fa 3330      	CPI  R19,48
0000fb f010      	BRLO _0x2000030
0000fc 333a      	CPI  R19,58
0000fd f008      	BRLO _0x2000031
                 _0x2000030:
0000fe c007      	RJMP _0x200002F
                 _0x2000031:
0000ff e0aa      	LDI  R26,LOW(10)
000100 9f4a      	MUL  R20,R26
000101 2d40      	MOV  R20,R0
000102 2fe3      	MOV  R30,R19
000103 53e0      	SUBI R30,LOW(48)
000104 0f4e      	ADD  R20,R30
000105 c0db      	RJMP _0x2000021
                 _0x200002F:
000106 2fe3      	MOV  R30,R19
000107 36e3      	CPI  R30,LOW(0x63)
000108 f449      	BRNE _0x2000035
000109 940e 022f 	CALL SUBOPT_0x1
00010b 89e8      	LDD  R30,Y+16
00010c 89f9      	LDD  R31,Y+16+1
00010d 81a4      	LDD  R26,Z+4
00010e 93aa      	ST   -Y,R26
00010f 940e 0235 	CALL SUBOPT_0x2
000111 c0ce      	RJMP _0x2000036
                 _0x2000035:
000112 37e3      	CPI  R30,LOW(0x73)
000113 f441      	BRNE _0x2000038
000114 940e 022f 	CALL SUBOPT_0x1
000116 940e 023b 	CALL SUBOPT_0x3
000118 940e 020f 	CALL _strlen
00011a 2f0e      	MOV  R16,R30
00011b c00a      	RJMP _0x2000039
                 _0x2000038:
00011c 37e0      	CPI  R30,LOW(0x70)
00011d f461      	BRNE _0x200003B
00011e 940e 022f 	CALL SUBOPT_0x1
000120 940e 023b 	CALL SUBOPT_0x3
000122 940e 021b 	CALL _strlenf
000124 2f0e      	MOV  R16,R30
000125 6018      	ORI  R17,LOW(8)
                 _0x2000039:
000126 6012      	ORI  R17,LOW(2)
000127 771f      	ANDI R17,LOW(127)
000128 e020      	LDI  R18,LOW(0)
000129 c034      	RJMP _0x200003C
                 _0x200003B:
00012a 36e4      	CPI  R30,LOW(0x64)
00012b f011      	BREQ _0x200003F
00012c 36e9      	CPI  R30,LOW(0x69)
00012d f411      	BRNE _0x2000040
                 _0x200003F:
00012e 6014      	ORI  R17,LOW(4)
00012f c002      	RJMP _0x2000041
                 _0x2000040:
000130 37e5      	CPI  R30,LOW(0x75)
000131 f431      	BRNE _0x2000042
                 _0x2000041:
000132 e6e8      	LDI  R30,LOW(_tbl10_G100*2)
000133 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000134 83ee      	STD  Y+6,R30
000135 83ff      	STD  Y+6+1,R31
000136 e005      	LDI  R16,LOW(5)
000137 c00c      	RJMP _0x2000043
                 _0x2000042:
000138 35e8      	CPI  R30,LOW(0x58)
000139 f411      	BRNE _0x2000045
00013a 6018      	ORI  R17,LOW(8)
00013b c003      	RJMP _0x2000046
                 _0x2000045:
00013c 37e8      	CPI  R30,LOW(0x78)
00013d f009      	BREQ PC+2
00013e c0a1      	RJMP _0x2000077
                 _0x2000046:
00013f e7e2      	LDI  R30,LOW(_tbl16_G100*2)
000140 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000141 83ee      	STD  Y+6,R30
000142 83ff      	STD  Y+6+1,R31
000143 e004      	LDI  R16,LOW(4)
                 _0x2000043:
000144 ff12      	SBRS R17,2
000145 c014      	RJMP _0x2000048
000146 940e 022f 	CALL SUBOPT_0x1
000148 940e 0245 	CALL SUBOPT_0x4
00014a 85ab      	LDD  R26,Y+11
00014b 23aa      	TST  R26
00014c f43a      	BRPL _0x2000049
00014d 85ea      	LDD  R30,Y+10
00014e 85fb      	LDD  R31,Y+10+1
00014f 940e 0251 	CALL __ANEGW1
000151 87ea      	STD  Y+10,R30
000152 87fb      	STD  Y+10+1,R31
000153 e25d      	LDI  R21,LOW(45)
                 _0x2000049:
000154 3050      	CPI  R21,0
000155 f011      	BREQ _0x200004A
000156 5f0f      	SUBI R16,-LOW(1)
000157 c001      	RJMP _0x200004B
                 _0x200004A:
000158 7f1b      	ANDI R17,LOW(251)
                 _0x200004B:
000159 c004      	RJMP _0x200004C
                 _0x2000048:
00015a 940e 022f 	CALL SUBOPT_0x1
00015c 940e 0245 	CALL SUBOPT_0x4
                 _0x200004C:
                 _0x200003C:
00015e fd10      	SBRC R17,0
00015f c011      	RJMP _0x200004D
                 _0x200004E:
000160 1704      	CP   R16,R20
000161 f478      	BRSH _0x2000050
000162 ff17      	SBRS R17,7
000163 c008      	RJMP _0x2000051
000164 ff12      	SBRS R17,2
000165 c004      	RJMP _0x2000052
000166 7f1b      	ANDI R17,LOW(251)
000167 2f35      	MOV  R19,R21
000168 5001      	SUBI R16,LOW(1)
000169 c001      	RJMP _0x2000053
                 _0x2000052:
00016a e330      	LDI  R19,LOW(48)
                 _0x2000053:
00016b c001      	RJMP _0x2000054
                 _0x2000051:
00016c e230      	LDI  R19,LOW(32)
                 _0x2000054:
00016d 940e 0228 	CALL SUBOPT_0x0
00016f 5041      	SUBI R20,LOW(1)
000170 cfef      	RJMP _0x200004E
                 _0x2000050:
                 _0x200004D:
000171 2f20      	MOV  R18,R16
000172 ff11      	SBRS R17,1
000173 c017      	RJMP _0x2000055
                 _0x2000056:
000174 3020      	CPI  R18,0
000175 f0a1      	BREQ _0x2000058
000176 ff13      	SBRS R17,3
000177 c006      	RJMP _0x2000059
000178 81ee      	LDD  R30,Y+6
000179 81ff      	LDD  R31,Y+6+1
00017a 9135      	LPM  R19,Z+
00017b 83ee      	STD  Y+6,R30
00017c 83ff      	STD  Y+6+1,R31
00017d c005      	RJMP _0x200005A
                 _0x2000059:
00017e 81ae      	LDD  R26,Y+6
00017f 81bf      	LDD  R27,Y+6+1
000180 913d      	LD   R19,X+
000181 83ae      	STD  Y+6,R26
000182 83bf      	STD  Y+6+1,R27
                 _0x200005A:
000183 940e 0228 	CALL SUBOPT_0x0
000185 3040      	CPI  R20,0
000186 f009      	BREQ _0x200005B
000187 5041      	SUBI R20,LOW(1)
                 _0x200005B:
000188 5021      	SUBI R18,LOW(1)
000189 cfea      	RJMP _0x2000056
                 _0x2000058:
00018a c04b      	RJMP _0x200005C
                 _0x2000055:
                 _0x200005E:
00018b e330      	LDI  R19,LOW(48)
00018c 81ee      	LDD  R30,Y+6
00018d 81ff      	LDD  R31,Y+6+1
00018e 940e 0259 	CALL __GETW1PF
000190 87e8      	STD  Y+8,R30
000191 87f9      	STD  Y+8+1,R31
000192 81ee      	LDD  R30,Y+6
000193 81ff      	LDD  R31,Y+6+1
000194 9632      	ADIW R30,2
000195 83ee      	STD  Y+6,R30
000196 83ff      	STD  Y+6+1,R31
                 _0x2000060:
000197 85e8      	LDD  R30,Y+8
000198 85f9      	LDD  R31,Y+8+1
000199 85aa      	LDD  R26,Y+10
00019a 85bb      	LDD  R27,Y+10+1
00019b 17ae      	CP   R26,R30
00019c 07bf      	CPC  R27,R31
00019d f050      	BRLO _0x2000062
00019e 5f3f      	SUBI R19,-LOW(1)
00019f 85a8      	LDD  R26,Y+8
0001a0 85b9      	LDD  R27,Y+8+1
0001a1 85ea      	LDD  R30,Y+10
0001a2 85fb      	LDD  R31,Y+10+1
0001a3 1bea      	SUB  R30,R26
0001a4 0bfb      	SBC  R31,R27
0001a5 87ea      	STD  Y+10,R30
0001a6 87fb      	STD  Y+10+1,R31
0001a7 cfef      	RJMP _0x2000060
                 _0x2000062:
0001a8 333a      	CPI  R19,58
0001a9 f028      	BRLO _0x2000063
0001aa ff13      	SBRS R17,3
0001ab c002      	RJMP _0x2000064
0001ac 5f39      	SUBI R19,-LOW(7)
0001ad c001      	RJMP _0x2000065
                 _0x2000064:
0001ae 5d39      	SUBI R19,-LOW(39)
                 _0x2000065:
                 _0x2000063:
0001af fd14      	SBRC R17,4
0001b0 c01a      	RJMP _0x2000067
0001b1 3331      	CPI  R19,49
0001b2 f420      	BRSH _0x2000069
0001b3 85a8      	LDD  R26,Y+8
0001b4 85b9      	LDD  R27,Y+8+1
0001b5 9711      	SBIW R26,1
0001b6 f409      	BRNE _0x2000068
                 _0x2000069:
0001b7 c009      	RJMP _0x20000D3
                 _0x2000068:
0001b8 1742      	CP   R20,R18
0001b9 f010      	BRLO _0x200006D
0001ba ff10      	SBRS R17,0
0001bb c001      	RJMP _0x200006E
                 _0x200006D:
0001bc c013      	RJMP _0x200006C
                 _0x200006E:
0001bd e230      	LDI  R19,LOW(32)
0001be ff17      	SBRS R17,7
0001bf c00b      	RJMP _0x200006F
0001c0 e330      	LDI  R19,LOW(48)
                 _0x20000D3:
0001c1 6110      	ORI  R17,LOW(16)
0001c2 ff12      	SBRS R17,2
0001c3 c007      	RJMP _0x2000070
0001c4 7f1b      	ANDI R17,LOW(251)
0001c5 935a      	ST   -Y,R21
0001c6 940e 0235 	CALL SUBOPT_0x2
0001c8 3040      	CPI  R20,0
0001c9 f009      	BREQ _0x2000071
0001ca 5041      	SUBI R20,LOW(1)
                 _0x2000071:
                 _0x2000070:
                 _0x200006F:
                 _0x2000067:
0001cb 940e 0228 	CALL SUBOPT_0x0
0001cd 3040      	CPI  R20,0
0001ce f009      	BREQ _0x2000072
0001cf 5041      	SUBI R20,LOW(1)
                 _0x2000072:
                 _0x200006C:
0001d0 5021      	SUBI R18,LOW(1)
0001d1 85a8      	LDD  R26,Y+8
0001d2 85b9      	LDD  R27,Y+8+1
0001d3 9712      	SBIW R26,2
0001d4 f008      	BRLO _0x200005F
0001d5 cfb5      	RJMP _0x200005E
                 _0x200005F:
                 _0x200005C:
0001d6 ff10      	SBRS R17,0
0001d7 c008      	RJMP _0x2000073
                 _0x2000074:
0001d8 3040      	CPI  R20,0
0001d9 f031      	BREQ _0x2000076
0001da 5041      	SUBI R20,LOW(1)
0001db e2e0      	LDI  R30,LOW(32)
0001dc 93ea      	ST   -Y,R30
0001dd 940e 0235 	CALL SUBOPT_0x2
0001df cff8      	RJMP _0x2000074
                 _0x2000076:
                 _0x2000073:
                 _0x2000077:
                 _0x2000036:
                 _0x20000D2:
0001e0 e000      	LDI  R16,LOW(0)
                 _0x2000021:
0001e1 cee0      	RJMP _0x200001C
                 _0x200001E:
0001e2 85ac      	LDD  R26,Y+12
0001e3 85bd      	LDD  R27,Y+12+1
0001e4 940e 0255 	CALL __GETW1P
0001e6 940e 0264 	CALL __LOADLOCR6
0001e8 9664      	ADIW R28,20
0001e9 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
0001ea 92ff      	PUSH R15
0001eb 2ef8      	MOV  R15,R24
0001ec 9726      	SBIW R28,6
0001ed 931a      	ST   -Y,R17
0001ee 930a      	ST   -Y,R16
0001ef 01de      	MOVW R26,R28
0001f0 9614      	ADIW R26,4
0001f1 940e 024d 	CALL __ADDW2R15
0001f3 018d      	MOVW R16,R26
0001f4 e0e0      	LDI  R30,LOW(0)
0001f5 83ec      	STD  Y+4,R30
0001f6 83ed      	STD  Y+4+1,R30
0001f7 83ee      	STD  Y+6,R30
0001f8 83ef      	STD  Y+6+1,R30
0001f9 01de      	MOVW R26,R28
0001fa 9618      	ADIW R26,8
0001fb 940e 024d 	CALL __ADDW2R15
0001fd 940e 0255 	CALL __GETW1P
0001ff 93fa      	ST   -Y,R31
000200 93ea      	ST   -Y,R30
000201 931a      	ST   -Y,R17
000202 930a      	ST   -Y,R16
000203 eae9      	LDI  R30,LOW(_put_usart_G100)
000204 e0f0      	LDI  R31,HIGH(_put_usart_G100)
000205 93fa      	ST   -Y,R31
000206 93ea      	ST   -Y,R30
000207 01de      	MOVW R26,R28
000208 9618      	ADIW R26,8
000209 deac      	RCALL __print_G100
00020a 8119      	LDD  R17,Y+1
00020b 8108      	LDD  R16,Y+0
00020c 9628      	ADIW R28,8
00020d 90ff      	POP  R15
00020e 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
00020f 93ba      	ST   -Y,R27
000210 93aa      	ST   -Y,R26
000211 91a9          ld   r26,y+
000212 91b9          ld   r27,y+
000213 27ee          clr  r30
000214 27ff          clr  r31
                 strlen0:
000215 916d          ld   r22,x+
000216 2366          tst  r22
000217 f011          breq strlen1
000218 9631          adiw r30,1
000219 cffb          rjmp strlen0
                 strlen1:
00021a 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00021b 93ba      	ST   -Y,R27
00021c 93aa      	ST   -Y,R26
00021d 27aa          clr  r26
00021e 27bb          clr  r27
00021f 91e9          ld   r30,y+
000220 91f9          ld   r31,y+
                 strlenf0:
000221 9005      	lpm  r0,z+
000222 2000          tst  r0
000223 f011          breq strlenf1
000224 9611          adiw r26,1
000225 cffb          rjmp strlenf0
                 strlenf1:
000226 01fd          movw r30,r26
000227 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _dato:
000300           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x0:
000228 933a      	ST   -Y,R19
000229 85ad      	LDD  R26,Y+13
00022a 85be      	LDD  R27,Y+13+1
00022b 85ef      	LDD  R30,Y+15
00022c 89f8      	LDD  R31,Y+15+1
00022d 9509      	ICALL
00022e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1:
00022f 89e8      	LDD  R30,Y+16
000230 89f9      	LDD  R31,Y+16+1
000231 9734      	SBIW R30,4
000232 8be8      	STD  Y+16,R30
000233 8bf9      	STD  Y+16+1,R31
000234 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000235 85ad      	LDD  R26,Y+13
000236 85be      	LDD  R27,Y+13+1
000237 85ef      	LDD  R30,Y+15
000238 89f8      	LDD  R31,Y+15+1
000239 9509      	ICALL
00023a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3:
00023b 89a8      	LDD  R26,Y+16
00023c 89b9      	LDD  R27,Y+16+1
00023d 9614      	ADIW R26,4
00023e 940e 0255 	CALL __GETW1P
000240 83ee      	STD  Y+6,R30
000241 83ff      	STD  Y+6+1,R31
000242 81ae      	LDD  R26,Y+6
000243 81bf      	LDD  R27,Y+6+1
000244 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
000245 89a8      	LDD  R26,Y+16
000246 89b9      	LDD  R27,Y+16+1
000247 9614      	ADIW R26,4
000248 940e 0255 	CALL __GETW1P
00024a 87ea      	STD  Y+10,R30
00024b 87fb      	STD  Y+10+1,R31
00024c 9508      	RET
                 
                 
                 	.CSEG
                 __ADDW2R15:
00024d 2400      	CLR  R0
00024e 0daf      	ADD  R26,R15
00024f 1db0      	ADC  R27,R0
000250 9508      	RET
                 
                 __ANEGW1:
000251 95f1      	NEG  R31
000252 95e1      	NEG  R30
000253 40f0      	SBCI R31,0
000254 9508      	RET
                 
                 __GETW1P:
000255 91ed      	LD   R30,X+
000256 91fc      	LD   R31,X
000257 9711      	SBIW R26,1
000258 9508      	RET
                 
                 __GETW1PF:
000259 9005      	LPM  R0,Z+
00025a 91f4      	LPM  R31,Z
00025b 2de0      	MOV  R30,R0
00025c 9508      	RET
                 
                 __SAVELOCR6:
00025d 935a      	ST   -Y,R21
                 __SAVELOCR5:
00025e 934a      	ST   -Y,R20
                 __SAVELOCR4:
00025f 933a      	ST   -Y,R19
                 __SAVELOCR3:
000260 932a      	ST   -Y,R18
                 __SAVELOCR2:
000261 931a      	ST   -Y,R17
000262 930a      	ST   -Y,R16
000263 9508      	RET
                 
                 __LOADLOCR6:
000264 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000265 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000266 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000267 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000268 8119      	LDD  R17,Y+1
000269 8108      	LD   R16,Y
00026a 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :   7 r1 :   0 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  20 r17:  29 r18:   8 r19:  27 r20:  17 r21:   9 r22:   2 r23:   0 
r24:   7 r25:   1 r26:  50 r27:  25 r28:  12 r29:   1 r30: 108 r31:  46 
x  :  12 y  : 122 z  :   6 
Registers used: 20 out of 35 (57.1%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   2 
adiw  :  16 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  13 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   0 brne  :  19 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  29 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   7 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   3 cpc   :   1 cpi   :  31 cpse  :   0 dec   :   1 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   0 inc   :   0 jmp   :  27 ld    :  13 ldd   :  57 ldi   :  56 
lds   :   4 lpm   :   7 lsl   :   0 lsr   :   0 mov   :  11 movw  :   5 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   0 
ori   :   6 out   :   6 pop   :   1 push  :   1 rcall :   5 ret   :  18 
reti  :   0 rjmp  :  53 rol   :   0 ror   :   0 sbc   :   1 sbci  :   1 
sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :   8 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  37 std   :  28 sts   :   7 sub   :   1 subi  :  13 swap  :   0 
tst   :   3 wdr   :   0 
Instructions used: 45 out of 116 (38.8%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0004d6   1184     54   1238   32768   3.8%
[.dseg] 0x000100 0x000301      0      1      1    2048   0.0%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 1 warnings
