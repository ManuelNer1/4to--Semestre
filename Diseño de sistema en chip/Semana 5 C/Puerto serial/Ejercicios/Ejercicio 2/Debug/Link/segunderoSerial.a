;/*
; * segunderoSerial.c
; *
; * Created: 28/04/2021 11:17:39 a. m.
; * Author: ManuelNeri
; */
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <stdio.h>
;
;unsigned int seg = 0;
;char opcion;
;
;void main(void)
; 0000 0010 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0011     CLKPR = 0x80;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0012     CLKPR = 0;      //Micro a 8MHz
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0013 
; 0000 0014     // USART initialization
; 0000 0015     // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0016     // USART Receiver: On
; 0000 0017     // USART Transmitter: On
; 0000 0018     // USART0 Mode: Asynchronous
; 0000 0019     // USART Baud Rate: 19200 (Double Speed Mode)
; 0000 001A     UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (1<<U2X0) | (0<<MPCM0);
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 001B     UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 001C     UCSR0C=(0<<UMSEL01) | (0<<UMSEL00) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 001D     UBRR0H=0x00;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 001E     UBRR0L=0x19;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 001F 
; 0000 0020     printf ("Segundos transcurridos\r");
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0021 
; 0000 0022     while (1)
;PCODE: $00000023 VOL: 0
; 0000 0023     {
; 0000 0024         printf("%i seg\r",seg++);
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0025         delay_ms(1000);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0026         if ((UCSR0A&0x80)!=0)
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0027         {
; 0000 0028             opcion = getchar();
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0029             if ((opcion == 'C')||(opcion == 'c'))
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 002A             {
; 0000 002B                 seg = 0;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 002C                 printf("Segundos reiniciados\r");
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 002D             }
; 0000 002E 
; 0000 002F         }
;PCODE: $0000004A VOL: 0
; 0000 0030     }
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0031 }
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
