
AVRASM ver. 2.1.30  C:\Users\ManuelNeri\Desktop\Puerto serial\Ejercicios\Ejercicio 2\Debug\List\segunderoSerial.asm Wed Apr 28 11:37:55 2021

                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega328P
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: Off
                 ;Smart register allocation: Off
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0058 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
000034 2710
000035 03e8
000036 0064
000037 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000038 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000039 1000
00003a 0100
00003b 0010
00003c 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
00003d 6553
00003e 7567
00003f 646e
000040 736f      	.DB  0x53,0x65,0x67,0x75,0x6E,0x64,0x6F,0x73
000041 7420
000042 6172
000043 736e
000044 7563      	.DB  0x20,0x74,0x72,0x61,0x6E,0x73,0x63,0x75
000045 7272
000046 6469
000047 736f
000048 000d      	.DB  0x72,0x72,0x69,0x64,0x6F,0x73,0xD,0x0
000049 6925
00004a 7320
00004b 6765
00004c 000d      	.DB  0x25,0x69,0x20,0x73,0x65,0x67,0xD,0x0
00004d 6553
00004e 7567
00004f 646e
000050 736f      	.DB  0x53,0x65,0x67,0x75,0x6E,0x64,0x6F,0x73
000051 7220
000052 6965
000053 696e
000054 6963      	.DB  0x20,0x72,0x65,0x69,0x6E,0x69,0x63,0x69
000055 6461
000056 736f
000057 000d      	.DB  0x61,0x64,0x6F,0x73,0xD,0x0
                 __RESET:
000058 94f8      	CLI
000059 27ee      	CLR  R30
00005a bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00005b e0f1      	LDI  R31,1
00005c bff5      	OUT  MCUCR,R31
00005d bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00005e e08d      	LDI  R24,(14-2)+1
00005f e0a2      	LDI  R26,2
000060 27bb      	CLR  R27
                 __CLEAR_REG:
000061 93ed      	ST   X+,R30
000062 958a      	DEC  R24
000063 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000064 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000065 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000066 e0a0      	LDI  R26,LOW(__SRAM_START)
000067 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000068 93ed      	ST   X+,R30
000069 9701      	SBIW R24,1
00006a f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GPIOR0 INITIALIZATION
00006b e0e0      	LDI  R30,__GPIOR0_INIT
00006c bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00006d efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006e bfed      	OUT  SPL,R30
00006f e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000070 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000071 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000072 e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000073 940c 0075 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 ;/*
                 ; * segunderoSerial.c
                 ; *
                 ; * Created: 28/04/2021 11:17:39 a. m.
                 ; * Author: ManuelNeri
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;
                 ;unsigned int seg = 0;
                 ;char opcion;
                 ;
                 ;void main(void)
                 ; 0000 0010 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0011     CLKPR = 0x80;
000075 e8e0      	LDI  R30,LOW(128)
000076 93e0 0061 	STS  97,R30
                 ; 0000 0012     CLKPR = 0;      //Micro a 8MHz
000078 e0e0      	LDI  R30,LOW(0)
000079 93e0 0061 	STS  97,R30
                 ; 0000 0013 
                 ; 0000 0014     // USART initialization
                 ; 0000 0015     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0016     // USART Receiver: On
                 ; 0000 0017     // USART Transmitter: On
                 ; 0000 0018     // USART0 Mode: Asynchronous
                 ; 0000 0019     // USART Baud Rate: 19200 (Double Speed Mode)
                 ; 0000 001A     UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (1<<U2X0) | (0<<MPCM0);
00007b e0e2      	LDI  R30,LOW(2)
00007c 93e0 00c0 	STS  192,R30
                 ; 0000 001B     UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
00007e e1e8      	LDI  R30,LOW(24)
00007f 93e0 00c1 	STS  193,R30
                 ; 0000 001C     UCSR0C=(0<<UMSEL01) | (0<<UMSEL00) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
000081 e0e6      	LDI  R30,LOW(6)
000082 93e0 00c2 	STS  194,R30
                 ; 0000 001D     UBRR0H=0x00;
000084 e0e0      	LDI  R30,LOW(0)
000085 93e0 00c5 	STS  197,R30
                 ; 0000 001E     UBRR0L=0x19;
000087 e1e9      	LDI  R30,LOW(25)
000088 93e0 00c4 	STS  196,R30
                 ; 0000 001F 
                 ; 0000 0020     printf ("Segundos transcurridos\r");
                +
00008a e7ea     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00008b e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00008c 940e 024d 	CALL SUBOPT_0x0
                 ; 0000 0021 
                 ; 0000 0022     while (1)
                 _0x3:
                 ; 0000 0023     {
                 ; 0000 0024         printf("%i seg\r",seg++);
                +
00008e e9e2     +LDI R30 , LOW ( 2 * _0x0 + ( 24 ) )
00008f e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 24 ) )
                 	__POINTW1FN _0x0,24
000090 93fa      	ST   -Y,R31
000091 93ea      	ST   -Y,R30
000092 e0a0      	LDI  R26,LOW(_seg)
000093 e0b3      	LDI  R27,HIGH(_seg)
000094 91ed      	LD   R30,X+
000095 91fd      	LD   R31,X+
000096 9631      	ADIW R30,1
000097 93fe      	ST   -X,R31
000098 93ee      	ST   -X,R30
000099 9731      	SBIW R30,1
00009a 2766      	CLR  R22
00009b 2777      	CLR  R23
00009c 940e 0293 	CALL __PUTPARD1
00009e e084      	LDI  R24,4
00009f d16f      	RCALL _printf
0000a0 9626      	ADIW R28,6
                 ; 0000 0025         delay_ms(1000);
0000a1 eea8      	LDI  R26,LOW(1000)
0000a2 e0b3      	LDI  R27,HIGH(1000)
0000a3 940e 0279 	CALL _delay_ms
                 ; 0000 0026         if ((UCSR0A&0x80)!=0)
0000a5 91e0 00c0 	LDS  R30,192
0000a7 78e0      	ANDI R30,LOW(0x80)
0000a8 f091      	BREQ _0x6
                 ; 0000 0027         {
                 ; 0000 0028             opcion = getchar();
0000a9 d013      	RCALL _getchar
0000aa 93e0 0302 	STS  _opcion,R30
                 ; 0000 0029             if ((opcion == 'C')||(opcion == 'c'))
0000ac 91a0 0302 	LDS  R26,_opcion
0000ae 34a3      	CPI  R26,LOW(0x43)
0000af f011      	BREQ _0x8
0000b0 36a3      	CPI  R26,LOW(0x63)
0000b1 f449      	BRNE _0x7
                 _0x8:
                 ; 0000 002A             {
                 ; 0000 002B                 seg = 0;
0000b2 e0e0      	LDI  R30,LOW(0)
0000b3 93e0 0300 	STS  _seg,R30
0000b5 93e0 0301 	STS  _seg+1,R30
                 ; 0000 002C                 printf("Segundos reiniciados\r");
                +
0000b7 e9ea     +LDI R30 , LOW ( 2 * _0x0 + ( 32 ) )
0000b8 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 32 ) )
                 	__POINTW1FN _0x0,32
0000b9 940e 024d 	CALL SUBOPT_0x0
                 ; 0000 002D             }
                 ; 0000 002E 
                 ; 0000 002F         }
                 _0x7:
                 ; 0000 0030     }
                 _0x6:
0000bb cfd2      	RJMP _0x3
                 ; 0000 0031 }
                 _0xA:
0000bc cfff      	RJMP _0xA
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _getchar:
                 ; .FSTART _getchar
                 _0x2000003:
0000bd 91e0 00c0 	LDS  R30,192
0000bf 78e0      	ANDI R30,LOW(0x80)
0000c0 f3e1      	BREQ _0x2000003
0000c1 91e0 00c6 	LDS  R30,198
0000c3 9508      	RET
                 ; .FEND
                 _putchar:
                 ; .FSTART _putchar
0000c4 93aa      	ST   -Y,R26
                 _0x2000006:
0000c5 91e0 00c0 	LDS  R30,192
0000c7 72e0      	ANDI R30,LOW(0x20)
0000c8 f3e1      	BREQ _0x2000006
0000c9 81e8      	LD   R30,Y
0000ca 93e0 00c6 	STS  198,R30
0000cc 9621      	ADIW R28,1
0000cd 9508      	RET
                 ; .FEND
                 _put_usart_G100:
                 ; .FSTART _put_usart_G100
0000ce 93ba      	ST   -Y,R27
0000cf 93aa      	ST   -Y,R26
0000d0 81aa      	LDD  R26,Y+2
0000d1 dff2      	RCALL _putchar
0000d2 81a8      	LD   R26,Y
0000d3 81b9      	LDD  R27,Y+1
0000d4 91ed      	LD   R30,X+
0000d5 91fd      	LD   R31,X+
0000d6 9631      	ADIW R30,1
0000d7 93fe      	ST   -X,R31
0000d8 93ee      	ST   -X,R30
0000d9 9623      	ADIW R28,3
0000da 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0000db 93ba      	ST   -Y,R27
0000dc 93aa      	ST   -Y,R26
0000dd 9726      	SBIW R28,6
0000de 940e 0298 	CALL __SAVELOCR6
0000e0 e000      	LDI  R16,0
0000e1 85ac      	LDD  R26,Y+12
0000e2 85bd      	LDD  R27,Y+12+1
0000e3 e0e0      	LDI  R30,LOW(0)
0000e4 e0f0      	LDI  R31,HIGH(0)
0000e5 93ed      	ST   X+,R30
0000e6 93fc      	ST   X,R31
                 _0x200001C:
0000e7 89ea      	LDD  R30,Y+18
0000e8 89fb      	LDD  R31,Y+18+1
0000e9 9631      	ADIW R30,1
0000ea 8bea      	STD  Y+18,R30
0000eb 8bfb      	STD  Y+18+1,R31
0000ec 9731      	SBIW R30,1
0000ed 91e4      	LPM  R30,Z
0000ee 2f3e      	MOV  R19,R30
0000ef 30e0      	CPI  R30,0
0000f0 f409      	BRNE PC+2
0000f1 c115      	RJMP _0x200001E
0000f2 2fe0      	MOV  R30,R16
0000f3 30e0      	CPI  R30,0
0000f4 f439      	BRNE _0x2000022
0000f5 3235      	CPI  R19,37
0000f6 f411      	BRNE _0x2000023
0000f7 e001      	LDI  R16,LOW(1)
0000f8 c002      	RJMP _0x2000024
                 _0x2000023:
0000f9 940e 0254 	CALL SUBOPT_0x1
                 _0x2000024:
0000fb c10a      	RJMP _0x2000021
                 _0x2000022:
0000fc 30e1      	CPI  R30,LOW(0x1)
0000fd f4a9      	BRNE _0x2000025
0000fe 3235      	CPI  R19,37
0000ff f419      	BRNE _0x2000026
000100 940e 0254 	CALL SUBOPT_0x1
000102 c102      	RJMP _0x20000D2
                 _0x2000026:
000103 e002      	LDI  R16,LOW(2)
000104 e050      	LDI  R21,LOW(0)
000105 e010      	LDI  R17,LOW(0)
000106 323d      	CPI  R19,45
000107 f411      	BRNE _0x2000027
000108 e011      	LDI  R17,LOW(1)
000109 c0fc      	RJMP _0x2000021
                 _0x2000027:
00010a 323b      	CPI  R19,43
00010b f411      	BRNE _0x2000028
00010c e25b      	LDI  R21,LOW(43)
00010d c0f8      	RJMP _0x2000021
                 _0x2000028:
00010e 3230      	CPI  R19,32
00010f f411      	BRNE _0x2000029
000110 e250      	LDI  R21,LOW(32)
000111 c0f4      	RJMP _0x2000021
                 _0x2000029:
000112 c002      	RJMP _0x200002A
                 _0x2000025:
000113 30e2      	CPI  R30,LOW(0x2)
000114 f439      	BRNE _0x200002B
                 _0x200002A:
000115 e040      	LDI  R20,LOW(0)
000116 e003      	LDI  R16,LOW(3)
000117 3330      	CPI  R19,48
000118 f411      	BRNE _0x200002C
000119 6810      	ORI  R17,LOW(128)
00011a c0eb      	RJMP _0x2000021
                 _0x200002C:
00011b c003      	RJMP _0x200002D
                 _0x200002B:
00011c 30e3      	CPI  R30,LOW(0x3)
00011d f009      	BREQ PC+2
00011e c0e7      	RJMP _0x2000021
                 _0x200002D:
00011f 3330      	CPI  R19,48
000120 f010      	BRLO _0x2000030
000121 333a      	CPI  R19,58
000122 f008      	BRLO _0x2000031
                 _0x2000030:
000123 c007      	RJMP _0x200002F
                 _0x2000031:
000124 e0aa      	LDI  R26,LOW(10)
000125 9f4a      	MUL  R20,R26
000126 2d40      	MOV  R20,R0
000127 2fe3      	MOV  R30,R19
000128 53e0      	SUBI R30,LOW(48)
000129 0f4e      	ADD  R20,R30
00012a c0db      	RJMP _0x2000021
                 _0x200002F:
00012b 2fe3      	MOV  R30,R19
00012c 36e3      	CPI  R30,LOW(0x63)
00012d f449      	BRNE _0x2000035
00012e 940e 025b 	CALL SUBOPT_0x2
000130 89e8      	LDD  R30,Y+16
000131 89f9      	LDD  R31,Y+16+1
000132 81a4      	LDD  R26,Z+4
000133 93aa      	ST   -Y,R26
000134 940e 0261 	CALL SUBOPT_0x3
000136 c0ce      	RJMP _0x2000036
                 _0x2000035:
000137 37e3      	CPI  R30,LOW(0x73)
000138 f441      	BRNE _0x2000038
000139 940e 025b 	CALL SUBOPT_0x2
00013b 940e 0267 	CALL SUBOPT_0x4
00013d 940e 0234 	CALL _strlen
00013f 2f0e      	MOV  R16,R30
000140 c00a      	RJMP _0x2000039
                 _0x2000038:
000141 37e0      	CPI  R30,LOW(0x70)
000142 f461      	BRNE _0x200003B
000143 940e 025b 	CALL SUBOPT_0x2
000145 940e 0267 	CALL SUBOPT_0x4
000147 940e 0240 	CALL _strlenf
000149 2f0e      	MOV  R16,R30
00014a 6018      	ORI  R17,LOW(8)
                 _0x2000039:
00014b 6012      	ORI  R17,LOW(2)
00014c 771f      	ANDI R17,LOW(127)
00014d e020      	LDI  R18,LOW(0)
00014e c034      	RJMP _0x200003C
                 _0x200003B:
00014f 36e4      	CPI  R30,LOW(0x64)
000150 f011      	BREQ _0x200003F
000151 36e9      	CPI  R30,LOW(0x69)
000152 f411      	BRNE _0x2000040
                 _0x200003F:
000153 6014      	ORI  R17,LOW(4)
000154 c002      	RJMP _0x2000041
                 _0x2000040:
000155 37e5      	CPI  R30,LOW(0x75)
000156 f431      	BRNE _0x2000042
                 _0x2000041:
000157 e6e8      	LDI  R30,LOW(_tbl10_G100*2)
000158 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000159 83ee      	STD  Y+6,R30
00015a 83ff      	STD  Y+6+1,R31
00015b e005      	LDI  R16,LOW(5)
00015c c00c      	RJMP _0x2000043
                 _0x2000042:
00015d 35e8      	CPI  R30,LOW(0x58)
00015e f411      	BRNE _0x2000045
00015f 6018      	ORI  R17,LOW(8)
000160 c003      	RJMP _0x2000046
                 _0x2000045:
000161 37e8      	CPI  R30,LOW(0x78)
000162 f009      	BREQ PC+2
000163 c0a1      	RJMP _0x2000077
                 _0x2000046:
000164 e7e2      	LDI  R30,LOW(_tbl16_G100*2)
000165 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000166 83ee      	STD  Y+6,R30
000167 83ff      	STD  Y+6+1,R31
000168 e004      	LDI  R16,LOW(4)
                 _0x2000043:
000169 ff12      	SBRS R17,2
00016a c014      	RJMP _0x2000048
00016b 940e 025b 	CALL SUBOPT_0x2
00016d 940e 0271 	CALL SUBOPT_0x5
00016f 85ab      	LDD  R26,Y+11
000170 23aa      	TST  R26
000171 f43a      	BRPL _0x2000049
000172 85ea      	LDD  R30,Y+10
000173 85fb      	LDD  R31,Y+10+1
000174 940e 0287 	CALL __ANEGW1
000176 87ea      	STD  Y+10,R30
000177 87fb      	STD  Y+10+1,R31
000178 e25d      	LDI  R21,LOW(45)
                 _0x2000049:
000179 3050      	CPI  R21,0
00017a f011      	BREQ _0x200004A
00017b 5f0f      	SUBI R16,-LOW(1)
00017c c001      	RJMP _0x200004B
                 _0x200004A:
00017d 7f1b      	ANDI R17,LOW(251)
                 _0x200004B:
00017e c004      	RJMP _0x200004C
                 _0x2000048:
00017f 940e 025b 	CALL SUBOPT_0x2
000181 940e 0271 	CALL SUBOPT_0x5
                 _0x200004C:
                 _0x200003C:
000183 fd10      	SBRC R17,0
000184 c011      	RJMP _0x200004D
                 _0x200004E:
000185 1704      	CP   R16,R20
000186 f478      	BRSH _0x2000050
000187 ff17      	SBRS R17,7
000188 c008      	RJMP _0x2000051
000189 ff12      	SBRS R17,2
00018a c004      	RJMP _0x2000052
00018b 7f1b      	ANDI R17,LOW(251)
00018c 2f35      	MOV  R19,R21
00018d 5001      	SUBI R16,LOW(1)
00018e c001      	RJMP _0x2000053
                 _0x2000052:
00018f e330      	LDI  R19,LOW(48)
                 _0x2000053:
000190 c001      	RJMP _0x2000054
                 _0x2000051:
000191 e230      	LDI  R19,LOW(32)
                 _0x2000054:
000192 940e 0254 	CALL SUBOPT_0x1
000194 5041      	SUBI R20,LOW(1)
000195 cfef      	RJMP _0x200004E
                 _0x2000050:
                 _0x200004D:
000196 2f20      	MOV  R18,R16
000197 ff11      	SBRS R17,1
000198 c017      	RJMP _0x2000055
                 _0x2000056:
000199 3020      	CPI  R18,0
00019a f0a1      	BREQ _0x2000058
00019b ff13      	SBRS R17,3
00019c c006      	RJMP _0x2000059
00019d 81ee      	LDD  R30,Y+6
00019e 81ff      	LDD  R31,Y+6+1
00019f 9135      	LPM  R19,Z+
0001a0 83ee      	STD  Y+6,R30
0001a1 83ff      	STD  Y+6+1,R31
0001a2 c005      	RJMP _0x200005A
                 _0x2000059:
0001a3 81ae      	LDD  R26,Y+6
0001a4 81bf      	LDD  R27,Y+6+1
0001a5 913d      	LD   R19,X+
0001a6 83ae      	STD  Y+6,R26
0001a7 83bf      	STD  Y+6+1,R27
                 _0x200005A:
0001a8 940e 0254 	CALL SUBOPT_0x1
0001aa 3040      	CPI  R20,0
0001ab f009      	BREQ _0x200005B
0001ac 5041      	SUBI R20,LOW(1)
                 _0x200005B:
0001ad 5021      	SUBI R18,LOW(1)
0001ae cfea      	RJMP _0x2000056
                 _0x2000058:
0001af c04b      	RJMP _0x200005C
                 _0x2000055:
                 _0x200005E:
0001b0 e330      	LDI  R19,LOW(48)
0001b1 81ee      	LDD  R30,Y+6
0001b2 81ff      	LDD  R31,Y+6+1
0001b3 940e 028f 	CALL __GETW1PF
0001b5 87e8      	STD  Y+8,R30
0001b6 87f9      	STD  Y+8+1,R31
0001b7 81ee      	LDD  R30,Y+6
0001b8 81ff      	LDD  R31,Y+6+1
0001b9 9632      	ADIW R30,2
0001ba 83ee      	STD  Y+6,R30
0001bb 83ff      	STD  Y+6+1,R31
                 _0x2000060:
0001bc 85e8      	LDD  R30,Y+8
0001bd 85f9      	LDD  R31,Y+8+1
0001be 85aa      	LDD  R26,Y+10
0001bf 85bb      	LDD  R27,Y+10+1
0001c0 17ae      	CP   R26,R30
0001c1 07bf      	CPC  R27,R31
0001c2 f050      	BRLO _0x2000062
0001c3 5f3f      	SUBI R19,-LOW(1)
0001c4 85a8      	LDD  R26,Y+8
0001c5 85b9      	LDD  R27,Y+8+1
0001c6 85ea      	LDD  R30,Y+10
0001c7 85fb      	LDD  R31,Y+10+1
0001c8 1bea      	SUB  R30,R26
0001c9 0bfb      	SBC  R31,R27
0001ca 87ea      	STD  Y+10,R30
0001cb 87fb      	STD  Y+10+1,R31
0001cc cfef      	RJMP _0x2000060
                 _0x2000062:
0001cd 333a      	CPI  R19,58
0001ce f028      	BRLO _0x2000063
0001cf ff13      	SBRS R17,3
0001d0 c002      	RJMP _0x2000064
0001d1 5f39      	SUBI R19,-LOW(7)
0001d2 c001      	RJMP _0x2000065
                 _0x2000064:
0001d3 5d39      	SUBI R19,-LOW(39)
                 _0x2000065:
                 _0x2000063:
0001d4 fd14      	SBRC R17,4
0001d5 c01a      	RJMP _0x2000067
0001d6 3331      	CPI  R19,49
0001d7 f420      	BRSH _0x2000069
0001d8 85a8      	LDD  R26,Y+8
0001d9 85b9      	LDD  R27,Y+8+1
0001da 9711      	SBIW R26,1
0001db f409      	BRNE _0x2000068
                 _0x2000069:
0001dc c009      	RJMP _0x20000D3
                 _0x2000068:
0001dd 1742      	CP   R20,R18
0001de f010      	BRLO _0x200006D
0001df ff10      	SBRS R17,0
0001e0 c001      	RJMP _0x200006E
                 _0x200006D:
0001e1 c013      	RJMP _0x200006C
                 _0x200006E:
0001e2 e230      	LDI  R19,LOW(32)
0001e3 ff17      	SBRS R17,7
0001e4 c00b      	RJMP _0x200006F
0001e5 e330      	LDI  R19,LOW(48)
                 _0x20000D3:
0001e6 6110      	ORI  R17,LOW(16)
0001e7 ff12      	SBRS R17,2
0001e8 c007      	RJMP _0x2000070
0001e9 7f1b      	ANDI R17,LOW(251)
0001ea 935a      	ST   -Y,R21
0001eb 940e 0261 	CALL SUBOPT_0x3
0001ed 3040      	CPI  R20,0
0001ee f009      	BREQ _0x2000071
0001ef 5041      	SUBI R20,LOW(1)
                 _0x2000071:
                 _0x2000070:
                 _0x200006F:
                 _0x2000067:
0001f0 940e 0254 	CALL SUBOPT_0x1
0001f2 3040      	CPI  R20,0
0001f3 f009      	BREQ _0x2000072
0001f4 5041      	SUBI R20,LOW(1)
                 _0x2000072:
                 _0x200006C:
0001f5 5021      	SUBI R18,LOW(1)
0001f6 85a8      	LDD  R26,Y+8
0001f7 85b9      	LDD  R27,Y+8+1
0001f8 9712      	SBIW R26,2
0001f9 f008      	BRLO _0x200005F
0001fa cfb5      	RJMP _0x200005E
                 _0x200005F:
                 _0x200005C:
0001fb ff10      	SBRS R17,0
0001fc c008      	RJMP _0x2000073
                 _0x2000074:
0001fd 3040      	CPI  R20,0
0001fe f031      	BREQ _0x2000076
0001ff 5041      	SUBI R20,LOW(1)
000200 e2e0      	LDI  R30,LOW(32)
000201 93ea      	ST   -Y,R30
000202 940e 0261 	CALL SUBOPT_0x3
000204 cff8      	RJMP _0x2000074
                 _0x2000076:
                 _0x2000073:
                 _0x2000077:
                 _0x2000036:
                 _0x20000D2:
000205 e000      	LDI  R16,LOW(0)
                 _0x2000021:
000206 cee0      	RJMP _0x200001C
                 _0x200001E:
000207 85ac      	LDD  R26,Y+12
000208 85bd      	LDD  R27,Y+12+1
000209 940e 028b 	CALL __GETW1P
00020b 940e 029f 	CALL __LOADLOCR6
00020d 9664      	ADIW R28,20
00020e 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
00020f 92ff      	PUSH R15
000210 2ef8      	MOV  R15,R24
000211 9726      	SBIW R28,6
000212 931a      	ST   -Y,R17
000213 930a      	ST   -Y,R16
000214 01de      	MOVW R26,R28
000215 9614      	ADIW R26,4
000216 940e 0283 	CALL __ADDW2R15
000218 018d      	MOVW R16,R26
000219 e0e0      	LDI  R30,LOW(0)
00021a 83ec      	STD  Y+4,R30
00021b 83ed      	STD  Y+4+1,R30
00021c 83ee      	STD  Y+6,R30
00021d 83ef      	STD  Y+6+1,R30
00021e 01de      	MOVW R26,R28
00021f 9618      	ADIW R26,8
000220 940e 0283 	CALL __ADDW2R15
000222 940e 028b 	CALL __GETW1P
000224 93fa      	ST   -Y,R31
000225 93ea      	ST   -Y,R30
000226 931a      	ST   -Y,R17
000227 930a      	ST   -Y,R16
000228 ecee      	LDI  R30,LOW(_put_usart_G100)
000229 e0f0      	LDI  R31,HIGH(_put_usart_G100)
00022a 93fa      	ST   -Y,R31
00022b 93ea      	ST   -Y,R30
00022c 01de      	MOVW R26,R28
00022d 9618      	ADIW R26,8
00022e deac      	RCALL __print_G100
00022f 8119      	LDD  R17,Y+1
000230 8108      	LDD  R16,Y+0
000231 9628      	ADIW R28,8
000232 90ff      	POP  R15
000233 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000234 93ba      	ST   -Y,R27
000235 93aa      	ST   -Y,R26
000236 91a9          ld   r26,y+
000237 91b9          ld   r27,y+
000238 27ee          clr  r30
000239 27ff          clr  r31
                 strlen0:
00023a 916d          ld   r22,x+
00023b 2366          tst  r22
00023c f011          breq strlen1
00023d 9631          adiw r30,1
00023e cffb          rjmp strlen0
                 strlen1:
00023f 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000240 93ba      	ST   -Y,R27
000241 93aa      	ST   -Y,R26
000242 27aa          clr  r26
000243 27bb          clr  r27
000244 91e9          ld   r30,y+
000245 91f9          ld   r31,y+
                 strlenf0:
000246 9005      	lpm  r0,z+
000247 2000          tst  r0
000248 f011          breq strlenf1
000249 9611          adiw r26,1
00024a cffb          rjmp strlenf0
                 strlenf1:
00024b 01fd          movw r30,r26
00024c 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _seg:
000300           	.BYTE 0x2
                 _opcion:
000302           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
00024d 93fa      	ST   -Y,R31
00024e 93ea      	ST   -Y,R30
00024f e080      	LDI  R24,0
000250 940e 020f 	CALL _printf
000252 9622      	ADIW R28,2
000253 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1:
000254 933a      	ST   -Y,R19
000255 85ad      	LDD  R26,Y+13
000256 85be      	LDD  R27,Y+13+1
000257 85ef      	LDD  R30,Y+15
000258 89f8      	LDD  R31,Y+15+1
000259 9509      	ICALL
00025a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2:
00025b 89e8      	LDD  R30,Y+16
00025c 89f9      	LDD  R31,Y+16+1
00025d 9734      	SBIW R30,4
00025e 8be8      	STD  Y+16,R30
00025f 8bf9      	STD  Y+16+1,R31
000260 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000261 85ad      	LDD  R26,Y+13
000262 85be      	LDD  R27,Y+13+1
000263 85ef      	LDD  R30,Y+15
000264 89f8      	LDD  R31,Y+15+1
000265 9509      	ICALL
000266 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
000267 89a8      	LDD  R26,Y+16
000268 89b9      	LDD  R27,Y+16+1
000269 9614      	ADIW R26,4
00026a 940e 028b 	CALL __GETW1P
00026c 83ee      	STD  Y+6,R30
00026d 83ff      	STD  Y+6+1,R31
00026e 81ae      	LDD  R26,Y+6
00026f 81bf      	LDD  R27,Y+6+1
000270 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
000271 89a8      	LDD  R26,Y+16
000272 89b9      	LDD  R27,Y+16+1
000273 9614      	ADIW R26,4
000274 940e 028b 	CALL __GETW1P
000276 87ea      	STD  Y+10,R30
000277 87fb      	STD  Y+10+1,R31
000278 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000279 9610      	adiw r26,0
00027a f039      	breq __delay_ms1
                 __delay_ms0:
                +
00027b ef8a     +LDI R24 , LOW ( 0xFA )
00027c e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
00027d 9701     +SBIW R24 , 1
00027e f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
00027f 95a8      	wdr
000280 9711      	sbiw r26,1
000281 f7c9      	brne __delay_ms0
                 __delay_ms1:
000282 9508      	ret
                 
                 __ADDW2R15:
000283 2400      	CLR  R0
000284 0daf      	ADD  R26,R15
000285 1db0      	ADC  R27,R0
000286 9508      	RET
                 
                 __ANEGW1:
000287 95f1      	NEG  R31
000288 95e1      	NEG  R30
000289 40f0      	SBCI R31,0
00028a 9508      	RET
                 
                 __GETW1P:
00028b 91ed      	LD   R30,X+
00028c 91fc      	LD   R31,X
00028d 9711      	SBIW R26,1
00028e 9508      	RET
                 
                 __GETW1PF:
00028f 9005      	LPM  R0,Z+
000290 91f4      	LPM  R31,Z
000291 2de0      	MOV  R30,R0
000292 9508      	RET
                 
                 __PUTPARD1:
000293 937a      	ST   -Y,R23
000294 936a      	ST   -Y,R22
000295 93fa      	ST   -Y,R31
000296 93ea      	ST   -Y,R30
000297 9508      	RET
                 
                 __SAVELOCR6:
000298 935a      	ST   -Y,R21
                 __SAVELOCR5:
000299 934a      	ST   -Y,R20
                 __SAVELOCR4:
00029a 933a      	ST   -Y,R19
                 __SAVELOCR3:
00029b 932a      	ST   -Y,R18
                 __SAVELOCR2:
00029c 931a      	ST   -Y,R17
00029d 930a      	ST   -Y,R16
00029e 9508      	RET
                 
                 __LOADLOCR6:
00029f 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0002a0 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0002a1 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0002a2 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0002a3 8119      	LDD  R17,Y+1
0002a4 8108      	LD   R16,Y
0002a5 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :   7 r1 :   0 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  20 r17:  29 r18:   8 r19:  27 r20:  17 r21:   9 r22:   4 r23:   2 
r24:   9 r25:   2 r26:  54 r27:  27 r28:  12 r29:   1 r30: 122 r31:  49 
x  :  16 y  : 126 z  :   6 
Registers used: 21 out of 35 (60.0%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   2 
adiw  :  18 and   :   0 andi  :   7 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  16 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   6 
brlt  :   0 brmi  :   0 brne  :  22 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  34 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   9 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   3 cpc   :   1 cpi   :  31 cpse  :   0 dec   :   1 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   0 inc   :   0 jmp   :  27 ld    :  15 ldd   :  57 ldi   :  65 
lds   :   5 lpm   :   7 lsl   :   0 lsr   :   0 mov   :  11 movw  :   5 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   0 
ori   :   6 out   :   6 pop   :   1 push  :   1 rcall :   4 ret   :  21 
reti  :   0 rjmp  :  51 rol   :   0 ror   :   0 sbc   :   1 sbci  :   1 
sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :  11 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  43 std   :  28 sts   :  11 sub   :   1 subi  :  13 swap  :   0 
tst   :   3 wdr   :   1 
Instructions used: 46 out of 116 (39.7%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00054c   1284     72   1356   32768   4.1%
[.dseg] 0x000100 0x000303      0      3      3    2048   0.1%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 0 warnings
