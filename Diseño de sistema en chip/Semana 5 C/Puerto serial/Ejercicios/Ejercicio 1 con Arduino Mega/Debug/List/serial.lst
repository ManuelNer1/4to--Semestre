
AVRASM ver. 2.1.30  C:\Users\ManuelNeri\Desktop\Puerto serial\Ejercicios\Ejercicio 1 con Arduino Mega\Debug\List\serial.asm Wed Apr 28 10:47:02 2021

                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega2560
                 ;Program type           : Application
                 ;Clock frequency        : 16.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: Off
                 ;Smart register allocation: Off
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega2560
                 	#pragma AVRPART MEMORY PROG_FLASH 262144
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 8192
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x200
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU RAMPZ=0x3B
                 	.EQU EIND=0x3C
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x74
                 	.EQU XMCRB=0x75
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0200
                 	.EQU __SRAM_END=0x21FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 008d 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
000046 940c 0000 	JMP  0x00
000048 940c 0000 	JMP  0x00
00004a 940c 0000 	JMP  0x00
00004c 940c 0000 	JMP  0x00
00004e 940c 0000 	JMP  0x00
000050 940c 0000 	JMP  0x00
000052 940c 0000 	JMP  0x00
000054 940c 0000 	JMP  0x00
000056 940c 0000 	JMP  0x00
000058 940c 0000 	JMP  0x00
00005a 940c 0000 	JMP  0x00
00005c 940c 0000 	JMP  0x00
00005e 940c 0000 	JMP  0x00
000060 940c 0000 	JMP  0x00
000062 940c 0000 	JMP  0x00
000064 940c 0000 	JMP  0x00
000066 940c 0000 	JMP  0x00
000068 940c 0000 	JMP  0x00
00006a 940c 0000 	JMP  0x00
00006c 940c 0000 	JMP  0x00
00006e 940c 0000 	JMP  0x00
000070 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
000072 2710
000073 03e8
000074 0064
000075 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000076 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000077 1000
000078 0100
000079 0010
00007a 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
00007b 6f48
00007c 616c
00007d 4d20
00007e 6e75      	.DB  0x48,0x6F,0x6C,0x61,0x20,0x4D,0x75,0x6E
00007f 6f64
000080 0d21
000081 2000
000082 5345      	.DB  0x64,0x6F,0x21,0xD,0x0,0x20,0x45,0x53
000083 4e20
000084 4d55
000085 5245
000086 0d4f      	.DB  0x20,0x4E,0x55,0x4D,0x45,0x52,0x4F,0xD
000087 2000
000088 5345
000089 4f20
00008a 5254      	.DB  0x0,0x20,0x45,0x53,0x20,0x4F,0x54,0x52
00008b 0d4f
C:\Users\ManuelNeri\Desktop\Puerto serial\Ejercicios\Ejercicio 1 con Arduino Mega\Debug\List\serial.asm(1172): warning: .cseg .db misalignment - padding zero byte
00008c 0000      	.DB  0x4F,0xD,0x0
                 __RESET:
00008d 94f8      	CLI
00008e 27ee      	CLR  R30
00008f bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000090 e0f1      	LDI  R31,1
000091 bff5      	OUT  MCUCR,R31
000092 bfe5      	OUT  MCUCR,R30
000093 93e0 0074 	STS  XMCRA,R30
000095 93e0 0075 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000097 e08d      	LDI  R24,(14-2)+1
000098 e0a2      	LDI  R26,2
000099 27bb      	CLR  R27
                 __CLEAR_REG:
00009a 93ed      	ST   X+,R30
00009b 958a      	DEC  R24
00009c f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00009d e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00009e e290      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00009f e0a0      	LDI  R26,LOW(__SRAM_START)
0000a0 e0b2      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0000a1 93ed      	ST   X+,R30
0000a2 9701      	SBIW R24,1
0000a3 f7e9      	BRNE __CLEAR_SRAM
                 
0000a4 bf8b      	OUT  RAMPZ,R24
                 
0000a5 bf8c      	OUT  EIND,R24
                 
                 ;GPIOR0 INITIALIZATION
0000a6 e0e0      	LDI  R30,__GPIOR0_INIT
0000a7 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000a8 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000a9 bfed      	OUT  SPL,R30
0000aa e2e1      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000ab bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000ac e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000ad e0d6      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000ae 940c 00b0 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x600
                 
                 	.CSEG
                 ;/*
                 ; * serial.c
                 ; *
                 ; * Created: 28/04/2021 10:25:26 a. m.
                 ; * Author: ManuelNeri
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <stdio.h>
                 ;
                 ;char dato;
                 ;
                 ;void main(void)
                 ; 0000 000E {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 000F     CLKPR = 0x80;
0000b0 e8e0      	LDI  R30,LOW(128)
0000b1 93e0 0061 	STS  97,R30
                 ; 0000 0010     CLKPR = 0x04;
0000b3 e0e4      	LDI  R30,LOW(4)
0000b4 93e0 0061 	STS  97,R30
                 ; 0000 0011 
                 ; 0000 0012     // USART initialization
                 ; 0000 0013     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0014     // USART Receiver: On
                 ; 0000 0015     // USART Transmitter: On
                 ; 0000 0016     // USART0 Mode: Asynchronous
                 ; 0000 0017     // USART Baud Rate: 9600 (Double Speed Mode)
                 ; 0000 0018     UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (1<<U2X0) | (0<<MPCM0);
0000b6 e0e2      	LDI  R30,LOW(2)
0000b7 93e0 00c0 	STS  192,R30
                 ; 0000 0019     UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
0000b9 e1e8      	LDI  R30,LOW(24)
0000ba 93e0 00c1 	STS  193,R30
                 ; 0000 001A     UCSR0C=(0<<UMSEL01) | (0<<UMSEL00) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
0000bc e0e6      	LDI  R30,LOW(6)
0000bd 93e0 00c2 	STS  194,R30
                 ; 0000 001B     UBRR0H=0x00;
0000bf e0e0      	LDI  R30,LOW(0)
0000c0 93e0 00c5 	STS  197,R30
                 ; 0000 001C     UBRR0L=0x0C;
0000c2 e0ec      	LDI  R30,LOW(12)
0000c3 93e0 00c4 	STS  196,R30
                 ; 0000 001D 
                 ; 0000 001E     printf("Hola Mundo!\r");
                +
0000c5 efe6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000c6 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000c7 93fa      	ST   -Y,R31
0000c8 93ea      	ST   -Y,R30
0000c9 e080      	LDI  R24,0
0000ca d169      	RCALL _printf
0000cb 9622      	ADIW R28,2
                 ; 0000 001F 
                 ; 0000 0020     while (1)
                 _0x3:
                 ; 0000 0021     {
                 ; 0000 0022         dato = getchar();   //Leer del puerto serial un caracter
0000cc d015      	RCALL _getchar
0000cd 93e0 0600 	STS  _dato,R30
                 ; 0000 0023         if ((dato >= '0')&&(dato<='9'))
0000cf 91a0 0600 	LDS  R26,_dato
0000d1 33a0      	CPI  R26,LOW(0x30)
0000d2 f010      	BRLO _0x7
0000d3 33aa      	CPI  R26,LOW(0x3A)
0000d4 f008      	BRLO _0x8
                 _0x7:
0000d5 c003      	RJMP _0x6
                 _0x8:
                 ; 0000 0024             printf(" ES NUMERO\r");
                +
0000d6 e0e3     +LDI R30 , LOW ( 2 * _0x0 + ( 13 ) )
0000d7 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 13 ) )
                 	__POINTW1FN _0x0,13
0000d8 c002      	RJMP _0xB
                 ; 0000 0025         else
                 _0x6:
                 ; 0000 0026             printf(" ES OTRO\r");
                +
0000d9 e0ef     +LDI R30 , LOW ( 2 * _0x0 + ( 25 ) )
0000da e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 25 ) )
                 	__POINTW1FN _0x0,25
                 _0xB:
0000db 93fa      	ST   -Y,R31
0000dc 93ea      	ST   -Y,R30
0000dd e080      	LDI  R24,0
0000de d155      	RCALL _printf
0000df 9622      	ADIW R28,2
                 ; 0000 0027     }
0000e0 cfeb      	RJMP _0x3
                 ; 0000 0028 }
                 _0xA:
0000e1 cfff      	RJMP _0xA
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _getchar:
                 ; .FSTART _getchar
                 _0x2000003:
0000e2 91e0 00c0 	LDS  R30,192
0000e4 78e0      	ANDI R30,LOW(0x80)
0000e5 f3e1      	BREQ _0x2000003
0000e6 91e0 00c6 	LDS  R30,198
0000e8 9508      	RET
                 ; .FEND
                 _putchar:
                 ; .FSTART _putchar
0000e9 93aa      	ST   -Y,R26
                 _0x2000006:
0000ea 91e0 00c0 	LDS  R30,192
0000ec 72e0      	ANDI R30,LOW(0x20)
0000ed f3e1      	BREQ _0x2000006
0000ee 81e8      	LD   R30,Y
0000ef 93e0 00c6 	STS  198,R30
0000f1 9621      	ADIW R28,1
0000f2 9508      	RET
                 ; .FEND
                 _put_usart_G100:
                 ; .FSTART _put_usart_G100
0000f3 93ba      	ST   -Y,R27
0000f4 93aa      	ST   -Y,R26
0000f5 81aa      	LDD  R26,Y+2
0000f6 dff2      	RCALL _putchar
0000f7 81a8      	LD   R26,Y
0000f8 81b9      	LDD  R27,Y+1
0000f9 91ed      	LD   R30,X+
0000fa 91fd      	LD   R31,X+
0000fb 9631      	ADIW R30,1
0000fc 93fe      	ST   -X,R31
0000fd 93ee      	ST   -X,R30
0000fe 9623      	ADIW R28,3
0000ff 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
000100 93ba      	ST   -Y,R27
000101 93aa      	ST   -Y,R26
000102 9726      	SBIW R28,6
000103 940e 02a7 	CALL __SAVELOCR6
000105 e000      	LDI  R16,0
000106 85ac      	LDD  R26,Y+12
000107 85bd      	LDD  R27,Y+12+1
000108 e0e0      	LDI  R30,LOW(0)
000109 e0f0      	LDI  R31,HIGH(0)
00010a 93ed      	ST   X+,R30
00010b 93fc      	ST   X,R31
                 _0x200001C:
00010c 89ea      	LDD  R30,Y+18
00010d 89fb      	LDD  R31,Y+18+1
00010e 9631      	ADIW R30,1
00010f 8bea      	STD  Y+18,R30
000110 8bfb      	STD  Y+18+1,R31
000111 9731      	SBIW R30,1
000112 91e4      	LPM  R30,Z
000113 2f3e      	MOV  R19,R30
000114 30e0      	CPI  R30,0
000115 f409      	BRNE PC+2
000116 c115      	RJMP _0x200001E
000117 2fe0      	MOV  R30,R16
000118 30e0      	CPI  R30,0
000119 f439      	BRNE _0x2000022
00011a 3235      	CPI  R19,37
00011b f411      	BRNE _0x2000023
00011c e001      	LDI  R16,LOW(1)
00011d c002      	RJMP _0x2000024
                 _0x2000023:
00011e 940e 0272 	CALL SUBOPT_0x0
                 _0x2000024:
000120 c10a      	RJMP _0x2000021
                 _0x2000022:
000121 30e1      	CPI  R30,LOW(0x1)
000122 f4a9      	BRNE _0x2000025
000123 3235      	CPI  R19,37
000124 f419      	BRNE _0x2000026
000125 940e 0272 	CALL SUBOPT_0x0
000127 c102      	RJMP _0x20000D2
                 _0x2000026:
000128 e002      	LDI  R16,LOW(2)
000129 e050      	LDI  R21,LOW(0)
00012a e010      	LDI  R17,LOW(0)
00012b 323d      	CPI  R19,45
00012c f411      	BRNE _0x2000027
00012d e011      	LDI  R17,LOW(1)
00012e c0fc      	RJMP _0x2000021
                 _0x2000027:
00012f 323b      	CPI  R19,43
000130 f411      	BRNE _0x2000028
000131 e25b      	LDI  R21,LOW(43)
000132 c0f8      	RJMP _0x2000021
                 _0x2000028:
000133 3230      	CPI  R19,32
000134 f411      	BRNE _0x2000029
000135 e250      	LDI  R21,LOW(32)
000136 c0f4      	RJMP _0x2000021
                 _0x2000029:
000137 c002      	RJMP _0x200002A
                 _0x2000025:
000138 30e2      	CPI  R30,LOW(0x2)
000139 f439      	BRNE _0x200002B
                 _0x200002A:
00013a e040      	LDI  R20,LOW(0)
00013b e003      	LDI  R16,LOW(3)
00013c 3330      	CPI  R19,48
00013d f411      	BRNE _0x200002C
00013e 6810      	ORI  R17,LOW(128)
00013f c0eb      	RJMP _0x2000021
                 _0x200002C:
000140 c003      	RJMP _0x200002D
                 _0x200002B:
000141 30e3      	CPI  R30,LOW(0x3)
000142 f009      	BREQ PC+2
000143 c0e7      	RJMP _0x2000021
                 _0x200002D:
000144 3330      	CPI  R19,48
000145 f010      	BRLO _0x2000030
000146 333a      	CPI  R19,58
000147 f008      	BRLO _0x2000031
                 _0x2000030:
000148 c007      	RJMP _0x200002F
                 _0x2000031:
000149 e0aa      	LDI  R26,LOW(10)
00014a 9f4a      	MUL  R20,R26
00014b 2d40      	MOV  R20,R0
00014c 2fe3      	MOV  R30,R19
00014d 53e0      	SUBI R30,LOW(48)
00014e 0f4e      	ADD  R20,R30
00014f c0db      	RJMP _0x2000021
                 _0x200002F:
000150 2fe3      	MOV  R30,R19
000151 36e3      	CPI  R30,LOW(0x63)
000152 f449      	BRNE _0x2000035
000153 940e 0279 	CALL SUBOPT_0x1
000155 89e8      	LDD  R30,Y+16
000156 89f9      	LDD  R31,Y+16+1
000157 81a4      	LDD  R26,Z+4
000158 93aa      	ST   -Y,R26
000159 940e 027f 	CALL SUBOPT_0x2
00015b c0ce      	RJMP _0x2000036
                 _0x2000035:
00015c 37e3      	CPI  R30,LOW(0x73)
00015d f441      	BRNE _0x2000038
00015e 940e 0279 	CALL SUBOPT_0x1
000160 940e 0285 	CALL SUBOPT_0x3
000162 940e 0259 	CALL _strlen
000164 2f0e      	MOV  R16,R30
000165 c00a      	RJMP _0x2000039
                 _0x2000038:
000166 37e0      	CPI  R30,LOW(0x70)
000167 f461      	BRNE _0x200003B
000168 940e 0279 	CALL SUBOPT_0x1
00016a 940e 0285 	CALL SUBOPT_0x3
00016c 940e 0265 	CALL _strlenf
00016e 2f0e      	MOV  R16,R30
00016f 6018      	ORI  R17,LOW(8)
                 _0x2000039:
000170 6012      	ORI  R17,LOW(2)
000171 771f      	ANDI R17,LOW(127)
000172 e020      	LDI  R18,LOW(0)
000173 c034      	RJMP _0x200003C
                 _0x200003B:
000174 36e4      	CPI  R30,LOW(0x64)
000175 f011      	BREQ _0x200003F
000176 36e9      	CPI  R30,LOW(0x69)
000177 f411      	BRNE _0x2000040
                 _0x200003F:
000178 6014      	ORI  R17,LOW(4)
000179 c002      	RJMP _0x2000041
                 _0x2000040:
00017a 37e5      	CPI  R30,LOW(0x75)
00017b f431      	BRNE _0x2000042
                 _0x2000041:
00017c eee4      	LDI  R30,LOW(_tbl10_G100*2)
00017d e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
00017e 83ee      	STD  Y+6,R30
00017f 83ff      	STD  Y+6+1,R31
000180 e005      	LDI  R16,LOW(5)
000181 c00c      	RJMP _0x2000043
                 _0x2000042:
000182 35e8      	CPI  R30,LOW(0x58)
000183 f411      	BRNE _0x2000045
000184 6018      	ORI  R17,LOW(8)
000185 c003      	RJMP _0x2000046
                 _0x2000045:
000186 37e8      	CPI  R30,LOW(0x78)
000187 f009      	BREQ PC+2
000188 c0a1      	RJMP _0x2000077
                 _0x2000046:
000189 eeee      	LDI  R30,LOW(_tbl16_G100*2)
00018a e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
00018b 83ee      	STD  Y+6,R30
00018c 83ff      	STD  Y+6+1,R31
00018d e004      	LDI  R16,LOW(4)
                 _0x2000043:
00018e ff12      	SBRS R17,2
00018f c014      	RJMP _0x2000048
000190 940e 0279 	CALL SUBOPT_0x1
000192 940e 028f 	CALL SUBOPT_0x4
000194 85ab      	LDD  R26,Y+11
000195 23aa      	TST  R26
000196 f43a      	BRPL _0x2000049
000197 85ea      	LDD  R30,Y+10
000198 85fb      	LDD  R31,Y+10+1
000199 940e 029b 	CALL __ANEGW1
00019b 87ea      	STD  Y+10,R30
00019c 87fb      	STD  Y+10+1,R31
00019d e25d      	LDI  R21,LOW(45)
                 _0x2000049:
00019e 3050      	CPI  R21,0
00019f f011      	BREQ _0x200004A
0001a0 5f0f      	SUBI R16,-LOW(1)
0001a1 c001      	RJMP _0x200004B
                 _0x200004A:
0001a2 7f1b      	ANDI R17,LOW(251)
                 _0x200004B:
0001a3 c004      	RJMP _0x200004C
                 _0x2000048:
0001a4 940e 0279 	CALL SUBOPT_0x1
0001a6 940e 028f 	CALL SUBOPT_0x4
                 _0x200004C:
                 _0x200003C:
0001a8 fd10      	SBRC R17,0
0001a9 c011      	RJMP _0x200004D
                 _0x200004E:
0001aa 1704      	CP   R16,R20
0001ab f478      	BRSH _0x2000050
0001ac ff17      	SBRS R17,7
0001ad c008      	RJMP _0x2000051
0001ae ff12      	SBRS R17,2
0001af c004      	RJMP _0x2000052
0001b0 7f1b      	ANDI R17,LOW(251)
0001b1 2f35      	MOV  R19,R21
0001b2 5001      	SUBI R16,LOW(1)
0001b3 c001      	RJMP _0x2000053
                 _0x2000052:
0001b4 e330      	LDI  R19,LOW(48)
                 _0x2000053:
0001b5 c001      	RJMP _0x2000054
                 _0x2000051:
0001b6 e230      	LDI  R19,LOW(32)
                 _0x2000054:
0001b7 940e 0272 	CALL SUBOPT_0x0
0001b9 5041      	SUBI R20,LOW(1)
0001ba cfef      	RJMP _0x200004E
                 _0x2000050:
                 _0x200004D:
0001bb 2f20      	MOV  R18,R16
0001bc ff11      	SBRS R17,1
0001bd c017      	RJMP _0x2000055
                 _0x2000056:
0001be 3020      	CPI  R18,0
0001bf f0a1      	BREQ _0x2000058
0001c0 ff13      	SBRS R17,3
0001c1 c006      	RJMP _0x2000059
0001c2 81ee      	LDD  R30,Y+6
0001c3 81ff      	LDD  R31,Y+6+1
0001c4 9135      	LPM  R19,Z+
0001c5 83ee      	STD  Y+6,R30
0001c6 83ff      	STD  Y+6+1,R31
0001c7 c005      	RJMP _0x200005A
                 _0x2000059:
0001c8 81ae      	LDD  R26,Y+6
0001c9 81bf      	LDD  R27,Y+6+1
0001ca 913d      	LD   R19,X+
0001cb 83ae      	STD  Y+6,R26
0001cc 83bf      	STD  Y+6+1,R27
                 _0x200005A:
0001cd 940e 0272 	CALL SUBOPT_0x0
0001cf 3040      	CPI  R20,0
0001d0 f009      	BREQ _0x200005B
0001d1 5041      	SUBI R20,LOW(1)
                 _0x200005B:
0001d2 5021      	SUBI R18,LOW(1)
0001d3 cfea      	RJMP _0x2000056
                 _0x2000058:
0001d4 c04b      	RJMP _0x200005C
                 _0x2000055:
                 _0x200005E:
0001d5 e330      	LDI  R19,LOW(48)
0001d6 81ee      	LDD  R30,Y+6
0001d7 81ff      	LDD  R31,Y+6+1
0001d8 940e 02a3 	CALL __GETW1PF
0001da 87e8      	STD  Y+8,R30
0001db 87f9      	STD  Y+8+1,R31
0001dc 81ee      	LDD  R30,Y+6
0001dd 81ff      	LDD  R31,Y+6+1
0001de 9632      	ADIW R30,2
0001df 83ee      	STD  Y+6,R30
0001e0 83ff      	STD  Y+6+1,R31
                 _0x2000060:
0001e1 85e8      	LDD  R30,Y+8
0001e2 85f9      	LDD  R31,Y+8+1
0001e3 85aa      	LDD  R26,Y+10
0001e4 85bb      	LDD  R27,Y+10+1
0001e5 17ae      	CP   R26,R30
0001e6 07bf      	CPC  R27,R31
0001e7 f050      	BRLO _0x2000062
0001e8 5f3f      	SUBI R19,-LOW(1)
0001e9 85a8      	LDD  R26,Y+8
0001ea 85b9      	LDD  R27,Y+8+1
0001eb 85ea      	LDD  R30,Y+10
0001ec 85fb      	LDD  R31,Y+10+1
0001ed 1bea      	SUB  R30,R26
0001ee 0bfb      	SBC  R31,R27
0001ef 87ea      	STD  Y+10,R30
0001f0 87fb      	STD  Y+10+1,R31
0001f1 cfef      	RJMP _0x2000060
                 _0x2000062:
0001f2 333a      	CPI  R19,58
0001f3 f028      	BRLO _0x2000063
0001f4 ff13      	SBRS R17,3
0001f5 c002      	RJMP _0x2000064
0001f6 5f39      	SUBI R19,-LOW(7)
0001f7 c001      	RJMP _0x2000065
                 _0x2000064:
0001f8 5d39      	SUBI R19,-LOW(39)
                 _0x2000065:
                 _0x2000063:
0001f9 fd14      	SBRC R17,4
0001fa c01a      	RJMP _0x2000067
0001fb 3331      	CPI  R19,49
0001fc f420      	BRSH _0x2000069
0001fd 85a8      	LDD  R26,Y+8
0001fe 85b9      	LDD  R27,Y+8+1
0001ff 9711      	SBIW R26,1
000200 f409      	BRNE _0x2000068
                 _0x2000069:
000201 c009      	RJMP _0x20000D3
                 _0x2000068:
000202 1742      	CP   R20,R18
000203 f010      	BRLO _0x200006D
000204 ff10      	SBRS R17,0
000205 c001      	RJMP _0x200006E
                 _0x200006D:
000206 c013      	RJMP _0x200006C
                 _0x200006E:
000207 e230      	LDI  R19,LOW(32)
000208 ff17      	SBRS R17,7
000209 c00b      	RJMP _0x200006F
00020a e330      	LDI  R19,LOW(48)
                 _0x20000D3:
00020b 6110      	ORI  R17,LOW(16)
00020c ff12      	SBRS R17,2
00020d c007      	RJMP _0x2000070
00020e 7f1b      	ANDI R17,LOW(251)
00020f 935a      	ST   -Y,R21
000210 940e 027f 	CALL SUBOPT_0x2
000212 3040      	CPI  R20,0
000213 f009      	BREQ _0x2000071
000214 5041      	SUBI R20,LOW(1)
                 _0x2000071:
                 _0x2000070:
                 _0x200006F:
                 _0x2000067:
000215 940e 0272 	CALL SUBOPT_0x0
000217 3040      	CPI  R20,0
000218 f009      	BREQ _0x2000072
000219 5041      	SUBI R20,LOW(1)
                 _0x2000072:
                 _0x200006C:
00021a 5021      	SUBI R18,LOW(1)
00021b 85a8      	LDD  R26,Y+8
00021c 85b9      	LDD  R27,Y+8+1
00021d 9712      	SBIW R26,2
00021e f008      	BRLO _0x200005F
00021f cfb5      	RJMP _0x200005E
                 _0x200005F:
                 _0x200005C:
000220 ff10      	SBRS R17,0
000221 c008      	RJMP _0x2000073
                 _0x2000074:
000222 3040      	CPI  R20,0
000223 f031      	BREQ _0x2000076
000224 5041      	SUBI R20,LOW(1)
000225 e2e0      	LDI  R30,LOW(32)
000226 93ea      	ST   -Y,R30
000227 940e 027f 	CALL SUBOPT_0x2
000229 cff8      	RJMP _0x2000074
                 _0x2000076:
                 _0x2000073:
                 _0x2000077:
                 _0x2000036:
                 _0x20000D2:
00022a e000      	LDI  R16,LOW(0)
                 _0x2000021:
00022b cee0      	RJMP _0x200001C
                 _0x200001E:
00022c 85ac      	LDD  R26,Y+12
00022d 85bd      	LDD  R27,Y+12+1
00022e 940e 029f 	CALL __GETW1P
000230 940e 02ae 	CALL __LOADLOCR6
000232 9664      	ADIW R28,20
000233 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
000234 92ff      	PUSH R15
000235 2ef8      	MOV  R15,R24
000236 9726      	SBIW R28,6
000237 931a      	ST   -Y,R17
000238 930a      	ST   -Y,R16
000239 01de      	MOVW R26,R28
00023a 9614      	ADIW R26,4
00023b 940e 0297 	CALL __ADDW2R15
00023d 018d      	MOVW R16,R26
00023e e0e0      	LDI  R30,LOW(0)
00023f 83ec      	STD  Y+4,R30
000240 83ed      	STD  Y+4+1,R30
000241 83ee      	STD  Y+6,R30
000242 83ef      	STD  Y+6+1,R30
000243 01de      	MOVW R26,R28
000244 9618      	ADIW R26,8
000245 940e 0297 	CALL __ADDW2R15
000247 940e 029f 	CALL __GETW1P
000249 93fa      	ST   -Y,R31
00024a 93ea      	ST   -Y,R30
00024b 931a      	ST   -Y,R17
00024c 930a      	ST   -Y,R16
00024d efe3      	LDI  R30,LOW(_put_usart_G100)
00024e e0f0      	LDI  R31,HIGH(_put_usart_G100)
00024f 93fa      	ST   -Y,R31
000250 93ea      	ST   -Y,R30
000251 01de      	MOVW R26,R28
000252 9618      	ADIW R26,8
000253 deac      	RCALL __print_G100
000254 8119      	LDD  R17,Y+1
000255 8108      	LDD  R16,Y+0
000256 9628      	ADIW R28,8
000257 90ff      	POP  R15
000258 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000259 93ba      	ST   -Y,R27
00025a 93aa      	ST   -Y,R26
00025b 91a9          ld   r26,y+
00025c 91b9          ld   r27,y+
00025d 27ee          clr  r30
00025e 27ff          clr  r31
                 strlen0:
00025f 916d          ld   r22,x+
000260 2366          tst  r22
000261 f011          breq strlen1
000262 9631          adiw r30,1
000263 cffb          rjmp strlen0
                 strlen1:
000264 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000265 93ba      	ST   -Y,R27
000266 93aa      	ST   -Y,R26
000267 27aa          clr  r26
000268 27bb          clr  r27
000269 91e9          ld   r30,y+
00026a 91f9          ld   r31,y+
                 strlenf0:
00026b 9005      	lpm  r0,z+
00026c 2000          tst  r0
00026d f011          breq strlenf1
00026e 9611          adiw r26,1
00026f cffb          rjmp strlenf0
                 strlenf1:
000270 01fd          movw r30,r26
000271 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _dato:
000600           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x0:
000272 933a      	ST   -Y,R19
000273 85ad      	LDD  R26,Y+13
000274 85be      	LDD  R27,Y+13+1
000275 85ef      	LDD  R30,Y+15
000276 89f8      	LDD  R31,Y+15+1
000277 9509      	ICALL
000278 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1:
000279 89e8      	LDD  R30,Y+16
00027a 89f9      	LDD  R31,Y+16+1
00027b 9734      	SBIW R30,4
00027c 8be8      	STD  Y+16,R30
00027d 8bf9      	STD  Y+16+1,R31
00027e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
00027f 85ad      	LDD  R26,Y+13
000280 85be      	LDD  R27,Y+13+1
000281 85ef      	LDD  R30,Y+15
000282 89f8      	LDD  R31,Y+15+1
000283 9509      	ICALL
000284 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3:
000285 89a8      	LDD  R26,Y+16
000286 89b9      	LDD  R27,Y+16+1
000287 9614      	ADIW R26,4
000288 940e 029f 	CALL __GETW1P
00028a 83ee      	STD  Y+6,R30
00028b 83ff      	STD  Y+6+1,R31
00028c 81ae      	LDD  R26,Y+6
00028d 81bf      	LDD  R27,Y+6+1
00028e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
00028f 89a8      	LDD  R26,Y+16
000290 89b9      	LDD  R27,Y+16+1
000291 9614      	ADIW R26,4
000292 940e 029f 	CALL __GETW1P
000294 87ea      	STD  Y+10,R30
000295 87fb      	STD  Y+10+1,R31
000296 9508      	RET
                 
                 
                 	.CSEG
                 __ADDW2R15:
000297 2400      	CLR  R0
000298 0daf      	ADD  R26,R15
000299 1db0      	ADC  R27,R0
00029a 9508      	RET
                 
                 __ANEGW1:
00029b 95f1      	NEG  R31
00029c 95e1      	NEG  R30
00029d 40f0      	SBCI R31,0
00029e 9508      	RET
                 
                 __GETW1P:
00029f 91ed      	LD   R30,X+
0002a0 91fc      	LD   R31,X
0002a1 9711      	SBIW R26,1
0002a2 9508      	RET
                 
                 __GETW1PF:
0002a3 9005      	LPM  R0,Z+
0002a4 91f4      	LPM  R31,Z
0002a5 2de0      	MOV  R30,R0
0002a6 9508      	RET
                 
                 __SAVELOCR6:
0002a7 935a      	ST   -Y,R21
                 __SAVELOCR5:
0002a8 934a      	ST   -Y,R20
                 __SAVELOCR4:
0002a9 933a      	ST   -Y,R19
                 __SAVELOCR3:
0002aa 932a      	ST   -Y,R18
                 __SAVELOCR2:
0002ab 931a      	ST   -Y,R17
0002ac 930a      	ST   -Y,R16
0002ad 9508      	RET
                 
                 __LOADLOCR6:
0002ae 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0002af 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0002b0 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0002b1 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0002b2 8119      	LDD  R17,Y+1
0002b3 8108      	LD   R16,Y
0002b4 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega2560 register use summary:
r0 :   7 r1 :   0 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  20 r17:  29 r18:   8 r19:  27 r20:  17 r21:   9 r22:   2 r23:   0 
r24:   9 r25:   1 r26:  50 r27:  25 r28:  12 r29:   1 r30: 114 r31:  46 
x  :  12 y  : 122 z  :   6 
Registers used: 20 out of 35 (57.1%)

ATmega2560 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   2 
adiw  :  16 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  13 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   0 brne  :  19 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  29 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   7 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   3 cpc   :   1 cpi   :  31 cpse  :   0 dec   :   1 des   :   0 
eicall:   0 eijmp :   0 elpm  :   0 eor   :   0 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   2 ijmp  :   0 in    :   0 inc   :   0 jmp   :  58 
ld    :  13 ldd   :  57 ldi   :  58 lds   :   4 lpm   :   7 lsl   :   0 
lsr   :   0 mov   :  11 movw  :   5 mul   :   1 muls  :   0 mulsu :   0 
neg   :   2 nop   :   0 or    :   0 ori   :   6 out   :   8 pop   :   1 
push  :   1 rcall :   5 ret   :  18 reti  :   0 rjmp  :  53 rol   :   0 
ror   :   0 sbc   :   1 sbci  :   1 sbi   :   0 sbic  :   0 sbis  :   0 
sbiw  :   8 sbr   :   0 sbrc  :   2 sbrs  :  10 sec   :   0 seh   :   0 
sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   0 sev   :   0 
sez   :   0 sleep :   0 spm   :   0 st    :  37 std   :  28 sts   :  11 
sub   :   1 subi  :  13 swap  :   0 tst   :   3 wdr   :   0 
Instructions used: 45 out of 119 (37.8%)

ATmega2560 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00056a   1332     54   1386  262144   0.5%
[.dseg] 0x000200 0x000601      0      1      1    8192   0.0%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 1 warnings
