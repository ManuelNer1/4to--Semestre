;/*
; * exp.c
; *
; * Created: 24/05/2021 11:53:49 a. m.
; * Author: ManuelNeri
; */
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;//595(escritura)
;#define DATA_595 PORTB.4
;#define STCLK_595 PORTB.5
;#define SHCLK_595 PORTB.3
;//165
;#define CLK_165 PORTB.2
;#define LOAD_165 PORTB.1
;#define DATA_165 PINB.0
;
;void Configura595()
; 0000 0013 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0014    DDRB.3=1;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0015    DDRB.4=1;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0016    DDRB.5=1;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0017 }
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;
;#pragma warn-
;void Write595 (unsigned char dato)
; 0000 001B {
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 001C    #asm
;PCODE: $00000019 VOL: 0
;	dato -> Y+0
;PCODE: $0000001A VOL: 0
; 0000 001D     .equ PORTB = 0x05;
    .equ PORTB = 0x05;
;PCODE: $0000001B VOL: 0
; 0000 001E     LD R21, Y
    LD R21, Y
;PCODE: $0000001C VOL: 0
; 0000 001F     CLR R22
    CLR R22
;PCODE: $0000001D VOL: 0
; 0000 0020     CicloWrite:
    CicloWrite:
;PCODE: $0000001E VOL: 0
; 0000 0021         SBRC R21,7
        SBRC R21,7
;PCODE: $0000001F VOL: 0
; 0000 0022         SBI PORTB,4
        SBI PORTB,4
;PCODE: $00000020 VOL: 0
; 0000 0023         SBRS R21,7
        SBRS R21,7
;PCODE: $00000021 VOL: 0
; 0000 0024         CBI PORTB,4
        CBI PORTB,4
;PCODE: $00000022 VOL: 0
; 0000 0025 

;PCODE: $00000023 VOL: 0
; 0000 0026         SBI PORTB,3
        SBI PORTB,3
;PCODE: $00000024 VOL: 0
; 0000 0027         CBI PORTB,3
        CBI PORTB,3
;PCODE: $00000025 VOL: 0
; 0000 0028         LSL R21
        LSL R21
;PCODE: $00000026 VOL: 0
; 0000 0029 

;PCODE: $00000027 VOL: 0
; 0000 002A         INC R22
        INC R22
;PCODE: $00000028 VOL: 0
; 0000 002B         CPI R22,8
        CPI R22,8
;PCODE: $00000029 VOL: 0
; 0000 002C         BRNE CicloWrite
        BRNE CicloWrite
;PCODE: $0000002A VOL: 0
; 0000 002D 

;PCODE: $0000002B VOL: 0
; 0000 002E         SBI PORTB,5
        SBI PORTB,5
;PCODE: $0000002C VOL: 0
; 0000 002F         CBI PORTB,5
        CBI PORTB,5
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0030    #endasm
; 0000 0031 }
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;#pragma warn-
;
;
;void Configura165()
; 0000 0036 {
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0037    DDRB.2=1;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0038    DDRB.1=1;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0039 }
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;
;#pragma warn-
;unsigned char Read165(void)
; 0000 003D {
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 003E    #asm
;PCODE: $0000003C VOL: 0
; 0000 003F 

;PCODE: $0000003D VOL: 0
; 0000 0040    .equ PINB=3
   .equ PINB=3
;PCODE: $0000003E VOL: 0
; 0000 0041         CLR R23
        CLR R23
;PCODE: $0000003F VOL: 0
; 0000 0042         CLR R30
        CLR R30
;PCODE: $00000040 VOL: 0
; 0000 0043         SBI PORTB,1
        SBI PORTB,1
;PCODE: $00000041 VOL: 0
; 0000 0044 

;PCODE: $00000042 VOL: 0
; 0000 0045     CicloRead:
    CicloRead:
;PCODE: $00000043 VOL: 0
; 0000 0046         LSL R30
        LSL R30
;PCODE: $00000044 VOL: 0
; 0000 0047         LDI R31,0x01
        LDI R31,0x01
;PCODE: $00000045 VOL: 0
; 0000 0048 

;PCODE: $00000046 VOL: 0
; 0000 0049         SBIC PINB,0
        SBIC PINB,0
;PCODE: $00000047 VOL: 0
; 0000 004A         OR R30,R31
        OR R30,R31
;PCODE: $00000048 VOL: 0
; 0000 004B         SBI PORTB,2
        SBI PORTB,2
;PCODE: $00000049 VOL: 0
; 0000 004C         CBI PORTB,2
        CBI PORTB,2
;PCODE: $0000004A VOL: 0
; 0000 004D 

;PCODE: $0000004B VOL: 0
; 0000 004E         INC R23
        INC R23
;PCODE: $0000004C VOL: 0
; 0000 004F         CPI R23,8
        CPI R23,8
;PCODE: $0000004D VOL: 0
; 0000 0050         BRNE CicloRead
        BRNE CicloRead
;PCODE: $0000004E VOL: 0
; 0000 0051 

;PCODE: $0000004F VOL: 0
; 0000 0052         CBI PORTB,1
        CBI PORTB,1
;PCODE: $00000050 VOL: 0
; 0000 0053 

;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0054    #endasm
; 0000 0055 }
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;#pragma warn-
;
;void main(void)
; 0000 0059 {
;PCODE: $00000055 VOL: 0
; 0000 005A    unsigned char j;
; 0000 005B    Configura595();
;	j -> R16
;PCODE: $00000056 VOL: 0
; 0000 005C    Configura165();
;PCODE: $00000057 VOL: 0
; 0000 005D    while (1)
;PCODE: $00000058 VOL: 0
; 0000 005E    {
; 0000 005F       j=Read165();
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0060       Write595(j);
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0061    }
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0062 
; 0000 0063 }
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
