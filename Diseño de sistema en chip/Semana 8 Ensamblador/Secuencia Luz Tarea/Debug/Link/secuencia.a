;/*
; * secuencia.c
; *
; * Created: 26/05/2021 06:34:59 p. m.
; * Author: ManuelNeri
; */
;
;#include <mega2560.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <io.h>
;#include <stdio.h>
;
;bit encendido=0;
;
;void Configura595()
; 0000 0010 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0011    DDRB.3=1;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0012    DDRB.4=1;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0013    DDRB.5=1;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0014 }
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;#pragma warn-
;void Write595asm (unsigned char dato)
; 0000 0017 {
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0018 #asm
;PCODE: $00000019 VOL: 0
;	dato -> Y+0
;PCODE: $0000001A VOL: 0
; 0000 0019    .equ PORTB= 0x05
   .equ PORTB= 0x05
;PCODE: $0000001B VOL: 0
; 0000 001A    ;.equ PINB= 0x03
   ;.equ PINB= 0x03
;PCODE: $0000001C VOL: 0
; 0000 001B    LD R21, Y
   LD R21, Y
;PCODE: $0000001D VOL: 0
; 0000 001C    CLR R22
   CLR R22
;PCODE: $0000001E VOL: 0
; 0000 001D    Ciclo1:
   Ciclo1:
;PCODE: $0000001F VOL: 0
; 0000 001E       SBRC R21,7
      SBRC R21,7
;PCODE: $00000020 VOL: 0
; 0000 001F       SBI PORTB,4
      SBI PORTB,4
;PCODE: $00000021 VOL: 0
; 0000 0020       SBRS R21,7
      SBRS R21,7
;PCODE: $00000022 VOL: 0
; 0000 0021       CBI PORTB,4
      CBI PORTB,4
;PCODE: $00000023 VOL: 0
; 0000 0022 

;PCODE: $00000024 VOL: 0
; 0000 0023       SBI PORTB,3
      SBI PORTB,3
;PCODE: $00000025 VOL: 0
; 0000 0024       CBI PORTB,3
      CBI PORTB,3
;PCODE: $00000026 VOL: 0
; 0000 0025       LSL R21
      LSL R21
;PCODE: $00000027 VOL: 0
; 0000 0026 

;PCODE: $00000028 VOL: 0
; 0000 0027       INC R22
      INC R22
;PCODE: $00000029 VOL: 0
; 0000 0028       CPI R22,8
      CPI R22,8
;PCODE: $0000002A VOL: 0
; 0000 0029       BRNE Ciclo1
      BRNE Ciclo1
;PCODE: $0000002B VOL: 0
; 0000 002A 

;PCODE: $0000002C VOL: 0
; 0000 002B       SBI PORTB,5
      SBI PORTB,5
;PCODE: $0000002D VOL: 0
; 0000 002C       CBI PORTB,5
      CBI PORTB,5
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 002D #endasm
; 0000 002E }
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;#pragma warn+
;
;
;
;unsigned char sec1 [14]={
;        0x80,
;        0x40,
;        0x20,
;        0x10,
;        0x08,
;        0x04,
;        0x02,
;        0x01,
;        0x02,
;        0x04,
;        0x08,
;        0x10,
;        0x20,
;        0x40
;};

	.DSEG
;
;unsigned char sec2 [6]={
;        0x81,
;        0x42,
;        0x24,
;        0x18,
;        0x24,
;        0x42
;};
;
;unsigned int cont;
;unsigned int cont2;
;int acumulador = 2;
;
;void main()
; 0000 0052 {

	.CSEG
;PCODE: $00000033 VOL: 0
; 0000 0053 
; 0000 0054     DDRC=0xFF;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0055     PORTB.7=1;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0056 
; 0000 0057     //unsigned char j;
; 0000 0058     Configura595();
;PCODE: $00000038 VOL: 0
; 0000 0059 
; 0000 005A     while(1)
;PCODE: $00000039 VOL: 0
; 0000 005B     {
; 0000 005C 
; 0000 005D         //j=Read165asm();
; 0000 005E         Write595asm(sec1[cont]);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 005F         if(acumulador<200)
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0060             acumulador = 2;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0061 
; 0000 0062         if(acumulador%2==0){
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0063             cont=0;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0064         while (acumulador%2==0){
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0065             if(PINB.7==0)
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0066                 acumulador++;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0067             Write595asm(sec1[cont]);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0068             cont++;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0069             if(cont==14){
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 006A             cont=0;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 006B             }
; 0000 006C             delay_ms(300);
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 006D 
; 0000 006E         }
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 006F         }
; 0000 0070 
; 0000 0071         if (acumulador%2!=0) {
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0072             cont2=0;
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0073         while (acumulador%2!=0){
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0074             delay_ms(30);
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0075             if(PINB.7==0)
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0076                 acumulador++;
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 0077             Write595asm(sec2[cont2]);
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0078             cont2++;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 0079             if(cont2==6){
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 007A             cont2=0;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 007B             }
; 0000 007C             delay_ms(300);
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 007D 
; 0000 007E         }
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 007F 
; 0000 0080         }
; 0000 0081     }
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0082 }
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
