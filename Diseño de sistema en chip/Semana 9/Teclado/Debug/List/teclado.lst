
AVRASM ver. 2.1.30  C:\Users\ManuelNeri\Desktop\Semana 8 Ensamblador\Teclado\Debug\List\teclado.asm Mon May 31 12:05:16 2021

                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega2560
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 2048 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: Off
                 ;Smart register allocation: Off
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega2560
                 	#pragma AVRPART MEMORY PROG_FLASH 262144
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 8192
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x200
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU RAMPZ=0x3B
                 	.EQU EIND=0x3C
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x74
                 	.EQU XMCRB=0x75
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0200
                 	.EQU __SRAM_END=0x21FF
                 	.EQU __DSTACK_SIZE=0x0800
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 007b 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
000046 940c 0000 	JMP  0x00
000048 940c 0000 	JMP  0x00
00004a 940c 0000 	JMP  0x00
00004c 940c 0000 	JMP  0x00
00004e 940c 0000 	JMP  0x00
000050 940c 0000 	JMP  0x00
000052 940c 0000 	JMP  0x00
000054 940c 0000 	JMP  0x00
000056 940c 0000 	JMP  0x00
000058 940c 0000 	JMP  0x00
00005a 940c 0000 	JMP  0x00
00005c 940c 0000 	JMP  0x00
00005e 940c 0000 	JMP  0x00
000060 940c 0000 	JMP  0x00
000062 940c 0000 	JMP  0x00
000064 940c 0000 	JMP  0x00
000066 940c 0000 	JMP  0x00
000068 940c 0000 	JMP  0x00
00006a 940c 0000 	JMP  0x00
00006c 940c 0000 	JMP  0x00
00006e 940c 0000 	JMP  0x00
000070 940c 0000 	JMP  0x00
                 
                 _0x3:
000072 0303
000073 0203
000074 0c02
000075 0800      	.DB  0x3,0x3,0x3,0x2,0x2,0xC,0x0,0x8
000076 0100
000077 0600      	.DB  0x0,0x1,0x0,0x6
                 _0x22:
000078 0000
000079 43c8      	.DB  0x0,0x0,0xC8,0x43
                 
                 __GLOBAL_INI_TBL:
                 _0xFFFFFFFF:
00007a 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00007b 94f8      	CLI
00007c 27ee      	CLR  R30
00007d bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00007e e0f1      	LDI  R31,1
00007f bff5      	OUT  MCUCR,R31
000080 bfe5      	OUT  MCUCR,R30
000081 93e0 0074 	STS  XMCRA,R30
000083 93e0 0075 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000085 e08d      	LDI  R24,(14-2)+1
000086 e0a2      	LDI  R26,2
000087 27bb      	CLR  R27
                 __CLEAR_REG:
000088 93ed      	ST   X+,R30
000089 958a      	DEC  R24
00008a f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00008b e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00008c e290      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00008d e0a0      	LDI  R26,LOW(__SRAM_START)
00008e e0b2      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00008f 93ed      	ST   X+,R30
000090 9701      	SBIW R24,1
000091 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000092 efe4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000093 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000094 9185      	LPM  R24,Z+
000095 9195      	LPM  R25,Z+
000096 9700      	SBIW R24,0
000097 f061      	BREQ __GLOBAL_INI_END
000098 91a5      	LPM  R26,Z+
000099 91b5      	LPM  R27,Z+
00009a 9005      	LPM  R0,Z+
00009b 9015      	LPM  R1,Z+
00009c 01bf      	MOVW R22,R30
00009d 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00009e 9005      	LPM  R0,Z+
00009f 920d      	ST   X+,R0
0000a0 9701      	SBIW R24,1
0000a1 f7e1      	BRNE __GLOBAL_INI_LOOP
0000a2 01fb      	MOVW R30,R22
0000a3 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0000a4 bf8b      	OUT  RAMPZ,R24
                 
0000a5 bf8c      	OUT  EIND,R24
                 
                 ;GPIOR0 INITIALIZATION
0000a6 e0e0      	LDI  R30,__GPIOR0_INIT
0000a7 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000a8 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000a9 bfed      	OUT  SPL,R30
0000aa e2e1      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000ab bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000ac e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000ad e0da      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000ae 940c 01e3 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0xA00
                 
                 	.CSEG
                 ;/*
                 ; * teclado.c
                 ; *
                 ; * Created: 27/05/2021 09:11:21 a. m.
                 ; * Author: ManuelNeri
                 ; */
                 ;#asm
                     .equ __lcd_port=0x02
                     .equ __lcd_EN = 1
                     .equ __lcd_RS = 0
                     .equ __lcd_D4 = 2
                     .equ __lcd_D5 = 3
                     .equ __lcd_D6 = 4
                     .equ __lcd_D7 = 5
                 ; 0000 000F #endasm
                 ;
                 ;#asm
                     .equ __keypad_port = 0x08
                     .equ __keypad_R1 = 3
                     .equ __keypad_R2 = 2
                     .equ __keypad_R3 = 1
                     .equ __keypad_R4 = 0
                     .equ __keypad_C1 = 4
                     .equ __keypad_C2 = 5
                     .equ __keypad_C3 = 6
                 ; 0000 001A #endasm
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <display.h>
                 
                 	.CSEG
                 _SetupLCD:
                 ; .FSTART _SetupLCD
0000b0 972c      	SBIW R28,12
0000b1 e08c      	LDI  R24,12
0000b2 e0a0      	LDI  R26,LOW(0)
0000b3 e0b0      	LDI  R27,HIGH(0)
0000b4 eee4      	LDI  R30,LOW(_0x3*2)
0000b5 e0f0      	LDI  R31,HIGH(_0x3*2)
0000b6 940e 038f 	CALL __INITLOCB
0000b8 930a      	ST   -Y,R16
                 ;	TableSetup -> Y+1
                 ;	i -> R16
                 ; 0000 001D     SBI __lcd_port-1,__lcd_EN
0000b9 9a09          SBI __lcd_port-1,__lcd_EN
0000ba 9a08          SBI __lcd_port-1,__lcd_RS
0000bb 9a0a          SBI __lcd_port-1,__lcd_D4
0000bc 9a0b          SBI __lcd_port-1,__lcd_D5
0000bd 9a0c          SBI __lcd_port-1,__lcd_D6
0000be 9a0d          SBI __lcd_port-1,__lcd_D7
0000bf e3a2      	LDI  R26,LOW(50)
0000c0 e0b0      	LDI  R27,0
0000c1 940e 0216 	CALL _delay_ms
0000c3 e000      	LDI  R16,LOW(0)
                 _0x5:
0000c4 300c      	CPI  R16,12
0000c5 f468      	BRSH _0x6
0000c6 940e 0200 	CALL SUBOPT_0x0
0000c8 2fe0      	MOV  R30,R16
0000c9 e0f0      	LDI  R31,0
0000ca 01de      	MOVW R26,R28
0000cb 9611      	ADIW R26,1
0000cc 0fae      	ADD  R26,R30
0000cd 1fbf      	ADC  R27,R31
0000ce 91ac      	LD   R26,X
0000cf 940e 0204 	CALL SUBOPT_0x1
0000d1 5f0f      	SUBI R16,-1
0000d2 cff1      	RJMP _0x5
                 _0x6:
0000d3 e0ec      	LDI  R30,LOW(12)
0000d4 93e0 0a00 	STS  _cursor,R30
0000d6 91a0 0a00 	LDS  R26,_cursor
0000d8 d021      	RCALL _WriteComandLCD
0000d9 8108      	LDD  R16,Y+0
0000da 962d      	ADIW R28,13
0000db 9508      	RET
                 ; .FEND
                 _PulseEn:
                 ; .FSTART _PulseEn
0000dc 9a11          SBI __lcd_port,__lcd_EN  // EN=1;
0000dd 9811          CBI __lcd_port,__lcd_EN // EN=0;
0000de 9508      	RET
                 ; .FEND
                 _SendDataBitsLCD:
                 ; .FSTART _SendDataBitsLCD
0000df 93aa      	ST   -Y,R26
                 ;	dato -> Y+0
0000e0 81e8      	LD   R30,Y
0000e1 70e8      	ANDI R30,LOW(0x8)
0000e2 f011      	BREQ _0x7
0000e3 9a15      	SBI __lcd_port,__lcd_D7
0000e4 c001      	RJMP _0x8
                 _0x7:
0000e5 9815      	CBI __lcd_port,__lcd_D7
                 _0x8:
0000e6 81e8      	LD   R30,Y
0000e7 70e4      	ANDI R30,LOW(0x4)
0000e8 f011      	BREQ _0x9
0000e9 9a14      	SBI __lcd_port,__lcd_D6
0000ea c001      	RJMP _0xA
                 _0x9:
0000eb 9814      	CBI __lcd_port,__lcd_D6
                 _0xA:
0000ec 81e8      	LD   R30,Y
0000ed 70e2      	ANDI R30,LOW(0x2)
0000ee f011      	BREQ _0xB
0000ef 9a13      	SBI __lcd_port,__lcd_D5
0000f0 c001      	RJMP _0xC
                 _0xB:
0000f1 9813      	CBI __lcd_port,__lcd_D5
                 _0xC:
0000f2 81e8      	LD   R30,Y
0000f3 70e1      	ANDI R30,LOW(0x1)
0000f4 f011      	BREQ _0xD
0000f5 9a12      	SBI __lcd_port,__lcd_D4
0000f6 c001      	RJMP _0xE
                 _0xD:
0000f7 9812      	CBI __lcd_port,__lcd_D4
                 _0xE:
0000f8 9621      	ADIW R28,1
0000f9 9508      	RET
                 ; .FEND
                 _WriteComandLCD:
                 ; .FSTART _WriteComandLCD
0000fa 93aa      	ST   -Y,R26
0000fb 930a      	ST   -Y,R16
                 ;	Comando -> Y+1
                 ;	tempComando -> R16
0000fc 9810      	CBI __lcd_port,__lcd_RS
0000fd 940e 0200 	CALL SUBOPT_0x0
0000ff 940e 0208 	CALL SUBOPT_0x2
000101 940e 020f 	CALL SUBOPT_0x3
000103 dfd8      	RCALL _PulseEn
000104 8108      	LDD  R16,Y+0
000105 c029      	RJMP _0x2000001
                 ; .FEND
                 _CharLCD:
                 ; .FSTART _CharLCD
000106 93aa      	ST   -Y,R26
000107 930a      	ST   -Y,R16
                 ;	dato -> Y+1
                 ;	tempdato -> R16
000108 9a10      	SBI __lcd_port,__lcd_RS
000109 940e 0200 	CALL SUBOPT_0x0
00010b 940e 0208 	CALL SUBOPT_0x2
00010d 940e 020f 	CALL SUBOPT_0x3
00010f dfcc      	RCALL _PulseEn
000110 8108      	LDD  R16,Y+0
000111 c01d      	RJMP _0x2000001
                 ; .FEND
                 ;	i -> R16
                 ;	tiempo -> Y+1
                 ;	i -> R16
                 ;	Mensaje -> Y+1
                 ;	i -> R16
                 _MoveCursor:
                 ; .FSTART _MoveCursor
000112 93aa      	ST   -Y,R26
                 ;	x -> Y+1
                 ;	y -> Y+0
000113 81e8      	LD   R30,Y
000114 e0f0      	LDI  R31,0
000115 9730      	SBIW R30,0
000116 f419      	BRNE _0x1B
000117 81a9      	LDD  R26,Y+1
000118 58a0      	SUBI R26,-LOW(128)
000119 c014      	RJMP _0x2D
                 _0x1B:
00011a 30e1      	CPI  R30,LOW(0x1)
00011b e0a0      	LDI  R26,HIGH(0x1)
00011c 07fa      	CPC  R31,R26
00011d f419      	BRNE _0x1C
00011e 81a9      	LDD  R26,Y+1
00011f 54a0      	SUBI R26,-LOW(192)
000120 c00d      	RJMP _0x2D
                 _0x1C:
000121 30e2      	CPI  R30,LOW(0x2)
000122 e0a0      	LDI  R26,HIGH(0x2)
000123 07fa      	CPC  R31,R26
000124 f419      	BRNE _0x1D
000125 81a9      	LDD  R26,Y+1
000126 56ac      	SUBI R26,-LOW(148)
000127 c006      	RJMP _0x2D
                 _0x1D:
000128 30e3      	CPI  R30,LOW(0x3)
000129 e0a0      	LDI  R26,HIGH(0x3)
00012a 07fa      	CPC  R31,R26
00012b f419      	BRNE _0x1A
00012c 81a9      	LDD  R26,Y+1
00012d 52ac      	SUBI R26,-LOW(212)
                 _0x2D:
00012e dfcb      	RCALL _WriteComandLCD
                 _0x1A:
                 _0x2000001:
00012f 9622      	ADIW R28,2
000130 9508      	RET
                 ; .FEND
                 ;	NoCaracter -> Y+3
                 ;	datos -> Y+1
                 ;	i -> R16
                 ;#include <delay.h>
                 ;
                 ;
                 ;float Nota=400.0;
                 
                 	.DSEG
                 ;
                 ;void tono (float frec)
                 ; 0000 0024 {
                 
                 	.CSEG
                 _tono:
                 ; .FSTART _tono
                 ; 0000 0025     float Cuentas;
                 ; 0000 0026     unsigned int CuentasEnt;
                 ; 0000 0027     DDRB.5=1; //Salida Bocina
000131 940e 037d 	CALL __PUTPARD2
000133 9724      	SBIW R28,4
000134 931a      	ST   -Y,R17
000135 930a      	ST   -Y,R16
                 ;	frec -> Y+6
                 ;	Cuentas -> Y+2
                 ;	CuentasEnt -> R16,R17
000136 9a25      	SBI  0x4,5
                 ; 0000 0028     Cuentas=500000.0/frec;
                +
000137 81ee     +LDD R30 , Y + 6
000138 81ff     +LDD R31 , Y + 6 + 1
000139 8568     +LDD R22 , Y + 6 + 2
00013a 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
                +
00013b e0a0     +LDI R26 , LOW ( 0x48F42400 )
00013c e2b4     +LDI R27 , HIGH ( 0x48F42400 )
00013d ef84     +LDI R24 , BYTE3 ( 0x48F42400 )
00013e e498     +LDI R25 , BYTE4 ( 0x48F42400 )
                 	__GETD2N 0x48F42400
00013f 940e 030b 	CALL __DIVF21
                +
000141 83ea     +STD Y + 2 , R30
000142 83fb     +STD Y + 2 + 1 , R31
000143 836c     +STD Y + 2 + 2 , R22
000144 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                 ; 0000 0029     CuentasEnt=Cuentas;
000145 940e 024d 	CALL __CFD1U
000147 018f      	MOVW R16,R30
                 ; 0000 002A     if ((Cuentas-CuentasEnt)>=0.5)
                +
000148 81aa     +LDD R26 , Y + 2
000149 81bb     +LDD R27 , Y + 2 + 1
00014a 818c     +LDD R24 , Y + 2 + 2
00014b 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00014c 2766      	CLR  R22
00014d 2777      	CLR  R23
00014e 940e 0286 	CALL __CDF1
000150 940e 0382 	CALL __SWAPD12
000152 940e 02b9 	CALL __SUBF12
000154 01df      	MOVW R26,R30
000155 01cb      	MOVW R24,R22
                +
000156 e0e0     +LDI R30 , LOW ( 0x3F000000 )
000157 e0f0     +LDI R31 , HIGH ( 0x3F000000 )
000158 e060     +LDI R22 , BYTE3 ( 0x3F000000 )
000159 e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
00015a 940e 0350 	CALL __CMPF12
00015c f010      	BRLO _0x25
                 ; 0000 002B         CuentasEnt++;
                +
00015d 5f0f     +SUBI R16 , LOW ( - 1 )
00015e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 002C     TCCR1A=0x40;   //Modo de CTC
                 _0x25:
00015f e4e0      	LDI  R30,LOW(64)
000160 93e0 0080 	STS  128,R30
                 ; 0000 002D     TCCR1B=0x09;   //Sin pre-escalador(CK)
000162 e0e9      	LDI  R30,LOW(9)
000163 93e0 0081 	STS  129,R30
                 ; 0000 002E     OCR1AH=(CuentasEnt-1)/256;
000165 01f8      	MOVW R30,R16
000166 9731      	SBIW R30,1
000167 2fef      	MOV  R30,R31
000168 e0f0      	LDI  R31,0
000169 93e0 0089 	STS  137,R30
                 ; 0000 002F     OCR1AL=(CuentasEnt-1)%256;
00016b 2fe0      	MOV  R30,R16
00016c 50e1      	SUBI R30,LOW(1)
00016d 93e0 0088 	STS  136,R30
                 ; 0000 0030 }
00016f 8119      	LDD  R17,Y+1
000170 8108      	LDD  R16,Y+0
000171 962a      	ADIW R28,10
000172 9508      	RET
                 ; .FEND
                 ;
                 ;void noTono()
                 ; 0000 0033 {
                 ; 0000 0034     TCCR1A=0;
                 ; 0000 0035     TCCR1B=0;
                 ; 0000 0036 }
                 ;
                 ;void SetupKeypad(){
                 ; 0000 0038 void SetupKeypad(){
                 _SetupKeypad:
                 ; .FSTART _SetupKeypad
                 ; 0000 0039     #asm
                 ; 0000 003A         SBI __keypad_port-1, __keypad_R1  //R1 de salida;
000173 9a3b              SBI __keypad_port-1, __keypad_R1  //R1 de salida;
                 ; 0000 003B         SBI __keypad_port-1, __keypad_R2  //R2 de salida;
000174 9a3a              SBI __keypad_port-1, __keypad_R2  //R2 de salida;
                 ; 0000 003C         SBI __keypad_port-1, __keypad_R3  //R3 de salida;
000175 9a39              SBI __keypad_port-1, __keypad_R3  //R3 de salida;
                 ; 0000 003D         SBI __keypad_port-1, __keypad_R4  //R4 de salida;
000176 9a38              SBI __keypad_port-1, __keypad_R4  //R4 de salida;
                 ; 0000 003E 
                 
                 ; 0000 003F         SBI __keypad_port, __keypad_C1  // Pull-up en C1
000177 9a44              SBI __keypad_port, __keypad_C1  // Pull-up en C1
                 ; 0000 0040         SBI __keypad_port, __keypad_C2  // Pull-up en C2
000178 9a45              SBI __keypad_port, __keypad_C2  // Pull-up en C2
                 ; 0000 0041         SBI __keypad_port, __keypad_C3  // Pull-up en C3
000179 9a46              SBI __keypad_port, __keypad_C3  // Pull-up en C3
                 ; 0000 0042     #endasm
                 ; 0000 0043 }
00017a 9508      	RET
                 ; .FEND
                 ;
                 ;#pragma warn-
                 ;char ReadKeypad(){
                 ; 0000 0046 char ReadKeypad(){
                 _ReadKeypad:
                 ; .FSTART _ReadKeypad
                 ; 0000 0047     #asm
                 ; 0000 0048 
                 
                 ; 0000 0049     Inicio:
                     Inicio:
                 ; 0000 004A         SBIS __keypad_port-2,__keypad_C1
00017b 9b34              SBIS __keypad_port-2,__keypad_C1
                 ; 0000 004B         RJMP BarridoC1
00017c c006              RJMP BarridoC1
                 ; 0000 004C         SBIS __keypad_port-2,__keypad_C2
00017d 9b35              SBIS __keypad_port-2,__keypad_C2
                 ; 0000 004D         RJMP BarridoC2
00017e c01f              RJMP BarridoC2
                 ; 0000 004E         SBIS __keypad_port-2,__keypad_C3
00017f 9b36              SBIS __keypad_port-2,__keypad_C3
                 ; 0000 004F         RJMP BarridoC3
000180 c038              RJMP BarridoC3
                 ; 0000 0050         CLR R30
000181 27ee              CLR R30
                 ; 0000 0051         RJMP Fin
000182 c05b              RJMP Fin
                 ; 0000 0052 
                 
                 ; 0000 0053     BarridoC1:
                     BarridoC1:
                 ; 0000 0054         LDI R30, '1'
000183 e3e1              LDI R30, '1'
                 ; 0000 0055         SBI __keypad_port,__keypad_R2   ;R2=1
000184 9a42              SBI __keypad_port,__keypad_R2   ;R2=1
                 ; 0000 0056         SBI __keypad_port,__keypad_R3   ;R3=1
000185 9a41              SBI __keypad_port,__keypad_R3   ;R3=1
                 ; 0000 0057         SBI __keypad_port,__keypad_R4   ;R4=1
000186 9a40              SBI __keypad_port,__keypad_R4   ;R4=1
                 ; 0000 0058         RCALL Delay1us
000187 d04c              RCALL Delay1us
                 ; 0000 0059         SBIS __keypad_port-2,__keypad_C1
000188 9b34              SBIS __keypad_port-2,__keypad_C1
                 ; 0000 005A         RJMP Fin
000189 c054              RJMP Fin
                 ; 0000 005B         LDI R30, '4'
00018a e3e4              LDI R30, '4'
                 ; 0000 005C         SBI __keypad_port,__keypad_R1   ;R1=1
00018b 9a43              SBI __keypad_port,__keypad_R1   ;R1=1
                 ; 0000 005D         CBI __keypad_port,__keypad_R2   ;R2=0
00018c 9842              CBI __keypad_port,__keypad_R2   ;R2=0
                 ; 0000 005E         RCALL Delay1us
00018d d046              RCALL Delay1us
                 ; 0000 005F         SBIS __keypad_port-2,__keypad_C1
00018e 9b34              SBIS __keypad_port-2,__keypad_C1
                 ; 0000 0060         RJMP Fin
00018f c04e              RJMP Fin
                 ; 0000 0061         LDI R30, '7'
000190 e3e7              LDI R30, '7'
                 ; 0000 0062         SBI __keypad_port,__keypad_R2   ;R2=1
000191 9a42              SBI __keypad_port,__keypad_R2   ;R2=1
                 ; 0000 0063         CBI __keypad_port,__keypad_R3   ;R3=0
000192 9841              CBI __keypad_port,__keypad_R3   ;R3=0
                 ; 0000 0064         RCALL Delay1us
000193 d040              RCALL Delay1us
                 ; 0000 0065         SBIS __keypad_port-2,__keypad_C1
000194 9b34              SBIS __keypad_port-2,__keypad_C1
                 ; 0000 0066         RJMP Fin
000195 c048              RJMP Fin
                 ; 0000 0067         LDI R30, '*'
000196 e2ea              LDI R30, '*'
                 ; 0000 0068         SBI __keypad_port,__keypad_R3   ;R3=1
000197 9a41              SBI __keypad_port,__keypad_R3   ;R3=1
                 ; 0000 0069         CBI __keypad_port,__keypad_R4   ;R4=0
000198 9840              CBI __keypad_port,__keypad_R4   ;R4=0
                 ; 0000 006A         RCALL Delay1us
000199 d03a              RCALL Delay1us
                 ; 0000 006B         SBIS __keypad_port-2,__keypad_C1
00019a 9b34              SBIS __keypad_port-2,__keypad_C1
                 ; 0000 006C         RJMP Fin
00019b c042              RJMP Fin
                 ; 0000 006D         CLR R30
00019c 27ee              CLR R30
                 ; 0000 006E         RJMP Fin
00019d c040              RJMP Fin
                 ; 0000 006F 
                 
                 ; 0000 0070     BarridoC2:
                     BarridoC2:
                 ; 0000 0071         LDI R30, '2'
00019e e3e2              LDI R30, '2'
                 ; 0000 0072         SBI __keypad_port,__keypad_R2   ;R2=1
00019f 9a42              SBI __keypad_port,__keypad_R2   ;R2=1
                 ; 0000 0073         SBI __keypad_port,__keypad_R3   ;R3=1
0001a0 9a41              SBI __keypad_port,__keypad_R3   ;R3=1
                 ; 0000 0074         SBI __keypad_port,__keypad_R4   ;R4=1
0001a1 9a40              SBI __keypad_port,__keypad_R4   ;R4=1
                 ; 0000 0075         RCALL Delay1us
0001a2 d031              RCALL Delay1us
                 ; 0000 0076         SBIS __keypad_port-2,__keypad_C2
0001a3 9b35              SBIS __keypad_port-2,__keypad_C2
                 ; 0000 0077         RJMP Fin
0001a4 c039              RJMP Fin
                 ; 0000 0078         LDI R30, '5'
0001a5 e3e5              LDI R30, '5'
                 ; 0000 0079         SBI __keypad_port,__keypad_R1   ;R1=1
0001a6 9a43              SBI __keypad_port,__keypad_R1   ;R1=1
                 ; 0000 007A         CBI __keypad_port,__keypad_R2   ;R2=0
0001a7 9842              CBI __keypad_port,__keypad_R2   ;R2=0
                 ; 0000 007B         RCALL Delay1us
0001a8 d02b              RCALL Delay1us
                 ; 0000 007C         SBIS __keypad_port-2,__keypad_C2
0001a9 9b35              SBIS __keypad_port-2,__keypad_C2
                 ; 0000 007D         RJMP Fin
0001aa c033              RJMP Fin
                 ; 0000 007E         LDI R30, '8'
0001ab e3e8              LDI R30, '8'
                 ; 0000 007F         SBI __keypad_port,__keypad_R2   ;R2=1
0001ac 9a42              SBI __keypad_port,__keypad_R2   ;R2=1
                 ; 0000 0080         CBI __keypad_port,__keypad_R3   ;R3=0
0001ad 9841              CBI __keypad_port,__keypad_R3   ;R3=0
                 ; 0000 0081         RCALL Delay1us
0001ae d025              RCALL Delay1us
                 ; 0000 0082         SBIS __keypad_port-2,__keypad_C2
0001af 9b35              SBIS __keypad_port-2,__keypad_C2
                 ; 0000 0083         RJMP Fin
0001b0 c02d              RJMP Fin
                 ; 0000 0084         LDI R30, '0'
0001b1 e3e0              LDI R30, '0'
                 ; 0000 0085         SBI __keypad_port,__keypad_R3   ;R3=1
0001b2 9a41              SBI __keypad_port,__keypad_R3   ;R3=1
                 ; 0000 0086         CBI __keypad_port,__keypad_R4   ;R4=0
0001b3 9840              CBI __keypad_port,__keypad_R4   ;R4=0
                 ; 0000 0087         RCALL Delay1us
0001b4 d01f              RCALL Delay1us
                 ; 0000 0088         SBIS __keypad_port-2,__keypad_C2
0001b5 9b35              SBIS __keypad_port-2,__keypad_C2
                 ; 0000 0089         RJMP Fin
0001b6 c027              RJMP Fin
                 ; 0000 008A         CLR R30
0001b7 27ee              CLR R30
                 ; 0000 008B         RJMP Fin
0001b8 c025              RJMP Fin
                 ; 0000 008C 
                 
                 ; 0000 008D     BarridoC3:
                     BarridoC3:
                 ; 0000 008E         LDI R30, '3'
0001b9 e3e3              LDI R30, '3'
                 ; 0000 008F         SBI __keypad_port,__keypad_R2   ;R2=1
0001ba 9a42              SBI __keypad_port,__keypad_R2   ;R2=1
                 ; 0000 0090         SBI __keypad_port,__keypad_R3   ;R3=1
0001bb 9a41              SBI __keypad_port,__keypad_R3   ;R3=1
                 ; 0000 0091         SBI __keypad_port,__keypad_R4   ;R4=1
0001bc 9a40              SBI __keypad_port,__keypad_R4   ;R4=1
                 ; 0000 0092         RCALL Delay1us
0001bd d016              RCALL Delay1us
                 ; 0000 0093         SBIS __keypad_port-2,__keypad_C3
0001be 9b36              SBIS __keypad_port-2,__keypad_C3
                 ; 0000 0094         RJMP Fin
0001bf c01e              RJMP Fin
                 ; 0000 0095         LDI R30, '6'
0001c0 e3e6              LDI R30, '6'
                 ; 0000 0096         SBI __keypad_port,__keypad_R1   ;R1=1
0001c1 9a43              SBI __keypad_port,__keypad_R1   ;R1=1
                 ; 0000 0097         CBI __keypad_port,__keypad_R2   ;R2=0
0001c2 9842              CBI __keypad_port,__keypad_R2   ;R2=0
                 ; 0000 0098         RCALL Delay1us
0001c3 d010              RCALL Delay1us
                 ; 0000 0099         SBIS __keypad_port-2,__keypad_C3
0001c4 9b36              SBIS __keypad_port-2,__keypad_C3
                 ; 0000 009A         RJMP Fin
0001c5 c018              RJMP Fin
                 ; 0000 009B         LDI R30, '9'
0001c6 e3e9              LDI R30, '9'
                 ; 0000 009C         SBI __keypad_port,__keypad_R2   ;R2=1
0001c7 9a42              SBI __keypad_port,__keypad_R2   ;R2=1
                 ; 0000 009D         CBI __keypad_port,__keypad_R3   ;R3=0
0001c8 9841              CBI __keypad_port,__keypad_R3   ;R3=0
                 ; 0000 009E         RCALL Delay1us
0001c9 d00a              RCALL Delay1us
                 ; 0000 009F         SBIS __keypad_port-2,__keypad_C3
0001ca 9b36              SBIS __keypad_port-2,__keypad_C3
                 ; 0000 00A0         RJMP Fin
0001cb c012              RJMP Fin
                 ; 0000 00A1         LDI R30, '#'
0001cc e2e3              LDI R30, '#'
                 ; 0000 00A2         SBI __keypad_port,__keypad_R3   ;R3=1
0001cd 9a41              SBI __keypad_port,__keypad_R3   ;R3=1
                 ; 0000 00A3         CBI __keypad_port,__keypad_R4   ;R4=0
0001ce 9840              CBI __keypad_port,__keypad_R4   ;R4=0
                 ; 0000 00A4         RCALL Delay1us
0001cf d004              RCALL Delay1us
                 ; 0000 00A5         SBIS __keypad_port-2,__keypad_C3
0001d0 9b36              SBIS __keypad_port-2,__keypad_C3
                 ; 0000 00A6         RJMP Fin
0001d1 c00c              RJMP Fin
                 ; 0000 00A7         CLR R30
0001d2 27ee              CLR R30
                 ; 0000 00A8         RJMP Fin
0001d3 c00a              RJMP Fin
                 ; 0000 00A9 
                 
                 ; 0000 00AA     Delay1us:
                     Delay1us:
                 ; 0000 00AB         NOP
0001d4 0000              NOP
                 ; 0000 00AC         NOP
0001d5 0000              NOP
                 ; 0000 00AD         NOP
0001d6 0000              NOP
                 ; 0000 00AE         NOP
0001d7 0000              NOP
                 ; 0000 00AF         NOP
0001d8 0000              NOP
                 ; 0000 00B0         NOP
0001d9 0000              NOP
                 ; 0000 00B1         NOP
0001da 0000              NOP
                 ; 0000 00B2         NOP
0001db 0000              NOP
                 ; 0000 00B3         NOP
0001dc 0000              NOP
                 ; 0000 00B4         RET
0001dd 9508              RET
                 ; 0000 00B5 
                 
                 ; 0000 00B6     Fin:
                     Fin:
                 ; 0000 00B7         CBI __keypad_port,__keypad_R1
0001de 9843              CBI __keypad_port,__keypad_R1
                 ; 0000 00B8         CBI __keypad_port,__keypad_R2
0001df 9842              CBI __keypad_port,__keypad_R2
                 ; 0000 00B9         CBI __keypad_port,__keypad_R3
0001e0 9841              CBI __keypad_port,__keypad_R3
                 ; 0000 00BA         CBI __keypad_port,__keypad_R4
0001e1 9840              CBI __keypad_port,__keypad_R4
                 ; 0000 00BB     #endasm
                 ; 0000 00BC }
0001e2 9508      	RET
                 ; .FEND
                 ;#pragma warn+
                 ;
                 ;char c;
                 ;
                 ;void main(void){
                 ; 0000 00C1 void main(void){
                 _main:
                 ; .FSTART _main
                 ; 0000 00C2     SetupLCD();
0001e3 940e 00b0 	CALL _SetupLCD
                 ; 0000 00C3     SetupKeypad();
0001e5 940e 0173 	CALL _SetupKeypad
                 ; 0000 00C4 
                 ; 0000 00C5     while (1){
                 _0x26:
                 ; 0000 00C6        do{
                 _0x2A:
                 ; 0000 00C7            c=ReadKeypad();
0001e7 940e 017b 	CALL _ReadKeypad
0001e9 93e0 0a01 	STS  _c,R30
                 ; 0000 00C8            tono(400.00);
                +
0001eb e0a0     +LDI R26 , LOW ( 0x43C80000 )
0001ec e0b0     +LDI R27 , HIGH ( 0x43C80000 )
0001ed ec88     +LDI R24 , BYTE3 ( 0x43C80000 )
0001ee e493     +LDI R25 , BYTE4 ( 0x43C80000 )
                 	__GETD2N 0x43C80000
0001ef 940e 0131 	CALL _tono
                 ; 0000 00C9        }while(c==0);
0001f1 91e0 0a01 	LDS  R30,_c
0001f3 30e0      	CPI  R30,0
0001f4 f391      	BREQ _0x2A
                 ; 0000 00CA 
                 ; 0000 00CB        MoveCursor(0,0);
0001f5 e0e0      	LDI  R30,LOW(0)
0001f6 93ea      	ST   -Y,R30
0001f7 e0a0      	LDI  R26,LOW(0)
0001f8 940e 0112 	CALL _MoveCursor
                 ; 0000 00CC        CharLCD(c);
0001fa 91a0 0a01 	LDS  R26,_c
0001fc 940e 0106 	CALL _CharLCD
                 ; 0000 00CD     }
0001fe cfe8      	RJMP _0x26
                 ; 0000 00CE }
                 _0x2C:
0001ff cfff      	RJMP _0x2C
                 ; .FEND
                 
                 	.DSEG
                 _cursor:
000a00           	.BYTE 0x1
                 _c:
000a01           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
000200 e0a2      	LDI  R26,LOW(2)
000201 e0b0      	LDI  R27,0
000202 940c 0216 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000204 940e 00df 	CALL _SendDataBitsLCD
000206 940c 00dc 	JMP  _PulseEn
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000208 81e9      	LDD  R30,Y+1
000209 7fe0      	ANDI R30,LOW(0xF0)
00020a 2f0e      	MOV  R16,R30
00020b 9502      	SWAP R16
00020c 700f      	ANDI R16,0xF
00020d 2fa0      	MOV  R26,R16
00020e cff5      	RJMP SUBOPT_0x1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
00020f 81e9      	LDD  R30,Y+1
000210 70ef      	ANDI R30,LOW(0xF)
000211 2f0e      	MOV  R16,R30
000212 2fa0      	MOV  R26,R16
000213 940e 00df 	CALL _SendDataBitsLCD
000215 cfea      	RJMP SUBOPT_0x0
                 
                 
                 	.CSEG
                 _delay_ms:
000216 9610      	adiw r26,0
000217 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000218 ed80     +LDI R24 , LOW ( 0x7D0 )
000219 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00021a 9701     +SBIW R24 , 1
00021b f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00021c 95a8      	wdr
00021d 9711      	sbiw r26,1
00021e f7c9      	brne __delay_ms0
                 __delay_ms1:
00021f 9508      	ret
                 
                 __ROUND_REPACK:
000220 2355      	TST  R21
000221 f442      	BRPL __REPACK
000222 3850      	CPI  R21,0x80
000223 f411      	BRNE __ROUND_REPACK0
000224 ffe0      	SBRS R30,0
000225 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000226 9631      	ADIW R30,1
000227 1f69      	ADC  R22,R25
000228 1f79      	ADC  R23,R25
000229 f06b      	BRVS __REPACK1
                 
                 __REPACK:
00022a e850      	LDI  R21,0x80
00022b 2757      	EOR  R21,R23
00022c f411      	BRNE __REPACK0
00022d 935f      	PUSH R21
00022e c0ca      	RJMP __ZERORES
                 __REPACK0:
00022f 3f5f      	CPI  R21,0xFF
000230 f031      	BREQ __REPACK1
000231 0f66      	LSL  R22
000232 0c00      	LSL  R0
000233 9557      	ROR  R21
000234 9567      	ROR  R22
000235 2f75      	MOV  R23,R21
000236 9508      	RET
                 __REPACK1:
000237 935f      	PUSH R21
000238 2000      	TST  R0
000239 f00a      	BRMI __REPACK2
00023a c0ca      	RJMP __MAXRES
                 __REPACK2:
00023b c0c3      	RJMP __MINRES
                 
                 __UNPACK:
00023c e850      	LDI  R21,0x80
00023d 2e19      	MOV  R1,R25
00023e 2215      	AND  R1,R21
00023f 0f88      	LSL  R24
000240 1f99      	ROL  R25
000241 2795      	EOR  R25,R21
000242 0f55      	LSL  R21
000243 9587      	ROR  R24
                 
                 __UNPACK1:
000244 e850      	LDI  R21,0x80
000245 2e07      	MOV  R0,R23
000246 2205      	AND  R0,R21
000247 0f66      	LSL  R22
000248 1f77      	ROL  R23
000249 2775      	EOR  R23,R21
00024a 0f55      	LSL  R21
00024b 9567      	ROR  R22
00024c 9508      	RET
                 
                 __CFD1U:
00024d 9468      	SET
00024e c001      	RJMP __CFD1U0
                 __CFD1:
00024f 94e8      	CLT
                 __CFD1U0:
000250 935f      	PUSH R21
000251 dff2      	RCALL __UNPACK1
000252 3870      	CPI  R23,0x80
000253 f018      	BRLO __CFD10
000254 3f7f      	CPI  R23,0xFF
000255 f408      	BRCC __CFD10
000256 c0a2      	RJMP __ZERORES
                 __CFD10:
000257 e156      	LDI  R21,22
000258 1b57      	SUB  R21,R23
000259 f4aa      	BRPL __CFD11
00025a 9551      	NEG  R21
00025b 3058      	CPI  R21,8
00025c f40e      	BRTC __CFD19
00025d 3059      	CPI  R21,9
                 __CFD19:
00025e f030      	BRLO __CFD17
00025f efef      	SER  R30
000260 efff      	SER  R31
000261 ef6f      	SER  R22
000262 e77f      	LDI  R23,0x7F
000263 f977      	BLD  R23,7
000264 c01a      	RJMP __CFD15
                 __CFD17:
000265 2777      	CLR  R23
000266 2355      	TST  R21
000267 f0b9      	BREQ __CFD15
                 __CFD18:
000268 0fee      	LSL  R30
000269 1fff      	ROL  R31
00026a 1f66      	ROL  R22
00026b 1f77      	ROL  R23
00026c 955a      	DEC  R21
00026d f7d1      	BRNE __CFD18
00026e c010      	RJMP __CFD15
                 __CFD11:
00026f 2777      	CLR  R23
                 __CFD12:
000270 3058      	CPI  R21,8
000271 f028      	BRLO __CFD13
000272 2fef      	MOV  R30,R31
000273 2ff6      	MOV  R31,R22
000274 2f67      	MOV  R22,R23
000275 5058      	SUBI R21,8
000276 cff9      	RJMP __CFD12
                 __CFD13:
000277 2355      	TST  R21
000278 f031      	BREQ __CFD15
                 __CFD14:
000279 9576      	LSR  R23
00027a 9567      	ROR  R22
00027b 95f7      	ROR  R31
00027c 95e7      	ROR  R30
00027d 955a      	DEC  R21
00027e f7d1      	BRNE __CFD14
                 __CFD15:
00027f 2000      	TST  R0
000280 f40a      	BRPL __CFD16
000281 d0ee      	RCALL __ANEGD1
                 __CFD16:
000282 915f      	POP  R21
000283 9508      	RET
                 
                 __CDF1U:
000284 9468      	SET
000285 c001      	RJMP __CDF1U0
                 __CDF1:
000286 94e8      	CLT
                 __CDF1U0:
000287 9730      	SBIW R30,0
000288 4060      	SBCI R22,0
000289 4070      	SBCI R23,0
00028a f0b1      	BREQ __CDF10
00028b 2400      	CLR  R0
00028c f026      	BRTS __CDF11
00028d 2377      	TST  R23
00028e f412      	BRPL __CDF11
00028f 9400      	COM  R0
000290 d0df      	RCALL __ANEGD1
                 __CDF11:
000291 2e17      	MOV  R1,R23
000292 e17e      	LDI  R23,30
000293 2011      	TST  R1
                 __CDF12:
000294 f032      	BRMI __CDF13
000295 957a      	DEC  R23
000296 0fee      	LSL  R30
000297 1fff      	ROL  R31
000298 1f66      	ROL  R22
000299 1c11      	ROL  R1
00029a cff9      	RJMP __CDF12
                 __CDF13:
00029b 2fef      	MOV  R30,R31
00029c 2ff6      	MOV  R31,R22
00029d 2d61      	MOV  R22,R1
00029e 935f      	PUSH R21
00029f df8a      	RCALL __REPACK
0002a0 915f      	POP  R21
                 __CDF10:
0002a1 9508      	RET
                 
                 __SWAPACC:
0002a2 934f      	PUSH R20
0002a3 01af      	MOVW R20,R30
0002a4 01fd      	MOVW R30,R26
0002a5 01da      	MOVW R26,R20
0002a6 01ab      	MOVW R20,R22
0002a7 01bc      	MOVW R22,R24
0002a8 01ca      	MOVW R24,R20
0002a9 2d40      	MOV  R20,R0
0002aa 2c01      	MOV  R0,R1
0002ab 2e14      	MOV  R1,R20
0002ac 914f      	POP  R20
0002ad 9508      	RET
                 
                 __UADD12:
0002ae 0fea      	ADD  R30,R26
0002af 1ffb      	ADC  R31,R27
0002b0 1f68      	ADC  R22,R24
0002b1 9508      	RET
                 
                 __NEGMAN1:
0002b2 95e0      	COM  R30
0002b3 95f0      	COM  R31
0002b4 9560      	COM  R22
0002b5 5fef      	SUBI R30,-1
0002b6 4fff      	SBCI R31,-1
0002b7 4f6f      	SBCI R22,-1
0002b8 9508      	RET
                 
                 __SUBF12:
0002b9 935f      	PUSH R21
0002ba df81      	RCALL __UNPACK
0002bb 3890      	CPI  R25,0x80
0002bc f149      	BREQ __ADDF129
0002bd e850      	LDI  R21,0x80
0002be 2615      	EOR  R1,R21
                 
                 __ADDF120:
0002bf 3870      	CPI  R23,0x80
0002c0 f121      	BREQ __ADDF128
                 __ADDF121:
0002c1 2f57      	MOV  R21,R23
0002c2 1b59      	SUB  R21,R25
0002c3 f12b      	BRVS __ADDF1211
0002c4 f412      	BRPL __ADDF122
0002c5 dfdc      	RCALL __SWAPACC
0002c6 cffa      	RJMP __ADDF121
                 __ADDF122:
0002c7 3158      	CPI  R21,24
0002c8 f018      	BRLO __ADDF123
0002c9 27aa      	CLR  R26
0002ca 27bb      	CLR  R27
0002cb 2788      	CLR  R24
                 __ADDF123:
0002cc 3058      	CPI  R21,8
0002cd f028      	BRLO __ADDF124
0002ce 2fab      	MOV  R26,R27
0002cf 2fb8      	MOV  R27,R24
0002d0 2788      	CLR  R24
0002d1 5058      	SUBI R21,8
0002d2 cff9      	RJMP __ADDF123
                 __ADDF124:
0002d3 2355      	TST  R21
0002d4 f029      	BREQ __ADDF126
                 __ADDF125:
0002d5 9586      	LSR  R24
0002d6 95b7      	ROR  R27
0002d7 95a7      	ROR  R26
0002d8 955a      	DEC  R21
0002d9 f7d9      	BRNE __ADDF125
                 __ADDF126:
0002da 2d50      	MOV  R21,R0
0002db 2551      	EOR  R21,R1
0002dc f072      	BRMI __ADDF127
0002dd dfd0      	RCALL __UADD12
0002de f438      	BRCC __ADDF129
0002df 9567      	ROR  R22
0002e0 95f7      	ROR  R31
0002e1 95e7      	ROR  R30
0002e2 9573      	INC  R23
0002e3 f413      	BRVC __ADDF129
0002e4 c020      	RJMP __MAXRES
                 __ADDF128:
0002e5 dfbc      	RCALL __SWAPACC
                 __ADDF129:
0002e6 df43      	RCALL __REPACK
0002e7 915f      	POP  R21
0002e8 9508      	RET
                 __ADDF1211:
0002e9 f7d8      	BRCC __ADDF128
0002ea cffb      	RJMP __ADDF129
                 __ADDF127:
0002eb 1bea      	SUB  R30,R26
0002ec 0bfb      	SBC  R31,R27
0002ed 0b68      	SBC  R22,R24
0002ee f051      	BREQ __ZERORES
0002ef f410      	BRCC __ADDF1210
0002f0 9400      	COM  R0
0002f1 dfc0      	RCALL __NEGMAN1
                 __ADDF1210:
0002f2 2366      	TST  R22
0002f3 f392      	BRMI __ADDF129
0002f4 0fee      	LSL  R30
0002f5 1fff      	ROL  R31
0002f6 1f66      	ROL  R22
0002f7 957a      	DEC  R23
0002f8 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0002f9 27ee      	CLR  R30
0002fa 27ff      	CLR  R31
0002fb 2766      	CLR  R22
0002fc 2777      	CLR  R23
0002fd 915f      	POP  R21
0002fe 9508      	RET
                 
                 __MINRES:
0002ff efef      	SER  R30
000300 efff      	SER  R31
000301 e76f      	LDI  R22,0x7F
000302 ef7f      	SER  R23
000303 915f      	POP  R21
000304 9508      	RET
                 
                 __MAXRES:
000305 efef      	SER  R30
000306 efff      	SER  R31
000307 e76f      	LDI  R22,0x7F
000308 e77f      	LDI  R23,0x7F
000309 915f      	POP  R21
00030a 9508      	RET
                 
                 __DIVF21:
00030b 935f      	PUSH R21
00030c df2f      	RCALL __UNPACK
00030d 3870      	CPI  R23,0x80
00030e f421      	BRNE __DIVF210
00030f 2011      	TST  R1
                 __DIVF211:
000310 f40a      	BRPL __DIVF219
000311 cfed      	RJMP __MINRES
                 __DIVF219:
000312 cff2      	RJMP __MAXRES
                 __DIVF210:
000313 3890      	CPI  R25,0x80
000314 f409      	BRNE __DIVF218
                 __DIVF217:
000315 cfe3      	RJMP __ZERORES
                 __DIVF218:
000316 2401      	EOR  R0,R1
000317 9408      	SEC
000318 0b97      	SBC  R25,R23
000319 f41b      	BRVC __DIVF216
00031a f3d4      	BRLT __DIVF217
00031b 2000      	TST  R0
00031c cff3      	RJMP __DIVF211
                 __DIVF216:
00031d 2f79      	MOV  R23,R25
00031e 931f      	PUSH R17
00031f 932f      	PUSH R18
000320 933f      	PUSH R19
000321 934f      	PUSH R20
000322 2411      	CLR  R1
000323 2711      	CLR  R17
000324 2722      	CLR  R18
000325 2733      	CLR  R19
000326 2744      	CLR  R20
000327 2755      	CLR  R21
000328 e290      	LDI  R25,32
                 __DIVF212:
000329 17ae      	CP   R26,R30
00032a 07bf      	CPC  R27,R31
00032b 0786      	CPC  R24,R22
00032c 0741      	CPC  R20,R17
00032d f030      	BRLO __DIVF213
00032e 1bae      	SUB  R26,R30
00032f 0bbf      	SBC  R27,R31
000330 0b86      	SBC  R24,R22
000331 0b41      	SBC  R20,R17
000332 9408      	SEC
000333 c001      	RJMP __DIVF214
                 __DIVF213:
000334 9488      	CLC
                 __DIVF214:
000335 1f55      	ROL  R21
000336 1f22      	ROL  R18
000337 1f33      	ROL  R19
000338 1c11      	ROL  R1
000339 1faa      	ROL  R26
00033a 1fbb      	ROL  R27
00033b 1f88      	ROL  R24
00033c 1f44      	ROL  R20
00033d 959a      	DEC  R25
00033e f751      	BRNE __DIVF212
00033f 01f9      	MOVW R30,R18
000340 2d61      	MOV  R22,R1
000341 914f      	POP  R20
000342 913f      	POP  R19
000343 912f      	POP  R18
000344 911f      	POP  R17
000345 2366      	TST  R22
000346 f032      	BRMI __DIVF215
000347 0f55      	LSL  R21
000348 1fee      	ROL  R30
000349 1fff      	ROL  R31
00034a 1f66      	ROL  R22
00034b 957a      	DEC  R23
00034c f243      	BRVS __DIVF217
                 __DIVF215:
00034d ded2      	RCALL __ROUND_REPACK
00034e 915f      	POP  R21
00034f 9508      	RET
                 
                 __CMPF12:
000350 2399      	TST  R25
000351 f09a      	BRMI __CMPF120
000352 2377      	TST  R23
000353 f042      	BRMI __CMPF121
000354 1797      	CP   R25,R23
000355 f048      	BRLO __CMPF122
000356 f429      	BRNE __CMPF121
000357 17ae      	CP   R26,R30
000358 07bf      	CPC  R27,R31
000359 0786      	CPC  R24,R22
00035a f020      	BRLO __CMPF122
00035b f031      	BREQ __CMPF123
                 __CMPF121:
00035c 9498      	CLZ
00035d 9488      	CLC
00035e 9508      	RET
                 __CMPF122:
00035f 9498      	CLZ
000360 9408      	SEC
000361 9508      	RET
                 __CMPF123:
000362 9418      	SEZ
000363 9488      	CLC
000364 9508      	RET
                 __CMPF120:
000365 2377      	TST  R23
000366 f7c2      	BRPL __CMPF122
000367 1797      	CP   R25,R23
000368 f398      	BRLO __CMPF121
000369 f7a9      	BRNE __CMPF122
00036a 17ea      	CP   R30,R26
00036b 07fb      	CPC  R31,R27
00036c 0768      	CPC  R22,R24
00036d f388      	BRLO __CMPF122
00036e f399      	BREQ __CMPF123
00036f cfec      	RJMP __CMPF121
                 
                 __ANEGD1:
000370 95f0      	COM  R31
000371 9560      	COM  R22
000372 9570      	COM  R23
000373 95e1      	NEG  R30
000374 4fff      	SBCI R31,-1
000375 4f6f      	SBCI R22,-1
000376 4f7f      	SBCI R23,-1
000377 9508      	RET
                 
                 __CWD1:
000378 2f6f      	MOV  R22,R31
000379 0f66      	ADD  R22,R22
00037a 0b66      	SBC  R22,R22
00037b 2f76      	MOV  R23,R22
00037c 9508      	RET
                 
                 __PUTPARD2:
00037d 939a      	ST   -Y,R25
00037e 938a      	ST   -Y,R24
00037f 93ba      	ST   -Y,R27
000380 93aa      	ST   -Y,R26
000381 9508      	RET
                 
                 __SWAPD12:
000382 2e18      	MOV  R1,R24
000383 2f86      	MOV  R24,R22
000384 2d61      	MOV  R22,R1
000385 2e19      	MOV  R1,R25
000386 2f97      	MOV  R25,R23
000387 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000388 2e1b      	MOV  R1,R27
000389 2fbf      	MOV  R27,R31
00038a 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00038b 2e1a      	MOV  R1,R26
00038c 2fae      	MOV  R26,R30
00038d 2de1      	MOV  R30,R1
00038e 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
00038f 0fac      	ADD  R26,R28
000390 1fbd      	ADC  R27,R29
                 __INITLOC0:
000391 9005      	LPM  R0,Z+
000392 920d      	ST   X+,R0
000393 958a      	DEC  R24
000394 f7e1      	BRNE __INITLOC0
000395 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega2560 register use summary:
r0 :  19 r1 :  24 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:  22 r17:   8 r18:   5 r19:   4 r20:  14 r21:  53 r22:  50 r23:  45 
r24:  35 r25:  24 r26:  55 r27:  25 r28:   9 r29:   2 r30: 107 r31:  42 
x  :   5 y  :  42 z  :   8 
Registers used: 21 out of 35 (60.0%)

ATmega2560 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   6 add   :   4 
adiw  :   7 and   :   2 andi  :   7 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   4 brcs  :   0 break :   0 breq  :  17 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  11 
brlt  :   1 brmi  :   7 brne  :  20 brpl  :   7 brsh  :   1 brtc  :   1 
brts  :   1 brvc  :   3 brvs  :   3 bset  :   0 bst   :   0 call  :  25 
cbi   :  19 cbr   :   0 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  25 cls   :   0 clt   :   2 clv   :   0 clz   :   2 com   :   8 
cp    :   5 cpc   :  10 cpi   :  18 cpse  :   0 dec   :   9 des   :   0 
eicall:   0 eijmp :   0 elpm  :   0 eor   :   6 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   0 ijmp  :   0 in    :   0 inc   :   1 jmp   :  60 
ld    :   6 ldd   :  19 ldi   :  72 lds   :   3 lpm   :   8 lsl   :  10 
lsr   :   2 mov   :  40 movw  :  15 mul   :   0 muls  :   0 mulsu :   0 
neg   :   2 nop   :   9 or    :   0 ori   :   0 out   :   8 pop   :  12 
push  :  11 rcall :  28 ret   :  29 reti  :   0 rjmp  :  55 rol   :  21 
ror   :  12 sbc   :   7 sbci  :   8 sbi   :  38 sbic  :   0 sbis  :  15 
sbiw  :  10 sbr   :   0 sbrc  :   0 sbrs  :   1 sec   :   3 seh   :   0 
sei   :   0 sen   :   0 ser   :   8 ses   :   0 set   :   2 sev   :   0 
sez   :   1 sleep :   0 spm   :   0 st    :  18 std   :   4 sts   :   8 
sub   :   4 subi  :  10 swap  :   1 tst   :  15 wdr   :   1 
Instructions used: 70 out of 119 (58.8%)

ATmega2560 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00072c   1818     18   1836  262144   0.7%
[.dseg] 0x000200 0x000a02      0      2      2    8192   0.0%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 0 warnings
