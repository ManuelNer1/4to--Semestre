
AVRASM ver. 2.1.30  C:\Users\nerij\OneDrive\Escritorio\Diseño de sistema en chip\Semana 3\LCD\SegunderoLCD\Debug\List\Segundero.asm Tue Apr 13 20:55:53 2021

C:\Users\nerij\OneDrive\Escritorio\Diseño de sistema en chip\Semana 3\LCD\SegunderoLCD\Debug\List\Segundero.asm(1089): warning: Register r4 already defined by the .DEF directive
C:\Users\nerij\OneDrive\Escritorio\Diseño de sistema en chip\Semana 3\LCD\SegunderoLCD\Debug\List\Segundero.asm(1090): warning: Register r3 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.43 Evaluation
                 ;(C) Copyright 1998-2021 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega2560
                 ;Program type           : Application
                 ;Clock frequency        : 16.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega2560
                 	#pragma AVRPART MEMORY PROG_FLASH 262144
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 8192
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x200
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU RAMPZ=0x3B
                 	.EQU EIND=0x3C
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x74
                 	.EQU XMCRB=0x75
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0200
                 	.EQU __SRAM_END=0x21FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _cursor=R4
                 	.DEF _seg=R3
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0090 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
000046 940c 0000 	JMP  0x00
000048 940c 0000 	JMP  0x00
00004a 940c 0000 	JMP  0x00
00004c 940c 0000 	JMP  0x00
00004e 940c 0000 	JMP  0x00
000050 940c 0000 	JMP  0x00
000052 940c 0000 	JMP  0x00
000054 940c 0000 	JMP  0x00
000056 940c 0000 	JMP  0x00
000058 940c 0000 	JMP  0x00
00005a 940c 0000 	JMP  0x00
00005c 940c 0000 	JMP  0x00
00005e 940c 0000 	JMP  0x00
000060 940c 0000 	JMP  0x00
000062 940c 0000 	JMP  0x00
000064 940c 0000 	JMP  0x00
000066 940c 0000 	JMP  0x00
000068 940c 0000 	JMP  0x00
00006a 940c 0000 	JMP  0x00
00006c 940c 0000 	JMP  0x00
00006e 940c 0000 	JMP  0x00
000070 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
000072 2710
000073 03e8
000074 0064
000075 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000076 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000077 1000
000078 0100
000079 0010
00007a 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
C:\Users\nerij\OneDrive\Escritorio\Diseño de sistema en chip\Semana 3\LCD\SegunderoLCD\Debug\List\Segundero.asm(1168): warning: .cseg .db misalignment - padding zero byte
00007b 00fa      	.DB  0xFA
                 
                 _0x3:
00007c 0303
00007d 0203
00007e 0c02
00007f 0800      	.DB  0x3,0x3,0x3,0x2,0x2,0xC,0x0,0x8
000080 0100
000081 0600      	.DB  0x0,0x1,0x0,0x6
                 _0x0:
000082 6954
000083 6d65
000084 6f70
000085 6520      	.DB  0x54,0x69,0x65,0x6D,0x70,0x6F,0x20,0x65
000086 206e
000087 6553
000088 0067
000089 7525      	.DB  0x6E,0x20,0x53,0x65,0x67,0x0,0x25,0x75
00008a 2020
00008b 0020      	.DB  0x20,0x20,0x20,0x0
                 
                 __GLOBAL_INI_TBL:
00008c 0001      	.DW  0x01
00008d 0003      	.DW  0x03
00008e 00f6      	.DW  __REG_VARS*2
                 
                 _0xFFFFFFFF:
00008f 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000090 94f8      	CLI
000091 27ee      	CLR  R30
000092 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000093 e0f1      	LDI  R31,1
000094 bff5      	OUT  MCUCR,R31
000095 bfe5      	OUT  MCUCR,R30
000096 93e0 0074 	STS  XMCRA,R30
000098 93e0 0075 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
00009a e08d      	LDI  R24,(14-2)+1
00009b e0a2      	LDI  R26,2
00009c 27bb      	CLR  R27
                 __CLEAR_REG:
00009d 93ed      	ST   X+,R30
00009e 958a      	DEC  R24
00009f f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000a0 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000a1 e290      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000a2 e0a0      	LDI  R26,LOW(__SRAM_START)
0000a3 e0b2      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0000a4 93ed      	ST   X+,R30
0000a5 9701      	SBIW R24,1
0000a6 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000a7 e1e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000a8 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000a9 9185      	LPM  R24,Z+
0000aa 9195      	LPM  R25,Z+
0000ab 9700      	SBIW R24,0
0000ac f061      	BREQ __GLOBAL_INI_END
0000ad 91a5      	LPM  R26,Z+
0000ae 91b5      	LPM  R27,Z+
0000af 9005      	LPM  R0,Z+
0000b0 9015      	LPM  R1,Z+
0000b1 01bf      	MOVW R22,R30
0000b2 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000b3 9005      	LPM  R0,Z+
0000b4 920d      	ST   X+,R0
0000b5 9701      	SBIW R24,1
0000b6 f7e1      	BRNE __GLOBAL_INI_LOOP
0000b7 01fb      	MOVW R30,R22
0000b8 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0000b9 bf8b      	OUT  RAMPZ,R24
                 
0000ba bf8c      	OUT  EIND,R24
                 
                 ;GPIOR0 INITIALIZATION
0000bb e0e0      	LDI  R30,__GPIOR0_INIT
0000bc bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000bd efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000be bfed      	OUT  SPL,R30
0000bf e2e1      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000c0 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000c1 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000c2 e0d4      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000c3 940c 016b 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x400
                 
                 	.CSEG
                     .equ __lcd_port=0x08
                     .equ __lcd_EN=1
                     .equ __lcd_RS=0
                     .equ __lcd_D4=2
                     .equ __lcd_D5=3
                     .equ __lcd_D6=4
                     .equ __lcd_D7=5
                 ; 0000 000F    #endasm
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 
                 	.CSEG
                 _SetupLCD:
                 ; .FSTART _SetupLCD
0000c5 972c      	SBIW R28,12
0000c6 e08c      	LDI  R24,12
                +
0000c7 e060     +LDI R22 , LOW ( 0 )
0000c8 e070     +LDI R23 , HIGH ( 0 )
                 	__GETWRN 22,23,0
0000c9 efe8      	LDI  R30,LOW(_0x3*2)
0000ca e0f0      	LDI  R31,HIGH(_0x3*2)
0000cb d296      	RCALL __INITLOCB
0000cc 931a      	ST   -Y,R17
                 ;	TableSetup -> Y+1
                 ;	i -> R17
                 ; 0000 0013     SBI __lcd_port-1,__lcd_EN
0000cd 9a39          SBI __lcd_port-1,__lcd_EN
0000ce 9a38          SBI __lcd_port-1,__lcd_RS
0000cf 9a3a          SBI __lcd_port-1,__lcd_D4
0000d0 9a3b          SBI __lcd_port-1,__lcd_D5
0000d1 9a3c          SBI __lcd_port-1,__lcd_D6
0000d2 9a3d          SBI __lcd_port-1,__lcd_D7
0000d3 e3a2      	LDI  R26,LOW(50)
0000d4 e0b0      	LDI  R27,0
0000d5 d2b1      	RCALL _delay_ms
0000d6 e010      	LDI  R17,LOW(0)
                 _0x5:
0000d7 301c      	CPI  R17,12
0000d8 f470      	BRSH _0x6
0000d9 e0a2      	LDI  R26,LOW(2)
0000da e0b0      	LDI  R27,0
0000db d2ab      	RCALL _delay_ms
0000dc 2fe1      	MOV  R30,R17
0000dd e0f0      	LDI  R31,0
0000de 01de      	MOVW R26,R28
0000df 9611      	ADIW R26,1
0000e0 0fae      	ADD  R26,R30
0000e1 1fbf      	ADC  R27,R31
0000e2 91ac      	LD   R26,X
0000e3 d00d      	RCALL _SendDataBitsLCD
0000e4 d009      	RCALL _PulseEn
0000e5 5f1f      	SUBI R17,-1
0000e6 cff0      	RJMP _0x5
                 _0x6:
0000e7 e0ec      	LDI  R30,LOW(12)
0000e8 2e4e      	MOV  R4,R30
0000e9 2da4      	MOV  R26,R4
0000ea d01e      	RCALL _WriteComandLCD
0000eb 8118      	LDD  R17,Y+0
0000ec 962d      	ADIW R28,13
0000ed 9508      	RET
                 ; .FEND
                 _PulseEn:
                 ; .FSTART _PulseEn
0000ee 9a41          SBI __lcd_port,__lcd_EN  // EN=1;
0000ef 9841          CBI __lcd_port,__lcd_EN // EN=0;
0000f0 9508      	RET
                 ; .FEND
                 _SendDataBitsLCD:
                 ; .FSTART _SendDataBitsLCD
0000f1 931a      	ST   -Y,R17
0000f2 2f1a      	MOV  R17,R26
                 ;	dato -> R17
0000f3 ff13      	SBRS R17,3
0000f4 c002      	RJMP _0x7
0000f5 9a45      	SBI __lcd_port,__lcd_D7
0000f6 c001      	RJMP _0x8
                 _0x7:
0000f7 9845      	CBI __lcd_port,__lcd_D7
                 _0x8:
0000f8 ff12      	SBRS R17,2
0000f9 c002      	RJMP _0x9
0000fa 9a44      	SBI __lcd_port,__lcd_D6
0000fb c001      	RJMP _0xA
                 _0x9:
0000fc 9844      	CBI __lcd_port,__lcd_D6
                 _0xA:
0000fd ff11      	SBRS R17,1
0000fe c002      	RJMP _0xB
0000ff 9a43      	SBI __lcd_port,__lcd_D5
000100 c001      	RJMP _0xC
                 _0xB:
000101 9843      	CBI __lcd_port,__lcd_D5
                 _0xC:
000102 ff10      	SBRS R17,0
000103 c002      	RJMP _0xD
000104 9a42      	SBI __lcd_port,__lcd_D4
000105 c001      	RJMP _0xE
                 _0xD:
000106 9842      	CBI __lcd_port,__lcd_D4
                 _0xE:
000107 9119      	LD   R17,Y+
000108 9508      	RET
                 ; .FEND
                 _WriteComandLCD:
                 ; .FSTART _WriteComandLCD
000109 931a      	ST   -Y,R17
00010a 930a      	ST   -Y,R16
00010b 2f0a      	MOV  R16,R26
                 ;	Comando -> R16
                 ;	tempComando -> R17
00010c 9840      	CBI __lcd_port,__lcd_RS
00010d c004      	RJMP _0x2060003
                 ; .FEND
                 _CharLCD:
                 ; .FSTART _CharLCD
00010e 931a      	ST   -Y,R17
00010f 930a      	ST   -Y,R16
000110 2f0a      	MOV  R16,R26
                 ;	dato -> R16
                 ;	tempdato -> R17
000111 9a40      	SBI __lcd_port,__lcd_RS
                 _0x2060003:
000112 e0a2      	LDI  R26,LOW(2)
000113 e0b0      	LDI  R27,0
000114 d272      	RCALL _delay_ms
000115 2fe0      	MOV  R30,R16
000116 7fe0      	ANDI R30,LOW(0xF0)
000117 2f1e      	MOV  R17,R30
000118 9512      	SWAP R17
000119 701f      	ANDI R17,0xF
00011a 2fa1      	MOV  R26,R17
00011b dfd5      	RCALL _SendDataBitsLCD
00011c dfd1      	RCALL _PulseEn
00011d 2fe0      	MOV  R30,R16
00011e 70ef      	ANDI R30,LOW(0xF)
00011f 2f1e      	MOV  R17,R30
000120 2fa1      	MOV  R26,R17
000121 dfcf      	RCALL _SendDataBitsLCD
000122 e0a2      	LDI  R26,LOW(2)
000123 e0b0      	LDI  R27,0
000124 d262      	RCALL _delay_ms
000125 dfc8      	RCALL _PulseEn
000126 9109      	LD   R16,Y+
000127 9119      	LD   R17,Y+
000128 9508      	RET
                 ; .FEND
                 _StringLCD:
                 ; .FSTART _StringLCD
000129 d22c      	RCALL __SAVELOCR4
00012a 019d      	MOVW R18,R26
                 ;	Mensaje -> R18,R19
                 ;	i -> R17
00012b e010      	LDI  R17,LOW(0)
                 _0x10:
00012c d1fe      	RCALL SUBOPT_0x0
00012d 91a4      	LPM  R26,Z
00012e dfdf      	RCALL _CharLCD
00012f 2fe1      	MOV  R30,R17
000130 e0f0      	LDI  R31,0
000131 0fe2      	ADD  R30,R18
000132 1ff3      	ADC  R31,R19
000133 91e4      	LPM  R30,Z
000134 30e0      	CPI  R30,0
000135 f7b1      	BRNE _0x10
000136 c00d      	RJMP _0x2060002
                 ; .FEND
                 ;	Mensaje -> R20,R21
                 ;	tiempo -> R18,R19
                 ;	i -> R17
                 _StringLCDVar:
                 ; .FSTART _StringLCDVar
000137 d21e      	RCALL __SAVELOCR4
000138 019d      	MOVW R18,R26
                 ;	Mensaje -> R18,R19
                 ;	i -> R17
000139 e010      	LDI  R17,LOW(0)
                 _0x16:
00013a d1f0      	RCALL SUBOPT_0x0
00013b 81a0      	LD   R26,Z
00013c dfd1      	RCALL _CharLCD
00013d 01d9      	MOVW R26,R18
00013e 27ee      	CLR  R30
00013f 0fa1      	ADD  R26,R17
000140 1fbe      	ADC  R27,R30
000141 91ec      	LD   R30,X
000142 30e0      	CPI  R30,0
000143 f7b1      	BRNE _0x16
                 _0x2060002:
000144 d218      	RCALL __LOADLOCR4
000145 9624      	ADIW R28,4
000146 9508      	RET
                 ; .FEND
                 _MoveCursor:
                 ; .FSTART _MoveCursor
000147 931a      	ST   -Y,R17
000148 930a      	ST   -Y,R16
000149 2f1a      	MOV  R17,R26
00014a 810a      	LDD  R16,Y+2
                 ;	x -> R16
                 ;	y -> R17
00014b 2fe1      	MOV  R30,R17
00014c e0f0      	LDI  R31,0
00014d 9730      	SBIW R30,0
00014e f419      	BRNE _0x1B
00014f 2fa0      	MOV  R26,R16
000150 58a0      	SUBI R26,-LOW(128)
000151 c014      	RJMP _0x26
                 _0x1B:
000152 30e1      	CPI  R30,LOW(0x1)
000153 e0a0      	LDI  R26,HIGH(0x1)
000154 07fa      	CPC  R31,R26
000155 f419      	BRNE _0x1C
000156 2fa0      	MOV  R26,R16
000157 54a0      	SUBI R26,-LOW(192)
000158 c00d      	RJMP _0x26
                 _0x1C:
000159 30e2      	CPI  R30,LOW(0x2)
00015a e0a0      	LDI  R26,HIGH(0x2)
00015b 07fa      	CPC  R31,R26
00015c f419      	BRNE _0x1D
00015d 2fa0      	MOV  R26,R16
00015e 56ac      	SUBI R26,-LOW(148)
00015f c006      	RJMP _0x26
                 _0x1D:
000160 30e3      	CPI  R30,LOW(0x3)
000161 e0a0      	LDI  R26,HIGH(0x3)
000162 07fa      	CPC  R31,R26
000163 f419      	BRNE _0x1A
000164 2fa0      	MOV  R26,R16
000165 52ac      	SUBI R26,-LOW(212)
                 _0x26:
000166 dfa2      	RCALL _WriteComandLCD
                 _0x1A:
000167 8119      	LDD  R17,Y+1
000168 8108      	LDD  R16,Y+0
000169 9623      	ADIW R28,3
00016a 9508      	RET
                 ; .FEND
                 ;	NoCaracter -> R16
                 ;	datos -> R18,R19
                 ;	i -> R17
                 ;void main(void)
                 ; 0000 001C {
                 _main:
                 ; .FSTART _main
                 ; 0000 001D //Para que funcione mi programa necesita esta parte
                 ; 0000 001E SetupLCD();
00016b df59      	RCALL _SetupLCD
                 ; 0000 001F 
                 ; 0000 0020 MoveCursor(0,0);                       //Mueve cursor en X Y
00016c e0e0      	LDI  R30,LOW(0)
00016d 93ea      	ST   -Y,R30
00016e e0a0      	LDI  R26,LOW(0)
00016f dfd7      	RCALL _MoveCursor
                 ; 0000 0021 StringLCD("Tiempo en Seg");            //Esto es lo que quiero imprimir
                +
000170 e0a4     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
000171 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
000172 dfb6      	RCALL _StringLCD
                 ; 0000 0022 while (1)
                 _0x22:
                 ; 0000 0023 {
                 ; 0000 0024 //Imprimir tiempo en el LCD
                 ; 0000 0025 // Imprime Cadena, numero formato sin signo, seg   **los espacios en %u significa que se borrara todo el numero
                 ; 0000 0026 sprintf(Cadena,"%u   ",seg);
000173 e0e0      	LDI  R30,LOW(_Cadena)
000174 e0f4      	LDI  R31,HIGH(_Cadena)
000175 93fa      	ST   -Y,R31
000176 93ea      	ST   -Y,R30
                +
000177 e1e2     +LDI R30 , LOW ( 2 * _0x0 + ( 14 ) )
000178 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 14 ) )
                 	__POINTW1FN _0x0,14
000179 93fa      	ST   -Y,R31
00017a 93ea      	ST   -Y,R30
00017b 2de3      	MOV  R30,R3
00017c 27ff      	CLR  R31
00017d 2766      	CLR  R22
00017e 2777      	CLR  R23
00017f d202      	RCALL __PUTPARD1
000180 e084      	LDI  R24,4
000181 d15f      	RCALL _sprintf
000182 9628      	ADIW R28,8
                 ; 0000 0027 MoveCursor(0,1);
000183 e0e0      	LDI  R30,LOW(0)
000184 93ea      	ST   -Y,R30
000185 e0a1      	LDI  R26,LOW(1)
000186 dfc0      	RCALL _MoveCursor
                 ; 0000 0028 StringLCDVar(Cadena);
000187 e0a0      	LDI  R26,LOW(_Cadena)
000188 e0b4      	LDI  R27,HIGH(_Cadena)
000189 dfad      	RCALL _StringLCDVar
                 ; 0000 0029 seg++;
00018a 9433      	INC  R3
                 ; 0000 002A delay_ms(1000);
00018b eea8      	LDI  R26,LOW(1000)
00018c e0b3      	LDI  R27,HIGH(1000)
00018d d1f9      	RCALL _delay_ms
                 ; 0000 002B }
00018e cfe4      	RJMP _0x22
                 ; 0000 002C 
                 ; 0000 002D }
                 _0x25:
00018f cfff      	RJMP _0x25
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
000190 d1c3      	RCALL __SAVELOCR6
000191 019d      	MOVW R18,R26
000192 815e      	LDD  R21,Y+6
000193 9612      	ADIW R26,2
000194 d1e5      	RCALL __GETW1P
000195 9730      	SBIW R30,0
000196 f0e1      	BREQ _0x2000016
000197 01d9      	MOVW R26,R18
000198 9614      	ADIW R26,4
000199 d1e0      	RCALL __GETW1P
00019a 018f      	MOVW R16,R30
00019b 9730      	SBIW R30,0
00019c f059      	BREQ _0x2000018
                +
00019d 3002     +CPI R16 , LOW ( 2 )
00019e e0e0     +LDI R30 , HIGH ( 2 )
00019f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0001a0 f060      	BRLO _0x2000019
0001a1 01f8      	MOVW R30,R16
0001a2 9731      	SBIW R30,1
0001a3 018f      	MOVW R16,R30
                +
0001a4 01d9     +MOVW R26 , R18
0001a5 9614     +ADIW R26 , 4
0001a6 93ed     +ST X + , R30
0001a7 93fc     +ST X , R31
                 	__PUTW1RNS 18,4
                 _0x2000018:
0001a8 01d9      	MOVW R26,R18
0001a9 9612      	ADIW R26,2
0001aa d186      	RCALL SUBOPT_0x1
0001ab 9731      	SBIW R30,1
0001ac 8350      	ST   Z,R21
                 _0x2000019:
0001ad 01d9      	MOVW R26,R18
0001ae d1cb      	RCALL __GETW1P
0001af 23ff      	TST  R31
0001b0 f00a      	BRMI _0x200001A
0001b1 d17f      	RCALL SUBOPT_0x1
                 _0x200001A:
0001b2 c005      	RJMP _0x200001B
                 _0x2000016:
0001b3 01d9      	MOVW R26,R18
0001b4 efef      	LDI  R30,LOW(65535)
0001b5 efff      	LDI  R31,HIGH(65535)
0001b6 93ed      	ST   X+,R30
0001b7 93fc      	ST   X,R31
                 _0x200001B:
0001b8 d1a2      	RCALL __LOADLOCR6
0001b9 9627      	ADIW R28,7
0001ba 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0001bb 93ba      	ST   -Y,R27
0001bc 93aa      	ST   -Y,R26
0001bd 9726      	SBIW R28,6
0001be d195      	RCALL __SAVELOCR6
0001bf e010      	LDI  R17,0
0001c0 85ac      	LDD  R26,Y+12
0001c1 85bd      	LDD  R27,Y+12+1
0001c2 e0e0      	LDI  R30,LOW(0)
0001c3 e0f0      	LDI  R31,HIGH(0)
0001c4 93ed      	ST   X+,R30
0001c5 93fc      	ST   X,R31
                 _0x200001C:
0001c6 89ea      	LDD  R30,Y+18
0001c7 89fb      	LDD  R31,Y+18+1
0001c8 9631      	ADIW R30,1
0001c9 8bea      	STD  Y+18,R30
0001ca 8bfb      	STD  Y+18+1,R31
0001cb 9731      	SBIW R30,1
0001cc 91e4      	LPM  R30,Z
0001cd 2f2e      	MOV  R18,R30
0001ce 30e0      	CPI  R30,0
0001cf f409      	BRNE PC+2
0001d0 c109      	RJMP _0x200001E
0001d1 2fe1      	MOV  R30,R17
0001d2 30e0      	CPI  R30,0
0001d3 f431      	BRNE _0x2000022
0001d4 3225      	CPI  R18,37
0001d5 f411      	BRNE _0x2000023
0001d6 e011      	LDI  R17,LOW(1)
0001d7 c001      	RJMP _0x2000024
                 _0x2000023:
0001d8 d15e      	RCALL SUBOPT_0x2
                 _0x2000024:
0001d9 c0ff      	RJMP _0x2000021
                 _0x2000022:
0001da 30e1      	CPI  R30,LOW(0x1)
0001db f4a1      	BRNE _0x2000025
0001dc 3225      	CPI  R18,37
0001dd f411      	BRNE _0x2000026
0001de d158      	RCALL SUBOPT_0x2
0001df c0f8      	RJMP _0x20000D2
                 _0x2000026:
0001e0 e012      	LDI  R17,LOW(2)
0001e1 e040      	LDI  R20,LOW(0)
0001e2 e000      	LDI  R16,LOW(0)
0001e3 322d      	CPI  R18,45
0001e4 f411      	BRNE _0x2000027
0001e5 e001      	LDI  R16,LOW(1)
0001e6 c0f2      	RJMP _0x2000021
                 _0x2000027:
0001e7 322b      	CPI  R18,43
0001e8 f411      	BRNE _0x2000028
0001e9 e24b      	LDI  R20,LOW(43)
0001ea c0ee      	RJMP _0x2000021
                 _0x2000028:
0001eb 3220      	CPI  R18,32
0001ec f411      	BRNE _0x2000029
0001ed e240      	LDI  R20,LOW(32)
0001ee c0ea      	RJMP _0x2000021
                 _0x2000029:
0001ef c002      	RJMP _0x200002A
                 _0x2000025:
0001f0 30e2      	CPI  R30,LOW(0x2)
0001f1 f439      	BRNE _0x200002B
                 _0x200002A:
0001f2 e050      	LDI  R21,LOW(0)
0001f3 e013      	LDI  R17,LOW(3)
0001f4 3320      	CPI  R18,48
0001f5 f411      	BRNE _0x200002C
0001f6 6800      	ORI  R16,LOW(128)
0001f7 c0e1      	RJMP _0x2000021
                 _0x200002C:
0001f8 c003      	RJMP _0x200002D
                 _0x200002B:
0001f9 30e3      	CPI  R30,LOW(0x3)
0001fa f009      	BREQ PC+2
0001fb c0dd      	RJMP _0x2000021
                 _0x200002D:
0001fc 3320      	CPI  R18,48
0001fd f010      	BRLO _0x2000030
0001fe 332a      	CPI  R18,58
0001ff f008      	BRLO _0x2000031
                 _0x2000030:
000200 c007      	RJMP _0x200002F
                 _0x2000031:
000201 e0aa      	LDI  R26,LOW(10)
000202 9f5a      	MUL  R21,R26
000203 2d50      	MOV  R21,R0
000204 2fe2      	MOV  R30,R18
000205 53e0      	SUBI R30,LOW(48)
000206 0f5e      	ADD  R21,R30
000207 c0d1      	RJMP _0x2000021
                 _0x200002F:
000208 2fe2      	MOV  R30,R18
000209 36e3      	CPI  R30,LOW(0x63)
00020a f439      	BRNE _0x2000035
00020b d132      	RCALL SUBOPT_0x3
00020c 89e8      	LDD  R30,Y+16
00020d 89f9      	LDD  R31,Y+16+1
00020e 81a4      	LDD  R26,Z+4
00020f 93aa      	ST   -Y,R26
000210 d133      	RCALL SUBOPT_0x4
000211 c0c6      	RJMP _0x2000036
                 _0x2000035:
000212 37e3      	CPI  R30,LOW(0x73)
000213 f429      	BRNE _0x2000038
000214 d129      	RCALL SUBOPT_0x3
000215 d134      	RCALL SUBOPT_0x5
000216 d0fb      	RCALL _strlen
000217 2f1e      	MOV  R17,R30
000218 c007      	RJMP _0x2000039
                 _0x2000038:
000219 37e0      	CPI  R30,LOW(0x70)
00021a f449      	BRNE _0x200003B
00021b d122      	RCALL SUBOPT_0x3
00021c d12d      	RCALL SUBOPT_0x5
00021d d100      	RCALL _strlenf
00021e 2f1e      	MOV  R17,R30
00021f 6008      	ORI  R16,LOW(8)
                 _0x2000039:
000220 6002      	ORI  R16,LOW(2)
000221 770f      	ANDI R16,LOW(127)
000222 e030      	LDI  R19,LOW(0)
000223 c038      	RJMP _0x200003C
                 _0x200003B:
000224 36e4      	CPI  R30,LOW(0x64)
000225 f011      	BREQ _0x200003F
000226 36e9      	CPI  R30,LOW(0x69)
000227 f411      	BRNE _0x2000040
                 _0x200003F:
000228 6004      	ORI  R16,LOW(4)
000229 c002      	RJMP _0x2000041
                 _0x2000040:
00022a 37e5      	CPI  R30,LOW(0x75)
00022b f431      	BRNE _0x2000042
                 _0x2000041:
00022c eee4      	LDI  R30,LOW(_tbl10_G100*2)
00022d e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
00022e 83ee      	STD  Y+6,R30
00022f 83ff      	STD  Y+6+1,R31
000230 e015      	LDI  R17,LOW(5)
000231 c00c      	RJMP _0x2000043
                 _0x2000042:
000232 35e8      	CPI  R30,LOW(0x58)
000233 f411      	BRNE _0x2000045
000234 6008      	ORI  R16,LOW(8)
000235 c003      	RJMP _0x2000046
                 _0x2000045:
000236 37e8      	CPI  R30,LOW(0x78)
000237 f009      	BREQ PC+2
000238 c09f      	RJMP _0x2000077
                 _0x2000046:
000239 eeee      	LDI  R30,LOW(_tbl16_G100*2)
00023a e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
00023b 83ee      	STD  Y+6,R30
00023c 83ff      	STD  Y+6+1,R31
00023d e014      	LDI  R17,LOW(4)
                 _0x2000043:
00023e ff02      	SBRS R16,2
00023f c015      	RJMP _0x2000048
000240 d0fd      	RCALL SUBOPT_0x3
000241 89a8      	LDD  R26,Y+16
000242 89b9      	LDD  R27,Y+16+1
000243 9614      	ADIW R26,4
000244 91ed      	LD   R30,X+
000245 91fd      	LD   R31,X+
000246 87ea      	STD  Y+10,R30
000247 87fb      	STD  Y+10+1,R31
000248 85ab      	LDD  R26,Y+11
000249 23aa      	TST  R26
00024a f422      	BRPL _0x2000049
00024b d12a      	RCALL __ANEGW1
00024c 87ea      	STD  Y+10,R30
00024d 87fb      	STD  Y+10+1,R31
00024e e24d      	LDI  R20,LOW(45)
                 _0x2000049:
00024f 3040      	CPI  R20,0
000250 f011      	BREQ _0x200004A
000251 5f1f      	SUBI R17,-LOW(1)
000252 c001      	RJMP _0x200004B
                 _0x200004A:
000253 7f0b      	ANDI R16,LOW(251)
                 _0x200004B:
000254 c007      	RJMP _0x200004C
                 _0x2000048:
000255 d0e8      	RCALL SUBOPT_0x3
000256 89a8      	LDD  R26,Y+16
000257 89b9      	LDD  R27,Y+16+1
000258 9614      	ADIW R26,4
000259 d120      	RCALL __GETW1P
00025a 87ea      	STD  Y+10,R30
00025b 87fb      	STD  Y+10+1,R31
                 _0x200004C:
                 _0x200003C:
00025c fd00      	SBRC R16,0
00025d c010      	RJMP _0x200004D
                 _0x200004E:
00025e 1715      	CP   R17,R21
00025f f470      	BRSH _0x2000050
000260 ff07      	SBRS R16,7
000261 c008      	RJMP _0x2000051
000262 ff02      	SBRS R16,2
000263 c004      	RJMP _0x2000052
000264 7f0b      	ANDI R16,LOW(251)
000265 2f24      	MOV  R18,R20
000266 5011      	SUBI R17,LOW(1)
000267 c001      	RJMP _0x2000053
                 _0x2000052:
000268 e320      	LDI  R18,LOW(48)
                 _0x2000053:
000269 c001      	RJMP _0x2000054
                 _0x2000051:
00026a e220      	LDI  R18,LOW(32)
                 _0x2000054:
00026b d0cb      	RCALL SUBOPT_0x2
00026c 5051      	SUBI R21,LOW(1)
00026d cff0      	RJMP _0x200004E
                 _0x2000050:
                 _0x200004D:
00026e 2f31      	MOV  R19,R17
00026f ff01      	SBRS R16,1
000270 c016      	RJMP _0x2000055
                 _0x2000056:
000271 3030      	CPI  R19,0
000272 f099      	BREQ _0x2000058
000273 ff03      	SBRS R16,3
000274 c006      	RJMP _0x2000059
000275 81ee      	LDD  R30,Y+6
000276 81ff      	LDD  R31,Y+6+1
000277 9125      	LPM  R18,Z+
000278 83ee      	STD  Y+6,R30
000279 83ff      	STD  Y+6+1,R31
00027a c005      	RJMP _0x200005A
                 _0x2000059:
00027b 81ae      	LDD  R26,Y+6
00027c 81bf      	LDD  R27,Y+6+1
00027d 912d      	LD   R18,X+
00027e 83ae      	STD  Y+6,R26
00027f 83bf      	STD  Y+6+1,R27
                 _0x200005A:
000280 d0b6      	RCALL SUBOPT_0x2
000281 3050      	CPI  R21,0
000282 f009      	BREQ _0x200005B
000283 5051      	SUBI R21,LOW(1)
                 _0x200005B:
000284 5031      	SUBI R19,LOW(1)
000285 cfeb      	RJMP _0x2000056
                 _0x2000058:
000286 c048      	RJMP _0x200005C
                 _0x2000055:
                 _0x200005E:
000287 e320      	LDI  R18,LOW(48)
000288 81ee      	LDD  R30,Y+6
000289 81ff      	LDD  R31,Y+6+1
00028a d0f3      	RCALL __GETW1PF
00028b 87e8      	STD  Y+8,R30
00028c 87f9      	STD  Y+8+1,R31
00028d 81ee      	LDD  R30,Y+6
00028e 81ff      	LDD  R31,Y+6+1
00028f 9632      	ADIW R30,2
000290 83ee      	STD  Y+6,R30
000291 83ff      	STD  Y+6+1,R31
                 _0x2000060:
000292 85e8      	LDD  R30,Y+8
000293 85f9      	LDD  R31,Y+8+1
000294 85aa      	LDD  R26,Y+10
000295 85bb      	LDD  R27,Y+10+1
000296 17ae      	CP   R26,R30
000297 07bf      	CPC  R27,R31
000298 f050      	BRLO _0x2000062
000299 5f2f      	SUBI R18,-LOW(1)
00029a 85a8      	LDD  R26,Y+8
00029b 85b9      	LDD  R27,Y+8+1
00029c 85ea      	LDD  R30,Y+10
00029d 85fb      	LDD  R31,Y+10+1
00029e 1bea      	SUB  R30,R26
00029f 0bfb      	SBC  R31,R27
0002a0 87ea      	STD  Y+10,R30
0002a1 87fb      	STD  Y+10+1,R31
0002a2 cfef      	RJMP _0x2000060
                 _0x2000062:
0002a3 332a      	CPI  R18,58
0002a4 f028      	BRLO _0x2000063
0002a5 ff03      	SBRS R16,3
0002a6 c002      	RJMP _0x2000064
0002a7 5f29      	SUBI R18,-LOW(7)
0002a8 c001      	RJMP _0x2000065
                 _0x2000064:
0002a9 5d29      	SUBI R18,-LOW(39)
                 _0x2000065:
                 _0x2000063:
0002aa fd04      	SBRC R16,4
0002ab c019      	RJMP _0x2000067
0002ac 3321      	CPI  R18,49
0002ad f420      	BRSH _0x2000069
0002ae 85a8      	LDD  R26,Y+8
0002af 85b9      	LDD  R27,Y+8+1
0002b0 9711      	SBIW R26,1
0002b1 f409      	BRNE _0x2000068
                 _0x2000069:
0002b2 c009      	RJMP _0x20000D3
                 _0x2000068:
0002b3 1753      	CP   R21,R19
0002b4 f010      	BRLO _0x200006D
0002b5 ff00      	SBRS R16,0
0002b6 c001      	RJMP _0x200006E
                 _0x200006D:
0002b7 c011      	RJMP _0x200006C
                 _0x200006E:
0002b8 e220      	LDI  R18,LOW(32)
0002b9 ff07      	SBRS R16,7
0002ba c00a      	RJMP _0x200006F
0002bb e320      	LDI  R18,LOW(48)
                 _0x20000D3:
0002bc 6100      	ORI  R16,LOW(16)
0002bd ff02      	SBRS R16,2
0002be c006      	RJMP _0x2000070
0002bf 7f0b      	ANDI R16,LOW(251)
0002c0 934a      	ST   -Y,R20
0002c1 d082      	RCALL SUBOPT_0x4
0002c2 3050      	CPI  R21,0
0002c3 f009      	BREQ _0x2000071
0002c4 5051      	SUBI R21,LOW(1)
                 _0x2000071:
                 _0x2000070:
                 _0x200006F:
                 _0x2000067:
0002c5 d071      	RCALL SUBOPT_0x2
0002c6 3050      	CPI  R21,0
0002c7 f009      	BREQ _0x2000072
0002c8 5051      	SUBI R21,LOW(1)
                 _0x2000072:
                 _0x200006C:
0002c9 5031      	SUBI R19,LOW(1)
0002ca 85a8      	LDD  R26,Y+8
0002cb 85b9      	LDD  R27,Y+8+1
0002cc 9712      	SBIW R26,2
0002cd f008      	BRLO _0x200005F
0002ce cfb8      	RJMP _0x200005E
                 _0x200005F:
                 _0x200005C:
0002cf ff00      	SBRS R16,0
0002d0 c007      	RJMP _0x2000073
                 _0x2000074:
0002d1 3050      	CPI  R21,0
0002d2 f029      	BREQ _0x2000076
0002d3 5051      	SUBI R21,LOW(1)
0002d4 e2e0      	LDI  R30,LOW(32)
0002d5 93ea      	ST   -Y,R30
0002d6 d06d      	RCALL SUBOPT_0x4
0002d7 cff9      	RJMP _0x2000074
                 _0x2000076:
                 _0x2000073:
                 _0x2000077:
                 _0x2000036:
                 _0x20000D2:
0002d8 e010      	LDI  R17,LOW(0)
                 _0x2000021:
0002d9 ceec      	RJMP _0x200001C
                 _0x200001E:
0002da 85ac      	LDD  R26,Y+12
0002db 85bd      	LDD  R27,Y+12+1
0002dc 91ed      	LD   R30,X+
0002dd 91fd      	LD   R31,X+
0002de d07c      	RCALL __LOADLOCR6
0002df 9664      	ADIW R28,20
0002e0 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0002e1 92ff      	PUSH R15
0002e2 2ef8      	MOV  R15,R24
0002e3 9726      	SBIW R28,6
0002e4 d06f      	RCALL __SAVELOCR6
0002e5 01fe      	MOVW R30,R28
0002e6 d087      	RCALL __ADDW1R15
                +
0002e7 8546     +LDD R20 , Z + 14
0002e8 8557     +LDD R21 , Z + 14 + 1
                 	__GETWRZ 20,21,14
0002e9 2e04      	MOV  R0,R20
0002ea 2a05      	OR   R0,R21
0002eb f419      	BRNE _0x2000078
0002ec efef      	LDI  R30,LOW(65535)
0002ed efff      	LDI  R31,HIGH(65535)
0002ee c01f      	RJMP _0x2060001
                 _0x2000078:
0002ef 01de      	MOVW R26,R28
0002f0 9618      	ADIW R26,8
0002f1 d080      	RCALL __ADDW2R15
0002f2 018d      	MOVW R16,R26
                +
0002f3 8748     +STD Y + 8 , R20
0002f4 8759     +STD Y + 8 + 1 , R21
                 	__PUTWSR 20,21,8
0002f5 e0e0      	LDI  R30,LOW(0)
0002f6 87ea      	STD  Y+10,R30
0002f7 87eb      	STD  Y+10+1,R30
0002f8 01de      	MOVW R26,R28
0002f9 961c      	ADIW R26,12
0002fa d077      	RCALL __ADDW2R15
0002fb 91ed      	LD   R30,X+
0002fc 91fd      	LD   R31,X+
0002fd 93fa      	ST   -Y,R31
0002fe 93ea      	ST   -Y,R30
0002ff 931a      	ST   -Y,R17
000300 930a      	ST   -Y,R16
000301 e9e0      	LDI  R30,LOW(_put_buff_G100)
000302 e0f1      	LDI  R31,HIGH(_put_buff_G100)
000303 93fa      	ST   -Y,R31
000304 93ea      	ST   -Y,R30
000305 01de      	MOVW R26,R28
000306 961c      	ADIW R26,12
000307 deb3      	RCALL __print_G100
000308 019f      	MOVW R18,R30
000309 85a8      	LDD  R26,Y+8
00030a 85b9      	LDD  R27,Y+8+1
00030b e0e0      	LDI  R30,LOW(0)
00030c 93ec      	ST   X,R30
00030d 01f9      	MOVW R30,R18
                 _0x2060001:
00030e d04c      	RCALL __LOADLOCR6
00030f 962c      	ADIW R28,12
000310 90ff      	POP  R15
000311 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000312 93ba      	ST   -Y,R27
000313 93aa      	ST   -Y,R26
000314 91a9          ld   r26,y+
000315 91b9          ld   r27,y+
000316 27ee          clr  r30
000317 27ff          clr  r31
                 strlen0:
000318 916d          ld   r22,x+
000319 2366          tst  r22
00031a f011          breq strlen1
00031b 9631          adiw r30,1
00031c cffb          rjmp strlen0
                 strlen1:
00031d 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00031e 93ba      	ST   -Y,R27
00031f 93aa      	ST   -Y,R26
000320 27aa          clr  r26
000321 27bb          clr  r27
000322 91e9          ld   r30,y+
000323 91f9          ld   r31,y+
                 strlenf0:
000324 9005      	lpm  r0,z+
000325 2000          tst  r0
000326 f011          breq strlenf1
000327 9611          adiw r26,1
000328 cffb          rjmp strlenf0
                 strlenf1:
000329 01fd          movw r30,r26
00032a 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _Cadena:
000400           	.BYTE 0x14
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x0:
00032b 2fe1      	MOV  R30,R17
00032c 5f1f      	SUBI R17,-1
00032d e0f0      	LDI  R31,0
00032e 0fe2      	ADD  R30,R18
00032f 1ff3      	ADC  R31,R19
000330 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1:
000331 91ed      	LD   R30,X+
000332 91fd      	LD   R31,X+
000333 9631      	ADIW R30,1
000334 93fe      	ST   -X,R31
000335 93ee      	ST   -X,R30
000336 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x2:
000337 932a      	ST   -Y,R18
000338 85ad      	LDD  R26,Y+13
000339 85be      	LDD  R27,Y+13+1
00033a 85ef      	LDD  R30,Y+15
00033b 89f8      	LDD  R31,Y+15+1
00033c 9509      	ICALL
00033d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x3:
00033e 89e8      	LDD  R30,Y+16
00033f 89f9      	LDD  R31,Y+16+1
000340 9734      	SBIW R30,4
000341 8be8      	STD  Y+16,R30
000342 8bf9      	STD  Y+16+1,R31
000343 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x4:
000344 85ad      	LDD  R26,Y+13
000345 85be      	LDD  R27,Y+13+1
000346 85ef      	LDD  R30,Y+15
000347 89f8      	LDD  R31,Y+15+1
000348 9509      	ICALL
000349 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x5:
00034a 89a8      	LDD  R26,Y+16
00034b 89b9      	LDD  R27,Y+16+1
00034c 9614      	ADIW R26,4
00034d 91ed      	LD   R30,X+
00034e 91fd      	LD   R31,X+
00034f 83ee      	STD  Y+6,R30
000350 83ff      	STD  Y+6+1,R31
000351 81ae      	LDD  R26,Y+6
000352 81bf      	LDD  R27,Y+6+1
000353 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
000354 935a      	ST   -Y,R21
                 __SAVELOCR5:
000355 934a      	ST   -Y,R20
                 __SAVELOCR4:
000356 933a      	ST   -Y,R19
                 __SAVELOCR3:
000357 932a      	ST   -Y,R18
                 __SAVELOCR2:
000358 931a      	ST   -Y,R17
000359 930a      	ST   -Y,R16
00035a 9508      	RET
                 
                 __LOADLOCR6:
00035b 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00035c 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00035d 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00035e 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00035f 8119      	LDD  R17,Y+1
000360 8108      	LD   R16,Y
000361 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
000362 93af      	PUSH R26
000363 93bf      	PUSH R27
000364 01db      	MOVW R26,R22
000365 0fac      	ADD  R26,R28
000366 1fbd      	ADC  R27,R29
                 __INITLOC0:
000367 9005      	LPM  R0,Z+
000368 920d      	ST   X+,R0
000369 958a      	DEC  R24
00036a f7e1      	BRNE __INITLOC0
00036b 91bf      	POP  R27
00036c 91af      	POP  R26
00036d 9508      	RET
                 
                 __ADDW1R15:
00036e 2400      	CLR  R0
00036f 0def      	ADD  R30,R15
000370 1df0      	ADC  R31,R0
000371 9508      	RET
                 
                 __ADDW2R15:
000372 2400      	CLR  R0
000373 0daf      	ADD  R26,R15
000374 1db0      	ADC  R27,R0
000375 9508      	RET
                 
                 __ANEGW1:
000376 95f1      	NEG  R31
000377 95e1      	NEG  R30
000378 40f0      	SBCI R31,0
000379 9508      	RET
                 
                 __GETW1P:
00037a 91ed      	LD   R30,X+
00037b 91fc      	LD   R31,X
00037c 9711      	SBIW R26,1
00037d 9508      	RET
                 
                 __GETW1PF:
00037e 9005      	LPM  R0,Z+
00037f 91f4      	LPM  R31,Z
000380 2de0      	MOV  R30,R0
000381 9508      	RET
                 
                 __PUTPARD1:
000382 937a      	ST   -Y,R23
000383 936a      	ST   -Y,R22
000384 93fa      	ST   -Y,R31
000385 93ea      	ST   -Y,R30
000386 9508      	RET
                 
                 _delay_ms:
000387 9610      	adiw r26,0
000388 f039      	breq __delay_ms1
                 __delay_ms0:
000389 95a8      	wdr
                +
00038a ea80     +LDI R24 , LOW ( 0xFA0 )
00038b e09f     +LDI R25 , HIGH ( 0xFA0 )
                +__DELAY_USW_LOOP :
00038c 9701     +SBIW R24 , 1
00038d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA0
00038e 9711      	sbiw r26,1
00038f f7c9      	brne __delay_ms0
                 __delay_ms1:
000390 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega2560 register use summary:
r0 :  17 r1 :   1 r2 :   0 r3 :   2 r4 :   2 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   5 
r16:  46 r17:  50 r18:  40 r19:  10 r20:  12 r21:  22 r22:   8 r23:   3 
r24:  15 r25:   3 r26: 103 r27:  38 r28:  17 r29:   2 r30: 148 r31:  69 
x  :  29 y  : 137 z  :  20 
Registers used: 24 out of 35 (68.6%)

ATmega2560 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   7 add   :   8 
adiw  :  24 and   :   0 andi  :   7 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  15 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   7 
brlt  :   0 brmi  :   1 brne  :  30 brpl  :   1 brsh  :   3 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   6 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  12 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   3 cpc   :   5 cpi   :  36 cpse  :   0 dec   :   2 des   :   0 
eicall:   0 eijmp :   0 elpm  :   0 eor   :   0 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   2 ijmp  :   0 in    :   0 inc   :   1 jmp   :  58 
ld    :  25 ldd   :  62 ldi   :  92 lds   :   0 lpm   :  19 lsl   :   0 
lsr   :   0 mov   :  33 movw  :  25 mul   :   1 muls  :   0 mulsu :   0 
neg   :   2 nop   :   0 or    :   1 ori   :   6 out   :   8 pop   :   3 
push  :   3 rcall :  63 ret   :  27 reti  :   0 rjmp  :  68 rol   :   0 
ror   :   0 sbc   :   1 sbci  :   1 sbi   :  12 sbic  :   0 sbis  :   0 
sbiw  :  18 sbr   :   0 sbrc  :   2 sbrs  :  14 sec   :   0 seh   :   0 
sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   0 sev   :   0 
sez   :   0 sleep :   0 spm   :   0 st    :  54 std   :  30 sts   :   2 
sub   :   1 subi  :  19 swap  :   1 tst   :   4 wdr   :   1 
Instructions used: 50 out of 119 (42.0%)

ATmega2560 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000722   1766     60   1826  262144   0.7%
[.dseg] 0x000200 0x000414      0     20     20    8192   0.2%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 3 warnings
