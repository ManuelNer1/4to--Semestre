;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0

	.DSEG
;void main(void)
; 0000 0014 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0015 //Creo un pull-up mis entradas de PC0 a PC3
; 0000 0016 
; 0000 0017 PORTC = 0x0F;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0018 
; 0000 0019 //Salidas en PD0 a PD7
; 0000 001A 
; 0000 001B DDRA = 0xFF;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 001C 
; 0000 001D while (1)
;PCODE: $00000012 VOL: 0
; 0000 001E {
; 0000 001F /* Como salida de mi puerto D es dependiento de la entrada
; 0000 0020 es decir si tengo un 3, tomara la posicion 3 de mi vector
; 0000 0021 para desplegarla en el display de 7 segmentos   */
; 0000 0022 
; 0000 0023 PORTA = SieteSeg[seg];
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0024 
; 0000 0025 //Si mi valor del puerto PC0 != 0 no va a contar
; 0000 0026 if (PINC.0 == 0)
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0027 //se le suma a seg 1
; 0000 0028 seg++;
;PCODE: $0000001B VOL: 0
; 0000 0029 
; 0000 002A //Si Seg = 10 se reiniciara seg a 0
; 0000 002B if (seg == 10)
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 002C seg = 0;
;PCODE: $00000020 VOL: 0
; 0000 002D delay_ms(1000);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 002E }
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 002F }
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
