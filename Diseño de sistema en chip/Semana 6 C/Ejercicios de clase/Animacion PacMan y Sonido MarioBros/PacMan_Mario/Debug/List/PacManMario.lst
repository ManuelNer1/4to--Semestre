
AVRASM ver. 2.1.30  C:\Users\ManuelNeri\Desktop\PacMan_Mario\PacMan_Mario\Debug\List\PacManMario.asm Mon May 10 10:29:34 2021

                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega328P
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: Off
                 ;Smart register allocation: Off
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 02b8 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0405 	JMP  _nota
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 _MarioBros:
000034 0294
000035 0294
000036 0001
000037 0294      	.DB  0x94,0x2,0x94,0x2,0x1,0x0,0x94,0x2
000038 0001
000039 020c
00003a 0294
00003b 0001      	.DB  0x1,0x0,0xC,0x2,0x94,0x2,0x1,0x0
00003c 030e
00003d 0001
00003e 0001
00003f 0001      	.DB  0xE,0x3,0x1,0x0,0x1,0x0,0x1,0x0
000040 0187
000041 0001
000042 0001
000043 0001      	.DB  0x87,0x1,0x1,0x0,0x1,0x0,0x1,0x0
000044 020c
000045 0001
000046 0001
000047 0187      	.DB  0xC,0x2,0x1,0x0,0x1,0x0,0x87,0x1
000048 0001
000049 0001
00004a 014a
00004b 0001      	.DB  0x1,0x0,0x1,0x0,0x4A,0x1,0x1,0x0
00004c 0001
00004d 01b8
00004e 0001
00004f 01ee      	.DB  0x1,0x0,0xB8,0x1,0x1,0x0,0xEE,0x1
000050 0001
000051 01d3
000052 01b8
000053 0001      	.DB  0x1,0x0,0xD3,0x1,0xB8,0x1,0x1,0x0
000054 0187
000055 0294
000056 0001
000057 030e      	.DB  0x87,0x1,0x94,0x2,0x1,0x0,0xE,0x3
000058 0370
000059 0001
00005a 02ba
00005b 030e      	.DB  0x70,0x3,0x1,0x0,0xBA,0x2,0xE,0x3
00005c 0001
00005d 0294
00005e 0001
00005f 020c      	.DB  0x1,0x0,0x94,0x2,0x1,0x0,0xC,0x2
000060 024c
000061 01ee
000062 0001
000063 0001      	.DB  0x4C,0x2,0xEE,0x1,0x1,0x0,0x1,0x0
000064 020c
000065 0001
000066 0001
000067 0187      	.DB  0xC,0x2,0x1,0x0,0x1,0x0,0x87,0x1
000068 0001
000069 0001
00006a 014a
00006b 0001      	.DB  0x1,0x0,0x1,0x0,0x4A,0x1,0x1,0x0
00006c 0001
00006d 01b8
00006e 0001
00006f 01ee      	.DB  0x1,0x0,0xB8,0x1,0x1,0x0,0xEE,0x1
000070 0001
000071 01d3
000072 01b8
000073 0001      	.DB  0x1,0x0,0xD3,0x1,0xB8,0x1,0x1,0x0
000074 0187
000075 0294
000076 0001
000077 030e      	.DB  0x87,0x1,0x94,0x2,0x1,0x0,0xE,0x3
000078 0370
000079 0001
00007a 02ba
00007b 030e      	.DB  0x70,0x3,0x1,0x0,0xBA,0x2,0xE,0x3
00007c 0001
00007d 0294
00007e 0001
00007f 020c      	.DB  0x1,0x0,0x94,0x2,0x1,0x0,0xC,0x2
000080 024c
000081 01ee
000082 0001
000083 0001      	.DB  0x4C,0x2,0xEE,0x1,0x1,0x0,0x1,0x0
000084 0001
000085 0001
000086 030e
000087 02e4      	.DB  0x1,0x0,0x1,0x0,0xE,0x3,0xE4,0x2
000088 02ba
000089 0270
00008a 0001
00008b 0294      	.DB  0xBA,0x2,0x70,0x2,0x1,0x0,0x94,0x2
00008c 0001
00008d 01a0
00008e 01b8
00008f 020c      	.DB  0x1,0x0,0xA0,0x1,0xB8,0x1,0xC,0x2
000090 0001
000091 01b8
000092 020c
000093 024c      	.DB  0x1,0x0,0xB8,0x1,0xC,0x2,0x4C,0x2
000094 0001
000095 0001
000096 030e
000097 02e4      	.DB  0x1,0x0,0x1,0x0,0xE,0x3,0xE4,0x2
000098 02ba
000099 0270
00009a 0001
00009b 0294      	.DB  0xBA,0x2,0x70,0x2,0x1,0x0,0x94,0x2
00009c 0001
00009d 0418
00009e 0001
00009f 0418      	.DB  0x1,0x0,0x18,0x4,0x1,0x0,0x18,0x4
0000a0 0418
0000a1 0001
0000a2 0001
0000a3 0001      	.DB  0x18,0x4,0x1,0x0,0x1,0x0,0x1,0x0
0000a4 0001
0000a5 0001
0000a6 030e
0000a7 02e4      	.DB  0x1,0x0,0x1,0x0,0xE,0x3,0xE4,0x2
0000a8 02ba
0000a9 0270
0000aa 0001
0000ab 0294      	.DB  0xBA,0x2,0x70,0x2,0x1,0x0,0x94,0x2
0000ac 0001
0000ad 01a0
0000ae 01b8
0000af 020c      	.DB  0x1,0x0,0xA0,0x1,0xB8,0x1,0xC,0x2
0000b0 0001
0000b1 01b8
0000b2 020c
0000b3 024c      	.DB  0x1,0x0,0xB8,0x1,0xC,0x2,0x4C,0x2
0000b4 0001
0000b5 0001
0000b6 0270
0000b7 0001      	.DB  0x1,0x0,0x1,0x0,0x70,0x2,0x1,0x0
0000b8 0001
0000b9 024c
0000ba 0001
0000bb 0001      	.DB  0x1,0x0,0x4C,0x2,0x1,0x0,0x1,0x0
0000bc 020c
0000bd 0001
0000be 0001
0000bf 0001      	.DB  0xC,0x2,0x1,0x0,0x1,0x0,0x1,0x0
0000c0 0001
0000c1 0001
0000c2 0001
0000c3 0001      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x1,0x0
0000c4 0001
0000c5 0001
0000c6 030e
0000c7 02e4      	.DB  0x1,0x0,0x1,0x0,0xE,0x3,0xE4,0x2
0000c8 02ba
0000c9 0270
0000ca 0001
0000cb 0294      	.DB  0xBA,0x2,0x70,0x2,0x1,0x0,0x94,0x2
0000cc 0001
0000cd 01a0
0000ce 01b8
0000cf 020c      	.DB  0x1,0x0,0xA0,0x1,0xB8,0x1,0xC,0x2
0000d0 0001
0000d1 01b8
0000d2 020c
0000d3 024c      	.DB  0x1,0x0,0xB8,0x1,0xC,0x2,0x4C,0x2
0000d4 0001
0000d5 0001
0000d6 030e
0000d7 02e4      	.DB  0x1,0x0,0x1,0x0,0xE,0x3,0xE4,0x2
0000d8 02ba
0000d9 0270
0000da 0001
0000db 0294      	.DB  0xBA,0x2,0x70,0x2,0x1,0x0,0x94,0x2
0000dc 0001
0000dd 0418
0000de 0001
0000df 0418      	.DB  0x1,0x0,0x18,0x4,0x1,0x0,0x18,0x4
0000e0 0418
0000e1 0001
0000e2 0001
0000e3 0001      	.DB  0x18,0x4,0x1,0x0,0x1,0x0,0x1,0x0
0000e4 0001
0000e5 0001
0000e6 030e
0000e7 02e4      	.DB  0x1,0x0,0x1,0x0,0xE,0x3,0xE4,0x2
0000e8 02ba
0000e9 0270
0000ea 0001
0000eb 0294      	.DB  0xBA,0x2,0x70,0x2,0x1,0x0,0x94,0x2
0000ec 0001
0000ed 01a0
0000ee 01b8
0000ef 020c      	.DB  0x1,0x0,0xA0,0x1,0xB8,0x1,0xC,0x2
0000f0 0001
0000f1 01b8
0000f2 020c
0000f3 024c      	.DB  0x1,0x0,0xB8,0x1,0xC,0x2,0x4C,0x2
0000f4 0001
0000f5 0001
0000f6 0270
0000f7 0001      	.DB  0x1,0x0,0x1,0x0,0x70,0x2,0x1,0x0
0000f8 0001
0000f9 024c
0000fa 0001
0000fb 0001      	.DB  0x1,0x0,0x4C,0x2,0x1,0x0,0x1,0x0
0000fc 020c
0000fd 0001
0000fe 0001
0000ff 0001      	.DB  0xC,0x2,0x1,0x0,0x1,0x0,0x1,0x0
000100 0001
000101 0001
000102 0001
000103 0001      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x1,0x0
000104 020c
000105 020c
000106 0001
000107 020c      	.DB  0xC,0x2,0xC,0x2,0x1,0x0,0xC,0x2
000108 0001
000109 020c
00010a 024c
00010b 0001      	.DB  0x1,0x0,0xC,0x2,0x4C,0x2,0x1,0x0
00010c 0294
00010d 020c
00010e 0001
00010f 01b8      	.DB  0x94,0x2,0xC,0x2,0x1,0x0,0xB8,0x1
000110 0187
000111 0001
000112 0001
000113 0001      	.DB  0x87,0x1,0x1,0x0,0x1,0x0,0x1,0x0
000114 020c
000115 020c
000116 0001
000117 020c      	.DB  0xC,0x2,0xC,0x2,0x1,0x0,0xC,0x2
000118 0001
000119 020c
00011a 024c
00011b 0001      	.DB  0x1,0x0,0xC,0x2,0x4C,0x2,0x1,0x0
00011c 0001
00011d 0001
00011e 0001
00011f 0001      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x1,0x0
000120 0001
000121 0001
000122 0001
000123 020c      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0xC,0x2
000124 020c
000125 0001
000126 020c
000127 0001      	.DB  0xC,0x2,0x1,0x0,0xC,0x2,0x1,0x0
000128 020c
000129 024c
00012a 0001
00012b 0294      	.DB  0xC,0x2,0x4C,0x2,0x1,0x0,0x94,0x2
00012c 020c
00012d 0001
00012e 01b8
00012f 0187      	.DB  0xC,0x2,0x1,0x0,0xB8,0x1,0x87,0x1
000130 0001
000131 0001
000132 0001
000133 0294      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x94,0x2
000134 0294
000135 0001
000136 0294
000137 0001      	.DB  0x94,0x2,0x1,0x0,0x94,0x2,0x1,0x0
000138 020c
000139 0294
00013a 0001
00013b 030e      	.DB  0xC,0x2,0x94,0x2,0x1,0x0,0xE,0x3
00013c 0001
00013d 0001
00013e 0001
00013f 0187      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x87,0x1
000140 0001
000141 0001
000142 0001
000143 020c      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0xC,0x2
000144 0001
000145 0001
000146 0187
000147 0001      	.DB  0x1,0x0,0x1,0x0,0x87,0x1,0x1,0x0
000148 0001
000149 014a
00014a 0001
00014b 0001      	.DB  0x1,0x0,0x4A,0x1,0x1,0x0,0x1,0x0
00014c 01b8
00014d 0001
00014e 01ee
00014f 0001      	.DB  0xB8,0x1,0x1,0x0,0xEE,0x1,0x1,0x0
000150 01d3
000151 01b8
000152 0001
000153 0187      	.DB  0xD3,0x1,0xB8,0x1,0x1,0x0,0x87,0x1
000154 0294
000155 0001
000156 030e
000157 0370      	.DB  0x94,0x2,0x1,0x0,0xE,0x3,0x70,0x3
000158 0001
000159 02ba
00015a 030e
00015b 0001      	.DB  0x1,0x0,0xBA,0x2,0xE,0x3,0x1,0x0
00015c 0294
00015d 0001
00015e 020c
00015f 024c      	.DB  0x94,0x2,0x1,0x0,0xC,0x2,0x4C,0x2
000160 01ee
000161 0001
000162 0001
000163 020c      	.DB  0xEE,0x1,0x1,0x0,0x1,0x0,0xC,0x2
000164 0001
000165 0001
000166 0187
000167 0001      	.DB  0x1,0x0,0x1,0x0,0x87,0x1,0x1,0x0
000168 0001
000169 014a
00016a 0001
00016b 0001      	.DB  0x1,0x0,0x4A,0x1,0x1,0x0,0x1,0x0
00016c 01b8
00016d 0001
00016e 01ee
00016f 0001      	.DB  0xB8,0x1,0x1,0x0,0xEE,0x1,0x1,0x0
000170 01d3
000171 01b8
000172 0001
000173 0187      	.DB  0xD3,0x1,0xB8,0x1,0x1,0x0,0x87,0x1
000174 0294
000175 0001
000176 030e
000177 0370      	.DB  0x94,0x2,0x1,0x0,0xE,0x3,0x70,0x3
000178 0001
000179 02ba
00017a 030e
00017b 0001      	.DB  0x1,0x0,0xBA,0x2,0xE,0x3,0x1,0x0
00017c 0294
00017d 0001
00017e 020c
00017f 024c      	.DB  0x94,0x2,0x1,0x0,0xC,0x2,0x4C,0x2
000180 01ee
000181 0001
000182 0001
000183 0294      	.DB  0xEE,0x1,0x1,0x0,0x1,0x0,0x94,0x2
000184 020c
000185 0001
000186 0187
000187 0001      	.DB  0xC,0x2,0x1,0x0,0x87,0x1,0x1,0x0
000188 0001
000189 01a0
00018a 0001
00018b 01b8      	.DB  0x1,0x0,0xA0,0x1,0x1,0x0,0xB8,0x1
00018c 02ba
00018d 0001
00018e 02ba
00018f 01b8      	.DB  0xBA,0x2,0x1,0x0,0xBA,0x2,0xB8,0x1
000190 0001
000191 0001
000192 0001
000193 01ee      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0xEE,0x1
000194 0370
000195 0001
000196 0370
000197 0370      	.DB  0x70,0x3,0x1,0x0,0x70,0x3,0x70,0x3
000198 030e
000199 0001
00019a 02ba
00019b 0294      	.DB  0xE,0x3,0x1,0x0,0xBA,0x2,0x94,0x2
00019c 020c
00019d 0001
00019e 01b8
00019f 0187      	.DB  0xC,0x2,0x1,0x0,0xB8,0x1,0x87,0x1
0001a0 0001
0001a1 0001
0001a2 0001
0001a3 0294      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x94,0x2
0001a4 020c
0001a5 0001
0001a6 0187
0001a7 0001      	.DB  0xC,0x2,0x1,0x0,0x87,0x1,0x1,0x0
0001a8 0001
0001a9 01a0
0001aa 0001
0001ab 01b8      	.DB  0x1,0x0,0xA0,0x1,0x1,0x0,0xB8,0x1
0001ac 02ba
0001ad 0001
0001ae 02ba
0001af 01b8      	.DB  0xBA,0x2,0x1,0x0,0xBA,0x2,0xB8,0x1
0001b0 0001
0001b1 0001
0001b2 0001
0001b3 01ee      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0xEE,0x1
0001b4 02ba
0001b5 0001
0001b6 02ba
0001b7 02ba      	.DB  0xBA,0x2,0x1,0x0,0xBA,0x2,0xBA,0x2
0001b8 0294
0001b9 0001
0001ba 024c
0001bb 0187      	.DB  0x94,0x2,0x1,0x0,0x4C,0x2,0x87,0x1
0001bc 014a
0001bd 0001
0001be 014a
0001bf 0106      	.DB  0x4A,0x1,0x1,0x0,0x4A,0x1,0x6,0x1
0001c0 0001
0001c1 0001
0001c2 0001
0001c3 0294      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x94,0x2
0001c4 020c
0001c5 0001
0001c6 0187
0001c7 0001      	.DB  0xC,0x2,0x1,0x0,0x87,0x1,0x1,0x0
0001c8 0001
0001c9 01a0
0001ca 0001
0001cb 01b8      	.DB  0x1,0x0,0xA0,0x1,0x1,0x0,0xB8,0x1
0001cc 02ba
0001cd 0001
0001ce 02ba
0001cf 01b8      	.DB  0xBA,0x2,0x1,0x0,0xBA,0x2,0xB8,0x1
0001d0 0001
0001d1 0001
0001d2 0001
0001d3 01ee      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0xEE,0x1
0001d4 0370
0001d5 0001
0001d6 0370
0001d7 0370      	.DB  0x70,0x3,0x1,0x0,0x70,0x3,0x70,0x3
0001d8 030e
0001d9 0001
0001da 02ba
0001db 0294      	.DB  0xE,0x3,0x1,0x0,0xBA,0x2,0x94,0x2
0001dc 020c
0001dd 0001
0001de 01b8
0001df 0187      	.DB  0xC,0x2,0x1,0x0,0xB8,0x1,0x87,0x1
0001e0 0001
0001e1 0001
0001e2 0001
0001e3 0294      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x94,0x2
0001e4 020c
0001e5 0001
0001e6 0187
0001e7 0001      	.DB  0xC,0x2,0x1,0x0,0x87,0x1,0x1,0x0
0001e8 0001
0001e9 01a0
0001ea 0001
0001eb 01b8      	.DB  0x1,0x0,0xA0,0x1,0x1,0x0,0xB8,0x1
0001ec 02ba
0001ed 0001
0001ee 02ba
0001ef 01b8      	.DB  0xBA,0x2,0x1,0x0,0xBA,0x2,0xB8,0x1
0001f0 0001
0001f1 0001
0001f2 0001
0001f3 01ee      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0xEE,0x1
0001f4 02ba
0001f5 0001
0001f6 02ba
0001f7 02ba      	.DB  0xBA,0x2,0x1,0x0,0xBA,0x2,0xBA,0x2
0001f8 0294
0001f9 0001
0001fa 024c
0001fb 0187      	.DB  0x94,0x2,0x1,0x0,0x4C,0x2,0x87,0x1
0001fc 014a
0001fd 0001
0001fe 014a
0001ff 0106      	.DB  0x4A,0x1,0x1,0x0,0x4A,0x1,0x6,0x1
000200 0001
000201 0001
000202 0001
000203 020c      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0xC,0x2
000204 020c
000205 0001
000206 020c
000207 0001      	.DB  0xC,0x2,0x1,0x0,0xC,0x2,0x1,0x0
000208 020c
000209 024c
00020a 0001
00020b 0294      	.DB  0xC,0x2,0x4C,0x2,0x1,0x0,0x94,0x2
00020c 020c
00020d 0001
00020e 01b8
00020f 0187      	.DB  0xC,0x2,0x1,0x0,0xB8,0x1,0x87,0x1
000210 0001
000211 0001
000212 0001
000213 020c      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0xC,0x2
000214 020c
000215 0001
000216 020c
000217 0001      	.DB  0xC,0x2,0x1,0x0,0xC,0x2,0x1,0x0
000218 020c
000219 024c
00021a 0001
00021b 0001      	.DB  0xC,0x2,0x4C,0x2,0x1,0x0,0x1,0x0
00021c 0001
00021d 0001
00021e 0001
00021f 0001      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x1,0x0
000220 0001
000221 0001
000222 020c
000223 020c      	.DB  0x1,0x0,0x1,0x0,0xC,0x2,0xC,0x2
000224 0001
000225 020c
000226 0001
000227 020c      	.DB  0x1,0x0,0xC,0x2,0x1,0x0,0xC,0x2
000228 024c
000229 0001
00022a 0294
00022b 020c      	.DB  0x4C,0x2,0x1,0x0,0x94,0x2,0xC,0x2
00022c 0001
00022d 01b8
00022e 0187
00022f 0001      	.DB  0x1,0x0,0xB8,0x1,0x87,0x1,0x1,0x0
000230 0001
000231 0001
000232 0294
000233 0294      	.DB  0x1,0x0,0x1,0x0,0x94,0x2,0x94,0x2
000234 0001
000235 0294
000236 0001
000237 020c      	.DB  0x1,0x0,0x94,0x2,0x1,0x0,0xC,0x2
000238 0294
000239 0001
00023a 030e
00023b 0001      	.DB  0x94,0x2,0x1,0x0,0xE,0x3,0x1,0x0
00023c 0001
00023d 0001
00023e 0187
00023f 0001      	.DB  0x1,0x0,0x1,0x0,0x87,0x1,0x1,0x0
000240 0001
000241 0001
000242 0294
000243 020c      	.DB  0x1,0x0,0x1,0x0,0x94,0x2,0xC,0x2
000244 0001
000245 0187
000246 0001
000247 0001      	.DB  0x1,0x0,0x87,0x1,0x1,0x0,0x1,0x0
000248 01a0
000249 0001
00024a 01b8
00024b 02ba      	.DB  0xA0,0x1,0x1,0x0,0xB8,0x1,0xBA,0x2
00024c 0001
00024d 02ba
00024e 01b8
00024f 0001      	.DB  0x1,0x0,0xBA,0x2,0xB8,0x1,0x1,0x0
000250 0001
000251 0001
000252 01ee
000253 0370      	.DB  0x1,0x0,0x1,0x0,0xEE,0x1,0x70,0x3
000254 0001
000255 0370
000256 0370
000257 030e      	.DB  0x1,0x0,0x70,0x3,0x70,0x3,0xE,0x3
000258 0001
000259 02ba
00025a 0294
00025b 020c      	.DB  0x1,0x0,0xBA,0x2,0x94,0x2,0xC,0x2
00025c 0001
00025d 01b8
00025e 0187
00025f 0001      	.DB  0x1,0x0,0xB8,0x1,0x87,0x1,0x1,0x0
000260 0001
000261 0001
000262 0294
000263 020c      	.DB  0x1,0x0,0x1,0x0,0x94,0x2,0xC,0x2
000264 0001
000265 0187
000266 0001
000267 0001      	.DB  0x1,0x0,0x87,0x1,0x1,0x0,0x1,0x0
000268 01a0
000269 0001
00026a 01b8
00026b 02ba      	.DB  0xA0,0x1,0x1,0x0,0xB8,0x1,0xBA,0x2
00026c 0001
00026d 02ba
00026e 01b8
00026f 0001      	.DB  0x1,0x0,0xBA,0x2,0xB8,0x1,0x1,0x0
000270 0001
000271 0001
000272 01ee
000273 02ba      	.DB  0x1,0x0,0x1,0x0,0xEE,0x1,0xBA,0x2
000274 0001
000275 02ba
000276 02ba
000277 0294      	.DB  0x1,0x0,0xBA,0x2,0xBA,0x2,0x94,0x2
000278 0001
000279 024c
00027a 0187
00027b 014a      	.DB  0x1,0x0,0x4C,0x2,0x87,0x1,0x4A,0x1
00027c 0001
00027d 014a
00027e 0106
00027f 0001      	.DB  0x1,0x0,0x4A,0x1,0x6,0x1,0x1,0x0
000280 0001
000281 0001
000282 0000      	.DB  0x1,0x0,0x1,0x0,0x0,0x0
                 _tbl10_G100:
000283 2710
000284 03e8
000285 0064
000286 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000287 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000288 1000
000289 0100
00028a 0010
00028b 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x3:
00028c 0303
00028d 0203
00028e 0c02
00028f 0800      	.DB  0x3,0x3,0x3,0x2,0x2,0xC,0x0,0x8
000290 0100
000291 0600      	.DB  0x0,0x1,0x0,0x6
                 _0x28:
000292 1d0e
000293 1c1e
000294 1f1e
C:\Users\ManuelNeri\Desktop\PacMan_Mario\PacMan_Mario\Debug\List\PacManMario.asm(1285): warning: .cseg .db misalignment - padding zero byte
000295 000e      	.DB  0xE,0x1D,0x1E,0x1C,0x1E,0x1F,0xE
                 _0x29:
000296 1d0e
000297 1e1f
000298 1f1f
C:\Users\ManuelNeri\Desktop\PacMan_Mario\PacMan_Mario\Debug\List\PacManMario.asm(1287): warning: .cseg .db misalignment - padding zero byte
000299 000e      	.DB  0xE,0x1D,0x1F,0x1E,0x1F,0x1F,0xE
                 _0x2A:
00029a 170e
00029b 070f
00029c 1f0f
C:\Users\ManuelNeri\Desktop\PacMan_Mario\PacMan_Mario\Debug\List\PacManMario.asm(1289): warning: .cseg .db misalignment - padding zero byte
00029d 000e      	.DB  0xE,0x17,0xF,0x7,0xF,0x1F,0xE
                 _0x2B:
00029e 170e
00029f 0f1f
0002a0 1f1f
C:\Users\ManuelNeri\Desktop\PacMan_Mario\PacMan_Mario\Debug\List\PacManMario.asm(1291): warning: .cseg .db misalignment - padding zero byte
0002a1 000e      	.DB  0xE,0x17,0x1F,0xF,0x1F,0x1F,0xE
                 _0x0:
0002a2 6548
0002a3 6c6c
0002a4 006f
0002a5 724d      	.DB  0x48,0x65,0x6C,0x6C,0x6F,0x0,0x4D,0x72
0002a6 202e
0002a7 6150
0002a8 4d63
0002a9 6e61      	.DB  0x2E,0x20,0x50,0x61,0x63,0x4D,0x61,0x6E
C:\Users\ManuelNeri\Desktop\PacMan_Mario\PacMan_Mario\Debug\List\PacManMario.asm(1295): warning: .cseg .db misalignment - padding zero byte
0002aa 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0002ab 0007      	.DW  0x07
0002ac 0303      	.DW  _PacMan1
0002ad 0524      	.DW  _0x28*2
                 
0002ae 0007      	.DW  0x07
0002af 030b      	.DW  _PacMan2
0002b0 052c      	.DW  _0x29*2
                 
0002b1 0007      	.DW  0x07
0002b2 0313      	.DW  _PacMan3
0002b3 0534      	.DW  _0x2A*2
                 
0002b4 0007      	.DW  0x07
0002b5 031b      	.DW  _PacMan4
0002b6 053c      	.DW  _0x2B*2
                 
                 _0xFFFFFFFF:
0002b7 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0002b8 94f8      	CLI
0002b9 27ee      	CLR  R30
0002ba bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0002bb e0f1      	LDI  R31,1
0002bc bff5      	OUT  MCUCR,R31
0002bd bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
0002be e08d      	LDI  R24,(14-2)+1
0002bf e0a2      	LDI  R26,2
0002c0 27bb      	CLR  R27
                 __CLEAR_REG:
0002c1 93ed      	ST   X+,R30
0002c2 958a      	DEC  R24
0002c3 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0002c4 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0002c5 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0002c6 e0a0      	LDI  R26,LOW(__SRAM_START)
0002c7 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0002c8 93ed      	ST   X+,R30
0002c9 9701      	SBIW R24,1
0002ca f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0002cb e5e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0002cc e0f5      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0002cd 9185      	LPM  R24,Z+
0002ce 9195      	LPM  R25,Z+
0002cf 9700      	SBIW R24,0
0002d0 f061      	BREQ __GLOBAL_INI_END
0002d1 91a5      	LPM  R26,Z+
0002d2 91b5      	LPM  R27,Z+
0002d3 9005      	LPM  R0,Z+
0002d4 9015      	LPM  R1,Z+
0002d5 01bf      	MOVW R22,R30
0002d6 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0002d7 9005      	LPM  R0,Z+
0002d8 920d      	ST   X+,R0
0002d9 9701      	SBIW R24,1
0002da f7e1      	BRNE __GLOBAL_INI_LOOP
0002db 01fb      	MOVW R30,R22
0002dc cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
0002dd e0e0      	LDI  R30,__GPIOR0_INIT
0002de bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0002df efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0002e0 bfed      	OUT  SPL,R30
0002e1 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0002e2 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0002e3 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0002e4 e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0002e5 940c 0447 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 ;/*
                 ; * PacManMario.c
                 ; * PacMan y Mario juntos con interrupciones
                 ; * Created: 27/04/2018 09:46:00 a. m.
                 ; * Author: Clase Micros
                 ; */
                 ;
                 ;#asm
                     .equ __lcd_port=0x0B
                     .equ __lcd_EN=1
                     .equ __lcd_RS=0
                     .equ __lcd_D4=2
                     .equ __lcd_D5=3
                     .equ __lcd_D6=4
                     .equ __lcd_D7=5
                 ; 0000 0010 #endasm
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <delay.h>
                 ;#include <display.h>
                 
                 	.CSEG
                 _SetupLCD:
                 ; .FSTART _SetupLCD
0002e7 972c      	SBIW R28,12
0002e8 e08c      	LDI  R24,12
0002e9 e0a0      	LDI  R26,LOW(0)
0002ea e0b0      	LDI  R27,HIGH(0)
0002eb e1e8      	LDI  R30,LOW(_0x3*2)
0002ec e0f5      	LDI  R31,HIGH(_0x3*2)
0002ed 940e 066c 	CALL __INITLOCB
0002ef 930a      	ST   -Y,R16
                 ;	TableSetup -> Y+1
                 ;	i -> R16
                 ; 0000 0014     SBI __lcd_port-1,__lcd_EN
0002f0 9a51          SBI __lcd_port-1,__lcd_EN
0002f1 9a50          SBI __lcd_port-1,__lcd_RS
0002f2 9a52          SBI __lcd_port-1,__lcd_D4
0002f3 9a53          SBI __lcd_port-1,__lcd_D5
0002f4 9a54          SBI __lcd_port-1,__lcd_D6
0002f5 9a55          SBI __lcd_port-1,__lcd_D7
0002f6 e3a2      	LDI  R26,LOW(50)
0002f7 e0b0      	LDI  R27,0
0002f8 940e 04ec 	CALL _delay_ms
0002fa e000      	LDI  R16,LOW(0)
                 _0x5:
0002fb 300c      	CPI  R16,12
0002fc f468      	BRSH _0x6
0002fd 940e 04b3 	CALL SUBOPT_0x0
0002ff 2fe0      	MOV  R30,R16
000300 e0f0      	LDI  R31,0
000301 01de      	MOVW R26,R28
000302 9611      	ADIW R26,1
000303 0fae      	ADD  R26,R30
000304 1fbf      	ADC  R27,R31
000305 91ac      	LD   R26,X
000306 940e 04b7 	CALL SUBOPT_0x1
000308 5f0f      	SUBI R16,-1
000309 cff1      	RJMP _0x5
                 _0x6:
00030a e0ec      	LDI  R30,LOW(12)
00030b 93e0 0300 	STS  _cursor,R30
00030d 91a0 0300 	LDS  R26,_cursor
00030f d020      	RCALL _WriteComandLCD
000310 8108      	LDD  R16,Y+0
000311 962d      	ADIW R28,13
000312 9508      	RET
                 ; .FEND
                 _PulseEn:
                 ; .FSTART _PulseEn
000313 9a59          SBI __lcd_port,__lcd_EN  // EN=1;
000314 9859          CBI __lcd_port,__lcd_EN // EN=0;
000315 9508      	RET
                 ; .FEND
                 _SendDataBitsLCD:
                 ; .FSTART _SendDataBitsLCD
000316 93aa      	ST   -Y,R26
                 ;	dato -> Y+0
000317 81e8      	LD   R30,Y
000318 70e8      	ANDI R30,LOW(0x8)
000319 f011      	BREQ _0x7
00031a 9a5d      	SBI __lcd_port,__lcd_D7
00031b c001      	RJMP _0x8
                 _0x7:
00031c 985d      	CBI __lcd_port,__lcd_D7
                 _0x8:
00031d 81e8      	LD   R30,Y
00031e 70e4      	ANDI R30,LOW(0x4)
00031f f011      	BREQ _0x9
000320 9a5c      	SBI __lcd_port,__lcd_D6
000321 c001      	RJMP _0xA
                 _0x9:
000322 985c      	CBI __lcd_port,__lcd_D6
                 _0xA:
000323 81e8      	LD   R30,Y
000324 70e2      	ANDI R30,LOW(0x2)
000325 f011      	BREQ _0xB
000326 9a5b      	SBI __lcd_port,__lcd_D5
000327 c001      	RJMP _0xC
                 _0xB:
000328 985b      	CBI __lcd_port,__lcd_D5
                 _0xC:
000329 81e8      	LD   R30,Y
00032a 70e1      	ANDI R30,LOW(0x1)
00032b f011      	BREQ _0xD
00032c 9a5a      	SBI __lcd_port,__lcd_D4
00032d c001      	RJMP _0xE
                 _0xD:
00032e 985a      	CBI __lcd_port,__lcd_D4
                 _0xE:
00032f c0cd      	RJMP _0x2060001
                 ; .FEND
                 _WriteComandLCD:
                 ; .FSTART _WriteComandLCD
000330 93aa      	ST   -Y,R26
000331 930a      	ST   -Y,R16
                 ;	Comando -> Y+1
                 ;	tempComando -> R16
000332 9858      	CBI __lcd_port,__lcd_RS
000333 940e 04b3 	CALL SUBOPT_0x0
000335 940e 04bb 	CALL SUBOPT_0x2
000337 940e 04c2 	CALL SUBOPT_0x3
000339 dfd9      	RCALL _PulseEn
00033a 8108      	LDD  R16,Y+0
00033b c042      	RJMP _0x2060002
                 ; .FEND
                 _CharLCD:
                 ; .FSTART _CharLCD
00033c 93aa      	ST   -Y,R26
00033d 930a      	ST   -Y,R16
                 ;	dato -> Y+1
                 ;	tempdato -> R16
00033e 9a58      	SBI __lcd_port,__lcd_RS
00033f 940e 04b3 	CALL SUBOPT_0x0
000341 940e 04bb 	CALL SUBOPT_0x2
000343 940e 04c2 	CALL SUBOPT_0x3
000345 dfcd      	RCALL _PulseEn
000346 8108      	LDD  R16,Y+0
000347 c036      	RJMP _0x2060002
                 ; .FEND
                 _StringLCD:
                 ; .FSTART _StringLCD
000348 93ba      	ST   -Y,R27
000349 93aa      	ST   -Y,R26
00034a 930a      	ST   -Y,R16
                 ;	i -> R16
00034b e000      	LDI  R16,LOW(0)
                 _0x10:
00034c 2fe0      	MOV  R30,R16
00034d 5f0f      	SUBI R16,-1
00034e 81a9      	LDD  R26,Y+1
00034f 81ba      	LDD  R27,Y+1+1
000350 e0f0      	LDI  R31,0
000351 0fea      	ADD  R30,R26
000352 1ffb      	ADC  R31,R27
000353 91a4      	LPM  R26,Z
000354 dfe7      	RCALL _CharLCD
000355 2fe0      	MOV  R30,R16
000356 81a9      	LDD  R26,Y+1
000357 81ba      	LDD  R27,Y+1+1
000358 e0f0      	LDI  R31,0
000359 0fea      	ADD  R30,R26
00035a 1ffb      	ADC  R31,R27
00035b 91e4      	LPM  R30,Z
00035c 30e0      	CPI  R30,0
00035d f771      	BRNE _0x10
00035e 8108      	LDD  R16,Y+0
00035f 9623      	ADIW R28,3
000360 9508      	RET
                 ; .FEND
                 ;	tiempo -> Y+1
                 ;	i -> R16
                 ;	Mensaje -> Y+1
                 ;	i -> R16
                 _MoveCursor:
                 ; .FSTART _MoveCursor
000361 93aa      	ST   -Y,R26
                 ;	x -> Y+1
                 ;	y -> Y+0
000362 81e8      	LD   R30,Y
000363 e0f0      	LDI  R31,0
000364 9730      	SBIW R30,0
000365 f419      	BRNE _0x1B
000366 81a9      	LDD  R26,Y+1
000367 58a0      	SUBI R26,-LOW(128)
000368 c014      	RJMP _0x3B
                 _0x1B:
000369 30e1      	CPI  R30,LOW(0x1)
00036a e0a0      	LDI  R26,HIGH(0x1)
00036b 07fa      	CPC  R31,R26
00036c f419      	BRNE _0x1C
00036d 81a9      	LDD  R26,Y+1
00036e 54a0      	SUBI R26,-LOW(192)
00036f c00d      	RJMP _0x3B
                 _0x1C:
000370 30e2      	CPI  R30,LOW(0x2)
000371 e0a0      	LDI  R26,HIGH(0x2)
000372 07fa      	CPC  R31,R26
000373 f419      	BRNE _0x1D
000374 81a9      	LDD  R26,Y+1
000375 56ac      	SUBI R26,-LOW(148)
000376 c006      	RJMP _0x3B
                 _0x1D:
000377 30e3      	CPI  R30,LOW(0x3)
000378 e0a0      	LDI  R26,HIGH(0x3)
000379 07fa      	CPC  R31,R26
00037a f419      	BRNE _0x1A
00037b 81a9      	LDD  R26,Y+1
00037c 52ac      	SUBI R26,-LOW(212)
                 _0x3B:
00037d dfb2      	RCALL _WriteComandLCD
                 _0x1A:
                 _0x2060002:
00037e 9622      	ADIW R28,2
00037f 9508      	RET
                 ; .FEND
                 _CreateChar:
                 ; .FSTART _CreateChar
000380 93ba      	ST   -Y,R27
000381 93aa      	ST   -Y,R26
000382 930a      	ST   -Y,R16
                 ;	NoCaracter -> Y+3
                 ;	datos -> Y+1
                 ;	i -> R16
000383 81eb      	LDD  R30,Y+3
000384 0fee      	LSL  R30
000385 0fee      	LSL  R30
000386 0fee      	LSL  R30
000387 5ce0      	SUBI R30,-LOW(64)
000388 2fae      	MOV  R26,R30
000389 dfa6      	RCALL _WriteComandLCD
00038a e000      	LDI  R16,LOW(0)
                 _0x20:
00038b 3008      	CPI  R16,8
00038c f448      	BRSH _0x21
00038d 81a9      	LDD  R26,Y+1
00038e 81ba      	LDD  R27,Y+1+1
00038f 27ee      	CLR  R30
000390 0fa0      	ADD  R26,R16
000391 1fbe      	ADC  R27,R30
000392 91ac      	LD   R26,X
000393 dfa8      	RCALL _CharLCD
000394 5f0f      	SUBI R16,-1
000395 cff5      	RJMP _0x20
                 _0x21:
000396 e8a0      	LDI  R26,LOW(128)
000397 df98      	RCALL _WriteComandLCD
000398 8108      	LDD  R16,Y+0
000399 9624      	ADIW R28,4
00039a 9508      	RET
                 ; .FEND
                 ;#include <stdio.h>
                 ;
                 ;flash int du=262,re= 294, ri=312, mi =330,fa=349, fi=370, sol=391,si=416, la=440, li=467, ti=494;
                 ;flash int MarioBros[591]={mi*2,mi*2,1,mi*2,1,du*2,mi*2,1,sol*2,1,1,1,sol,1,1,1,du*2,1,1,sol,1,1,mi,1,1,la,1,ti,1,li,la,1 ...
                 ;1,mi*2,1,du*2,re*2,ti,1,1,du*2,1,1,sol,1,1,mi,1,1,la,1,ti,1,li,la,1,sol,mi*2,1,sol*2,la*2,1,fa*2,sol*2,1,mi*2,1,du*2,re* ...
                 ;mi*2,1,si,la,du*2,1,la,du*2,re*2,1,1,sol*2,fi*2,fa*2,ri*2,1,mi*2,1,du*4,1,du*4,du*4,1,1,1,1,1,sol*2,fi*2,fa*2,ri*2,1,mi* ...
                 ;ri*2,1,1,re*2,1,1,du*2,1,1,1,1,1,1,1,1,1,sol*2,fi*2,fa*2,ri*2,1,mi*2,1,si,la,du*2,1,la,du*2,re*2,1,1,sol*2,fi*2,fa*2,ri* ...
                 ;1,1,sol*2,fi*2,fa*2,ri*2,1,mi*2,1,si,la,du*2,1,la,du*2,re*2,1,1,ri*2,1,1,re*2,1,1,du*2,1,1,1,1,1,1,1,du*2,du*2,1,du*2,1, ...
                 ;du*2,du*2,1,du*2,1,du*2,re*2,1,1,1,1,1,1,1,1,du*2,du*2,1,du*2,1,du*2,re*2,1,mi*2,du*2,1,la,sol,1,1,1,mi*2,mi*2,1,mi*2,1, ...
                 ;1,1,sol,1,1,mi,1,1,la,1,ti,1,li,la,1,sol,mi*2,1,sol*2,la*2,1,fa*2,sol*2,1,mi*2,1,du*2,re*2,ti,1,1,du*2,1,1,sol,1,1,mi,1, ...
                 ;la*2,1,fa*2,sol*2,1,mi*2,1,du*2,re*2,ti,1,1,mi*2,du*2,1,sol,1,1,si,1,la,fa*2,1,fa*2,la,1,1,1,ti,la*2,1,la*2,la*2,sol*2,1 ...
                 ;1,sol,1,1,si,1,la,fa*2,1,fa*2,la,1,1,1,ti,fa*2,1,fa*2,fa*2,mi*2,1,re*2,sol,mi,1,mi,du,1,1,1,mi*2,du*2,1,sol,1,1,si,1,la, ...
                 ;sol*2,1,fa*2,mi*2,du*2,1,la,sol,1,1,1,mi*2,du*2,1,sol,1,1,si,1,la,fa*2,1,fa*2,la,1,1,1,ti,fa*2,1,fa*2,fa*2,mi*2,1,re*2,s ...
                 ;du*2,re*2,1,mi*2,du*2,1,la,sol,1,1,1,du*2,du*2,1,du*2,1,du*2,re*2,1,1,1,1,1,1,1,1,du*2,du*2,1,du*2,1,du*2,re*2,1,mi*2,du ...
                 ;mi*2,1,sol*2,1,1,1,sol,1,1,1,mi*2,du*2,1,sol,1,1,si,1,la,fa*2,1,fa*2,la,1,1,1,ti,la*2,1,la*2,la*2,sol*2,1,fa*2,mi*2,du*2 ...
                 ;fa*2,1,fa*2,la,1,1,1,ti,fa*2,1,fa*2,fa*2,mi*2,1,re*2,sol,mi,1,mi,du,1,1,1,0};
                 ;
                 ;void tono (float f)
                 ; 0000 0027 {
                 _tono:
                 ; .FSTART _tono
                 ; 0000 0028     float Cuentas;
                 ; 0000 0029     unsigned int CuentasEnt;
                 ; 0000 002A 
                 ; 0000 002B     Cuentas=500000.0/f;
00039b 940e 065a 	CALL __PUTPARD2
00039d 9724      	SBIW R28,4
00039e 931a      	ST   -Y,R17
00039f 930a      	ST   -Y,R16
                 ;	f -> Y+6
                 ;	Cuentas -> Y+2
                 ;	CuentasEnt -> R16,R17
                +
0003a0 81ee     +LDD R30 , Y + 6
0003a1 81ff     +LDD R31 , Y + 6 + 1
0003a2 8568     +LDD R22 , Y + 6 + 2
0003a3 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
                +
0003a4 e0a0     +LDI R26 , LOW ( 0x48F42400 )
0003a5 e2b4     +LDI R27 , HIGH ( 0x48F42400 )
0003a6 ef84     +LDI R24 , BYTE3 ( 0x48F42400 )
0003a7 e498     +LDI R25 , BYTE4 ( 0x48F42400 )
                 	__GETD2N 0x48F42400
0003a8 940e 05e1 	CALL __DIVF21
                +
0003aa 83ea     +STD Y + 2 , R30
0003ab 83fb     +STD Y + 2 + 1 , R31
0003ac 836c     +STD Y + 2 + 2 , R22
0003ad 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                 ; 0000 002C     CuentasEnt=Cuentas;
0003ae 940e 0523 	CALL __CFD1U
0003b0 018f      	MOVW R16,R30
                 ; 0000 002D     if ((Cuentas-CuentasEnt)>=0.5)  //Redondear
                +
0003b1 81aa     +LDD R26 , Y + 2
0003b2 81bb     +LDD R27 , Y + 2 + 1
0003b3 818c     +LDD R24 , Y + 2 + 2
0003b4 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0003b5 2766      	CLR  R22
0003b6 2777      	CLR  R23
0003b7 940e 055c 	CALL __CDF1
0003b9 940e 065f 	CALL __SWAPD12
0003bb 940e 058f 	CALL __SUBF12
0003bd 01df      	MOVW R26,R30
0003be 01cb      	MOVW R24,R22
                +
0003bf e0e0     +LDI R30 , LOW ( 0x3F000000 )
0003c0 e0f0     +LDI R31 , HIGH ( 0x3F000000 )
0003c1 e060     +LDI R22 , BYTE3 ( 0x3F000000 )
0003c2 e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
0003c3 940e 0626 	CALL __CMPF12
0003c5 f010      	BRLO _0x22
                 ; 0000 002E        CuentasEnt++;
                +
0003c6 5f0f     +SUBI R16 , LOW ( - 1 )
0003c7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 002F     TCCR1A=0x40;
                 _0x22:
0003c8 e4e0      	LDI  R30,LOW(64)
0003c9 93e0 0080 	STS  128,R30
                 ; 0000 0030     TCCR1B=0x09;
0003cb e0e9      	LDI  R30,LOW(9)
0003cc 93e0 0081 	STS  129,R30
                 ; 0000 0031     OCR1AH=(CuentasEnt-1)>>8;
0003ce 01f8      	MOVW R30,R16
0003cf 9731      	SBIW R30,1
0003d0 2fef      	MOV  R30,R31
0003d1 e0f0      	LDI  R31,0
0003d2 93e0 0089 	STS  137,R30
                 ; 0000 0032     OCR1AL=(CuentasEnt-1)&0xFF;
0003d4 2fe0      	MOV  R30,R16
0003d5 50e1      	SUBI R30,LOW(1)
0003d6 93e0 0088 	STS  136,R30
                 ; 0000 0033 }
0003d8 8119      	LDD  R17,Y+1
0003d9 8108      	LDD  R16,Y+0
0003da 962a      	ADIW R28,10
0003db 9508      	RET
                 ; .FEND
                 ;
                 ;void noTono()
                 ; 0000 0036 {
                 _noTono:
                 ; .FSTART _noTono
                 ; 0000 0037     TCCR1A=0x00;
0003dc e0e0      	LDI  R30,LOW(0)
0003dd 93e0 0080 	STS  128,R30
                 ; 0000 0038     TCCR1B=0x00;
0003df 93e0 0081 	STS  129,R30
                 ; 0000 0039     PORTB.1=0;  //Apaga puerto manualmente
0003e1 9829      	CBI  0x5,1
                 ; 0000 003A }
0003e2 9508      	RET
                 ; .FEND
                 ;
                 ;unsigned int j;
                 ;
                 ;// Voltage Reference: AVCC pin
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (0<<ADLAR))
                 ;
                 ;// Read the AD conversion result
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0043 {
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0044     ADMUX=adc_input | ADC_VREF_TYPE;
0003e3 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
0003e4 81e8      	LD   R30,Y
0003e5 64e0      	ORI  R30,0x40
0003e6 93e0 007c 	STS  124,R30
                 ; 0000 0045     // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 0046     delay_us(10);
                +
0003e8 e083     +LDI R24 , LOW ( 3 )
                +__DELAY_USB_LOOP :
0003e9 958a     +DEC R24
0003ea f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 3
                 ; 0000 0047     // Start the AD conversion
                 ; 0000 0048     ADCSRA|=(1<<ADSC);
0003eb 91e0 007a 	LDS  R30,122
0003ed 64e0      	ORI  R30,0x40
0003ee 93e0 007a 	STS  122,R30
                 ; 0000 0049     // Wait for the AD conversion to complete
                 ; 0000 004A     while ((ADCSRA & (1<<ADIF))==0);
                 _0x25:
0003f0 91e0 007a 	LDS  R30,122
0003f2 71e0      	ANDI R30,LOW(0x10)
0003f3 f3e1      	BREQ _0x25
                 ; 0000 004B     ADCSRA|=(1<<ADIF);
0003f4 91e0 007a 	LDS  R30,122
0003f6 61e0      	ORI  R30,0x10
0003f7 93e0 007a 	STS  122,R30
                 ; 0000 004C     return ADCW;
0003f9 91e0 0078 	LDS  R30,120
0003fb 91f0 0079 	LDS  R31,120+1
                 _0x2060001:
0003fd 9621      	ADIW R28,1
0003fe 9508      	RET
                 ; 0000 004D }
                 ; .FEND
                 ;
                 ;void DelayPacman()
                 ; 0000 0050 {
                 _DelayPacman:
                 ; .FSTART _DelayPacman
                 ; 0000 0051     delay_ms(read_adc(0));
0003ff e0a0      	LDI  R26,LOW(0)
000400 dfe2      	RCALL _read_adc
000401 01df      	MOVW R26,R30
000402 940e 04ec 	CALL _delay_ms
                 ; 0000 0052 }
000404 9508      	RET
                 ; .FEND
                 ;
                 ;unsigned char PacMan1[8]={0x0E,0x1D,0x1E,0x1C,0x1E,0x1F,0x0E,0x00};
                 
                 	.DSEG
                 ;unsigned char PacMan2[8]={0x0E,0x1D,0x1F,0x1E,0x1F,0x1F,0x0E,0x00};
                 ;unsigned char PacMan3[8]={0x0E,0x17,0x0F,0x07,0x0F,0x1F,0x0E,0x00};
                 ;unsigned char PacMan4[8]={0x0E,0x17,0x1F,0x0F,0x1F,0x1F,0x0E,0x00};
                 ;
                 ;signed char i;  //rango de valores de -128 a +127
                 ;
                 ;interrupt [TIM2_COMPA] void nota (void)
                 ; 0000 005C {
                 
                 	.CSEG
                 _nota:
                 ; .FSTART _nota
000405 920a      	ST   -Y,R0
000406 921a      	ST   -Y,R1
000407 92fa      	ST   -Y,R15
000408 936a      	ST   -Y,R22
000409 937a      	ST   -Y,R23
00040a 938a      	ST   -Y,R24
00040b 939a      	ST   -Y,R25
00040c 93aa      	ST   -Y,R26
00040d 93ba      	ST   -Y,R27
00040e 93ea      	ST   -Y,R30
00040f 93fa      	ST   -Y,R31
000410 b7ef      	IN   R30,SREG
000411 93ea      	ST   -Y,R30
                 ; 0000 005D     if (MarioBros[j]!=1)
000412 940e 04c9 	CALL SUBOPT_0x4
000414 940e 0657 	CALL __GETW2PF
000416 9711      	SBIW R26,1
000417 f061      	BREQ _0x2C
                 ; 0000 005E         tono(MarioBros[j]);
000418 940e 04c9 	CALL SUBOPT_0x4
00041a 940e 0653 	CALL __GETW1PF
00041c 940e 064e 	CALL __CWD1
00041e 940e 055c 	CALL __CDF1
000420 01df      	MOVW R26,R30
000421 01cb      	MOVW R24,R22
000422 df78      	RCALL _tono
                 ; 0000 005F     else
000423 c001      	RJMP _0x2D
                 _0x2C:
                 ; 0000 0060         noTono();
000424 dfb7      	RCALL _noTono
                 ; 0000 0061     j++;
                 _0x2D:
000425 e0a1      	LDI  R26,LOW(_j)
000426 e0b3      	LDI  R27,HIGH(_j)
000427 91ed      	LD   R30,X+
000428 91fd      	LD   R31,X+
000429 9631      	ADIW R30,1
00042a 93fe      	ST   -X,R31
00042b 93ee      	ST   -X,R30
                 ; 0000 0062     if (j==591)
00042c 91a0 0301 	LDS  R26,_j
00042e 91b0 0302 	LDS  R27,_j+1
000430 34af      	CPI  R26,LOW(0x24F)
000431 e0e2      	LDI  R30,HIGH(0x24F)
000432 07be      	CPC  R27,R30
000433 f429      	BRNE _0x2E
                 ; 0000 0063         j=0;
000434 e0e0      	LDI  R30,LOW(0)
000435 93e0 0301 	STS  _j,R30
000437 93e0 0302 	STS  _j+1,R30
                 ; 0000 0064 }
                 _0x2E:
000439 91e9      	LD   R30,Y+
00043a bfef      	OUT  SREG,R30
00043b 91f9      	LD   R31,Y+
00043c 91e9      	LD   R30,Y+
00043d 91b9      	LD   R27,Y+
00043e 91a9      	LD   R26,Y+
00043f 9199      	LD   R25,Y+
000440 9189      	LD   R24,Y+
000441 9179      	LD   R23,Y+
000442 9169      	LD   R22,Y+
000443 90f9      	LD   R15,Y+
000444 9019      	LD   R1,Y+
000445 9009      	LD   R0,Y+
000446 9518      	RETI
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 0067 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0068     DDRB.1=1;   //PB1 de salida (bocina)
000447 9a21      	SBI  0x4,1
                 ; 0000 0069     TCCR2A = 0x02;  //Modo de CTC
000448 e0e2      	LDI  R30,LOW(2)
000449 93e0 00b0 	STS  176,R30
                 ; 0000 006A     TCCR2B = 0x07;  //Con CK/1024 PARA CONTEO DE 0.1 SEG
00044b e0e7      	LDI  R30,LOW(7)
00044c 93e0 00b1 	STS  177,R30
                 ; 0000 006B     OCR2A = 97;
00044e e6e1      	LDI  R30,LOW(97)
00044f 93e0 00b3 	STS  179,R30
                 ; 0000 006C     TIMSK2 = 0x02;  //Habilitar interrucion
000451 e0e2      	LDI  R30,LOW(2)
000452 93e0 0070 	STS  112,R30
                 ; 0000 006D     #asm("SET")
000454 9468      	SET
                 ; 0000 006E     // ADC initialization
                 ; 0000 006F     // ADC Clock frequency: 125.000 kHz
                 ; 0000 0070     // ADC Voltage Reference: AVCC pin
                 ; 0000 0071     // ADC Auto Trigger Source: ADC Stopped
                 ; 0000 0072     // Digital input buffers on ADC0: Off, ADC1: On, ADC2: On, ADC3: On
                 ; 0000 0073     // ADC4: On, ADC5: On
                 ; 0000 0074     DIDR0=(0<<ADC5D) | (0<<ADC4D) | (0<<ADC3D) | (0<<ADC2D) | (0<<ADC1D) | (1<<ADC0D);
000455 e0e1      	LDI  R30,LOW(1)
000456 93e0 007e 	STS  126,R30
                 ; 0000 0075     ADMUX=ADC_VREF_TYPE;
000458 e4e0      	LDI  R30,LOW(64)
000459 93e0 007c 	STS  124,R30
                 ; 0000 0076     ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
00045b e8e3      	LDI  R30,LOW(131)
00045c 93e0 007a 	STS  122,R30
                 ; 0000 0077     ADCSRB=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
00045e e0e0      	LDI  R30,LOW(0)
00045f 93e0 007b 	STS  123,R30
                 ; 0000 0078     SetupLCD();
000461 940e 02e7 	CALL _SetupLCD
                 ; 0000 0079     CreateChar(0,PacMan1);
000463 e0e0      	LDI  R30,LOW(0)
000464 93ea      	ST   -Y,R30
000465 e0a3      	LDI  R26,LOW(_PacMan1)
000466 e0b3      	LDI  R27,HIGH(_PacMan1)
000467 df18      	RCALL _CreateChar
                 ; 0000 007A     CreateChar(1,PacMan2);
000468 e0e1      	LDI  R30,LOW(1)
000469 93ea      	ST   -Y,R30
00046a e0ab      	LDI  R26,LOW(_PacMan2)
00046b e0b3      	LDI  R27,HIGH(_PacMan2)
00046c df13      	RCALL _CreateChar
                 ; 0000 007B     CreateChar(2,PacMan3);
00046d e0e2      	LDI  R30,LOW(2)
00046e 93ea      	ST   -Y,R30
00046f e1a3      	LDI  R26,LOW(_PacMan3)
000470 e0b3      	LDI  R27,HIGH(_PacMan3)
000471 df0e      	RCALL _CreateChar
                 ; 0000 007C     CreateChar(3,PacMan4);
000472 e0e3      	LDI  R30,LOW(3)
000473 93ea      	ST   -Y,R30
000474 e1ab      	LDI  R26,LOW(_PacMan4)
000475 e0b3      	LDI  R27,HIGH(_PacMan4)
000476 df09      	RCALL _CreateChar
                 ; 0000 007D 
                 ; 0000 007E     while (1)
                 _0x31:
                 ; 0000 007F     {
                 ; 0000 0080        MoveCursor(5,0);
000477 e0e5      	LDI  R30,LOW(5)
000478 940e 04d4 	CALL SUBOPT_0x5
                 ; 0000 0081        StringLCD("Hello");
                +
00047a e4a4     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
00047b e0b5     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
00047c decb      	RCALL _StringLCD
                 ; 0000 0082        MoveCursor(3,1);
00047d e0e3      	LDI  R30,LOW(3)
00047e 940e 04d8 	CALL SUBOPT_0x6
                 ; 0000 0083        StringLCD("Mr. PacMan");
                +
000480 e4aa     +LDI R26 , LOW ( 2 * _0x0 + ( 6 ) )
000481 e0b5     +LDI R27 , HIGH ( 2 * _0x0 + ( 6 ) )
                 	__POINTW2FN _0x0,6
000482 dec5      	RCALL _StringLCD
                 ; 0000 0084 
                 ; 0000 0085        for (i=0;i<16;i++)
000483 e0e0      	LDI  R30,LOW(0)
000484 93e0 0323 	STS  _i,R30
                 _0x35:
000486 91a0 0323 	LDS  R26,_i
000488 31a0      	CPI  R26,LOW(0x10)
000489 f484      	BRGE _0x36
                 ; 0000 0086        {
                 ; 0000 0087           MoveCursor(i,0);   //Paso 1
00048a 940e 04dc 	CALL SUBOPT_0x7
                 ; 0000 0088           CharLCD(0);        //Paso 2
00048c e0a0      	LDI  R26,LOW(0)
00048d 940e 04df 	CALL SUBOPT_0x8
                 ; 0000 0089           DelayPacman();
                 ; 0000 008A           MoveCursor(i,0);   //Paso 3
                 ; 0000 008B           CharLCD(1);        //Paso 4
00048f e0a1      	LDI  R26,LOW(1)
000490 940e 04df 	CALL SUBOPT_0x8
                 ; 0000 008C           DelayPacman();
                 ; 0000 008D           MoveCursor(i,0);   //Paso 5
                 ; 0000 008E           CharLCD(' ');      //Paso 6
000492 e2a0      	LDI  R26,LOW(32)
000493 dea8      	RCALL _CharLCD
                 ; 0000 008F        }
000494 91e0 0323 	LDS  R30,_i
000496 5fef      	SUBI R30,-LOW(1)
000497 93e0 0323 	STS  _i,R30
000499 cfec      	RJMP _0x35
                 _0x36:
                 ; 0000 0090 
                 ; 0000 0091        for (i=15;i>=0;i--)
00049a e0ef      	LDI  R30,LOW(15)
00049b 93e0 0323 	STS  _i,R30
                 _0x38:
00049d 91a0 0323 	LDS  R26,_i
00049f 30a0      	CPI  R26,0
0004a0 f084      	BRLT _0x39
                 ; 0000 0092        {
                 ; 0000 0093             MoveCursor(i,1);   //Paso 1
0004a1 940e 04e4 	CALL SUBOPT_0x9
                 ; 0000 0094             CharLCD(2);        //Paso 2
0004a3 e0a2      	LDI  R26,LOW(2)
0004a4 940e 04e7 	CALL SUBOPT_0xA
                 ; 0000 0095             DelayPacman();
                 ; 0000 0096             MoveCursor(i,1);   //Paso 3
                 ; 0000 0097             CharLCD(3);        //Paso 4
0004a6 e0a3      	LDI  R26,LOW(3)
0004a7 940e 04e7 	CALL SUBOPT_0xA
                 ; 0000 0098             DelayPacman();
                 ; 0000 0099             MoveCursor(i,1);   //Paso 5
                 ; 0000 009A             CharLCD(' ');      //Paso 6
0004a9 e2a0      	LDI  R26,LOW(32)
0004aa de91      	RCALL _CharLCD
                 ; 0000 009B        }
0004ab 91e0 0323 	LDS  R30,_i
0004ad 50e1      	SUBI R30,LOW(1)
0004ae 93e0 0323 	STS  _i,R30
0004b0 cfec      	RJMP _0x38
                 _0x39:
                 ; 0000 009C     }
0004b1 cfc5      	RJMP _0x31
                 ; 0000 009D }
                 _0x3A:
0004b2 cfff      	RJMP _0x3A
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _cursor:
000300           	.BYTE 0x1
                 _j:
000301           	.BYTE 0x2
                 _PacMan1:
000303           	.BYTE 0x8
                 _PacMan2:
00030b           	.BYTE 0x8
                 _PacMan3:
000313           	.BYTE 0x8
                 _PacMan4:
00031b           	.BYTE 0x8
                 _i:
000323           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
0004b3 e0a2      	LDI  R26,LOW(2)
0004b4 e0b0      	LDI  R27,0
0004b5 940c 04ec 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
0004b7 940e 0316 	CALL _SendDataBitsLCD
0004b9 940c 0313 	JMP  _PulseEn
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
0004bb 81e9      	LDD  R30,Y+1
0004bc 7fe0      	ANDI R30,LOW(0xF0)
0004bd 2f0e      	MOV  R16,R30
0004be 9502      	SWAP R16
0004bf 700f      	ANDI R16,0xF
0004c0 2fa0      	MOV  R26,R16
0004c1 cff5      	RJMP SUBOPT_0x1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
0004c2 81e9      	LDD  R30,Y+1
0004c3 70ef      	ANDI R30,LOW(0xF)
0004c4 2f0e      	MOV  R16,R30
0004c5 2fa0      	MOV  R26,R16
0004c6 940e 0316 	CALL _SendDataBitsLCD
0004c8 cfea      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4:
0004c9 91e0 0301 	LDS  R30,_j
0004cb 91f0 0302 	LDS  R31,_j+1
0004cd e6a8      	LDI  R26,LOW(_MarioBros*2)
0004ce e0b0      	LDI  R27,HIGH(_MarioBros*2)
0004cf 0fee      	LSL  R30
0004d0 1fff      	ROL  R31
0004d1 0fea      	ADD  R30,R26
0004d2 1ffb      	ADC  R31,R27
0004d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
0004d4 93ea      	ST   -Y,R30
0004d5 e0a0      	LDI  R26,LOW(0)
0004d6 940c 0361 	JMP  _MoveCursor
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
0004d8 93ea      	ST   -Y,R30
0004d9 e0a1      	LDI  R26,LOW(1)
0004da 940c 0361 	JMP  _MoveCursor
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
0004dc 91e0 0323 	LDS  R30,_i
0004de cff5      	RJMP SUBOPT_0x5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
0004df 940e 033c 	CALL _CharLCD
0004e1 940e 03ff 	CALL _DelayPacman
0004e3 cff8      	RJMP SUBOPT_0x7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
0004e4 91e0 0323 	LDS  R30,_i
0004e6 cff1      	RJMP SUBOPT_0x6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
0004e7 940e 033c 	CALL _CharLCD
0004e9 940e 03ff 	CALL _DelayPacman
0004eb cff8      	RJMP SUBOPT_0x9
                 
                 
                 	.CSEG
                 _delay_ms:
0004ec 9610      	adiw r26,0
0004ed f039      	breq __delay_ms1
                 __delay_ms0:
                +
0004ee ef8a     +LDI R24 , LOW ( 0xFA )
0004ef e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
0004f0 9701     +SBIW R24 , 1
0004f1 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
0004f2 95a8      	wdr
0004f3 9711      	sbiw r26,1
0004f4 f7c9      	brne __delay_ms0
                 __delay_ms1:
0004f5 9508      	ret
                 
                 __ROUND_REPACK:
0004f6 2355      	TST  R21
0004f7 f442      	BRPL __REPACK
0004f8 3850      	CPI  R21,0x80
0004f9 f411      	BRNE __ROUND_REPACK0
0004fa ffe0      	SBRS R30,0
0004fb c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0004fc 9631      	ADIW R30,1
0004fd 1f69      	ADC  R22,R25
0004fe 1f79      	ADC  R23,R25
0004ff f06b      	BRVS __REPACK1
                 
                 __REPACK:
000500 e850      	LDI  R21,0x80
000501 2757      	EOR  R21,R23
000502 f411      	BRNE __REPACK0
000503 935f      	PUSH R21
000504 c0ca      	RJMP __ZERORES
                 __REPACK0:
000505 3f5f      	CPI  R21,0xFF
000506 f031      	BREQ __REPACK1
000507 0f66      	LSL  R22
000508 0c00      	LSL  R0
000509 9557      	ROR  R21
00050a 9567      	ROR  R22
00050b 2f75      	MOV  R23,R21
00050c 9508      	RET
                 __REPACK1:
00050d 935f      	PUSH R21
00050e 2000      	TST  R0
00050f f00a      	BRMI __REPACK2
000510 c0ca      	RJMP __MAXRES
                 __REPACK2:
000511 c0c3      	RJMP __MINRES
                 
                 __UNPACK:
000512 e850      	LDI  R21,0x80
000513 2e19      	MOV  R1,R25
000514 2215      	AND  R1,R21
000515 0f88      	LSL  R24
000516 1f99      	ROL  R25
000517 2795      	EOR  R25,R21
000518 0f55      	LSL  R21
000519 9587      	ROR  R24
                 
                 __UNPACK1:
00051a e850      	LDI  R21,0x80
00051b 2e07      	MOV  R0,R23
00051c 2205      	AND  R0,R21
00051d 0f66      	LSL  R22
00051e 1f77      	ROL  R23
00051f 2775      	EOR  R23,R21
000520 0f55      	LSL  R21
000521 9567      	ROR  R22
000522 9508      	RET
                 
                 __CFD1U:
000523 9468      	SET
000524 c001      	RJMP __CFD1U0
                 __CFD1:
000525 94e8      	CLT
                 __CFD1U0:
000526 935f      	PUSH R21
000527 dff2      	RCALL __UNPACK1
000528 3870      	CPI  R23,0x80
000529 f018      	BRLO __CFD10
00052a 3f7f      	CPI  R23,0xFF
00052b f408      	BRCC __CFD10
00052c c0a2      	RJMP __ZERORES
                 __CFD10:
00052d e156      	LDI  R21,22
00052e 1b57      	SUB  R21,R23
00052f f4aa      	BRPL __CFD11
000530 9551      	NEG  R21
000531 3058      	CPI  R21,8
000532 f40e      	BRTC __CFD19
000533 3059      	CPI  R21,9
                 __CFD19:
000534 f030      	BRLO __CFD17
000535 efef      	SER  R30
000536 efff      	SER  R31
000537 ef6f      	SER  R22
000538 e77f      	LDI  R23,0x7F
000539 f977      	BLD  R23,7
00053a c01a      	RJMP __CFD15
                 __CFD17:
00053b 2777      	CLR  R23
00053c 2355      	TST  R21
00053d f0b9      	BREQ __CFD15
                 __CFD18:
00053e 0fee      	LSL  R30
00053f 1fff      	ROL  R31
000540 1f66      	ROL  R22
000541 1f77      	ROL  R23
000542 955a      	DEC  R21
000543 f7d1      	BRNE __CFD18
000544 c010      	RJMP __CFD15
                 __CFD11:
000545 2777      	CLR  R23
                 __CFD12:
000546 3058      	CPI  R21,8
000547 f028      	BRLO __CFD13
000548 2fef      	MOV  R30,R31
000549 2ff6      	MOV  R31,R22
00054a 2f67      	MOV  R22,R23
00054b 5058      	SUBI R21,8
00054c cff9      	RJMP __CFD12
                 __CFD13:
00054d 2355      	TST  R21
00054e f031      	BREQ __CFD15
                 __CFD14:
00054f 9576      	LSR  R23
000550 9567      	ROR  R22
000551 95f7      	ROR  R31
000552 95e7      	ROR  R30
000553 955a      	DEC  R21
000554 f7d1      	BRNE __CFD14
                 __CFD15:
000555 2000      	TST  R0
000556 f40a      	BRPL __CFD16
000557 d0ee      	RCALL __ANEGD1
                 __CFD16:
000558 915f      	POP  R21
000559 9508      	RET
                 
                 __CDF1U:
00055a 9468      	SET
00055b c001      	RJMP __CDF1U0
                 __CDF1:
00055c 94e8      	CLT
                 __CDF1U0:
00055d 9730      	SBIW R30,0
00055e 4060      	SBCI R22,0
00055f 4070      	SBCI R23,0
000560 f0b1      	BREQ __CDF10
000561 2400      	CLR  R0
000562 f026      	BRTS __CDF11
000563 2377      	TST  R23
000564 f412      	BRPL __CDF11
000565 9400      	COM  R0
000566 d0df      	RCALL __ANEGD1
                 __CDF11:
000567 2e17      	MOV  R1,R23
000568 e17e      	LDI  R23,30
000569 2011      	TST  R1
                 __CDF12:
00056a f032      	BRMI __CDF13
00056b 957a      	DEC  R23
00056c 0fee      	LSL  R30
00056d 1fff      	ROL  R31
00056e 1f66      	ROL  R22
00056f 1c11      	ROL  R1
000570 cff9      	RJMP __CDF12
                 __CDF13:
000571 2fef      	MOV  R30,R31
000572 2ff6      	MOV  R31,R22
000573 2d61      	MOV  R22,R1
000574 935f      	PUSH R21
000575 df8a      	RCALL __REPACK
000576 915f      	POP  R21
                 __CDF10:
000577 9508      	RET
                 
                 __SWAPACC:
000578 934f      	PUSH R20
000579 01af      	MOVW R20,R30
00057a 01fd      	MOVW R30,R26
00057b 01da      	MOVW R26,R20
00057c 01ab      	MOVW R20,R22
00057d 01bc      	MOVW R22,R24
00057e 01ca      	MOVW R24,R20
00057f 2d40      	MOV  R20,R0
000580 2c01      	MOV  R0,R1
000581 2e14      	MOV  R1,R20
000582 914f      	POP  R20
000583 9508      	RET
                 
                 __UADD12:
000584 0fea      	ADD  R30,R26
000585 1ffb      	ADC  R31,R27
000586 1f68      	ADC  R22,R24
000587 9508      	RET
                 
                 __NEGMAN1:
000588 95e0      	COM  R30
000589 95f0      	COM  R31
00058a 9560      	COM  R22
00058b 5fef      	SUBI R30,-1
00058c 4fff      	SBCI R31,-1
00058d 4f6f      	SBCI R22,-1
00058e 9508      	RET
                 
                 __SUBF12:
00058f 935f      	PUSH R21
000590 df81      	RCALL __UNPACK
000591 3890      	CPI  R25,0x80
000592 f149      	BREQ __ADDF129
000593 e850      	LDI  R21,0x80
000594 2615      	EOR  R1,R21
                 
                 __ADDF120:
000595 3870      	CPI  R23,0x80
000596 f121      	BREQ __ADDF128
                 __ADDF121:
000597 2f57      	MOV  R21,R23
000598 1b59      	SUB  R21,R25
000599 f12b      	BRVS __ADDF1211
00059a f412      	BRPL __ADDF122
00059b dfdc      	RCALL __SWAPACC
00059c cffa      	RJMP __ADDF121
                 __ADDF122:
00059d 3158      	CPI  R21,24
00059e f018      	BRLO __ADDF123
00059f 27aa      	CLR  R26
0005a0 27bb      	CLR  R27
0005a1 2788      	CLR  R24
                 __ADDF123:
0005a2 3058      	CPI  R21,8
0005a3 f028      	BRLO __ADDF124
0005a4 2fab      	MOV  R26,R27
0005a5 2fb8      	MOV  R27,R24
0005a6 2788      	CLR  R24
0005a7 5058      	SUBI R21,8
0005a8 cff9      	RJMP __ADDF123
                 __ADDF124:
0005a9 2355      	TST  R21
0005aa f029      	BREQ __ADDF126
                 __ADDF125:
0005ab 9586      	LSR  R24
0005ac 95b7      	ROR  R27
0005ad 95a7      	ROR  R26
0005ae 955a      	DEC  R21
0005af f7d9      	BRNE __ADDF125
                 __ADDF126:
0005b0 2d50      	MOV  R21,R0
0005b1 2551      	EOR  R21,R1
0005b2 f072      	BRMI __ADDF127
0005b3 dfd0      	RCALL __UADD12
0005b4 f438      	BRCC __ADDF129
0005b5 9567      	ROR  R22
0005b6 95f7      	ROR  R31
0005b7 95e7      	ROR  R30
0005b8 9573      	INC  R23
0005b9 f413      	BRVC __ADDF129
0005ba c020      	RJMP __MAXRES
                 __ADDF128:
0005bb dfbc      	RCALL __SWAPACC
                 __ADDF129:
0005bc df43      	RCALL __REPACK
0005bd 915f      	POP  R21
0005be 9508      	RET
                 __ADDF1211:
0005bf f7d8      	BRCC __ADDF128
0005c0 cffb      	RJMP __ADDF129
                 __ADDF127:
0005c1 1bea      	SUB  R30,R26
0005c2 0bfb      	SBC  R31,R27
0005c3 0b68      	SBC  R22,R24
0005c4 f051      	BREQ __ZERORES
0005c5 f410      	BRCC __ADDF1210
0005c6 9400      	COM  R0
0005c7 dfc0      	RCALL __NEGMAN1
                 __ADDF1210:
0005c8 2366      	TST  R22
0005c9 f392      	BRMI __ADDF129
0005ca 0fee      	LSL  R30
0005cb 1fff      	ROL  R31
0005cc 1f66      	ROL  R22
0005cd 957a      	DEC  R23
0005ce f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0005cf 27ee      	CLR  R30
0005d0 27ff      	CLR  R31
0005d1 2766      	CLR  R22
0005d2 2777      	CLR  R23
0005d3 915f      	POP  R21
0005d4 9508      	RET
                 
                 __MINRES:
0005d5 efef      	SER  R30
0005d6 efff      	SER  R31
0005d7 e76f      	LDI  R22,0x7F
0005d8 ef7f      	SER  R23
0005d9 915f      	POP  R21
0005da 9508      	RET
                 
                 __MAXRES:
0005db efef      	SER  R30
0005dc efff      	SER  R31
0005dd e76f      	LDI  R22,0x7F
0005de e77f      	LDI  R23,0x7F
0005df 915f      	POP  R21
0005e0 9508      	RET
                 
                 __DIVF21:
0005e1 935f      	PUSH R21
0005e2 df2f      	RCALL __UNPACK
0005e3 3870      	CPI  R23,0x80
0005e4 f421      	BRNE __DIVF210
0005e5 2011      	TST  R1
                 __DIVF211:
0005e6 f40a      	BRPL __DIVF219
0005e7 cfed      	RJMP __MINRES
                 __DIVF219:
0005e8 cff2      	RJMP __MAXRES
                 __DIVF210:
0005e9 3890      	CPI  R25,0x80
0005ea f409      	BRNE __DIVF218
                 __DIVF217:
0005eb cfe3      	RJMP __ZERORES
                 __DIVF218:
0005ec 2401      	EOR  R0,R1
0005ed 9408      	SEC
0005ee 0b97      	SBC  R25,R23
0005ef f41b      	BRVC __DIVF216
0005f0 f3d4      	BRLT __DIVF217
0005f1 2000      	TST  R0
0005f2 cff3      	RJMP __DIVF211
                 __DIVF216:
0005f3 2f79      	MOV  R23,R25
0005f4 931f      	PUSH R17
0005f5 932f      	PUSH R18
0005f6 933f      	PUSH R19
0005f7 934f      	PUSH R20
0005f8 2411      	CLR  R1
0005f9 2711      	CLR  R17
0005fa 2722      	CLR  R18
0005fb 2733      	CLR  R19
0005fc 2744      	CLR  R20
0005fd 2755      	CLR  R21
0005fe e290      	LDI  R25,32
                 __DIVF212:
0005ff 17ae      	CP   R26,R30
000600 07bf      	CPC  R27,R31
000601 0786      	CPC  R24,R22
000602 0741      	CPC  R20,R17
000603 f030      	BRLO __DIVF213
000604 1bae      	SUB  R26,R30
000605 0bbf      	SBC  R27,R31
000606 0b86      	SBC  R24,R22
000607 0b41      	SBC  R20,R17
000608 9408      	SEC
000609 c001      	RJMP __DIVF214
                 __DIVF213:
00060a 9488      	CLC
                 __DIVF214:
00060b 1f55      	ROL  R21
00060c 1f22      	ROL  R18
00060d 1f33      	ROL  R19
00060e 1c11      	ROL  R1
00060f 1faa      	ROL  R26
000610 1fbb      	ROL  R27
000611 1f88      	ROL  R24
000612 1f44      	ROL  R20
000613 959a      	DEC  R25
000614 f751      	BRNE __DIVF212
000615 01f9      	MOVW R30,R18
000616 2d61      	MOV  R22,R1
000617 914f      	POP  R20
000618 913f      	POP  R19
000619 912f      	POP  R18
00061a 911f      	POP  R17
00061b 2366      	TST  R22
00061c f032      	BRMI __DIVF215
00061d 0f55      	LSL  R21
00061e 1fee      	ROL  R30
00061f 1fff      	ROL  R31
000620 1f66      	ROL  R22
000621 957a      	DEC  R23
000622 f243      	BRVS __DIVF217
                 __DIVF215:
000623 ded2      	RCALL __ROUND_REPACK
000624 915f      	POP  R21
000625 9508      	RET
                 
                 __CMPF12:
000626 2399      	TST  R25
000627 f09a      	BRMI __CMPF120
000628 2377      	TST  R23
000629 f042      	BRMI __CMPF121
00062a 1797      	CP   R25,R23
00062b f048      	BRLO __CMPF122
00062c f429      	BRNE __CMPF121
00062d 17ae      	CP   R26,R30
00062e 07bf      	CPC  R27,R31
00062f 0786      	CPC  R24,R22
000630 f020      	BRLO __CMPF122
000631 f031      	BREQ __CMPF123
                 __CMPF121:
000632 9498      	CLZ
000633 9488      	CLC
000634 9508      	RET
                 __CMPF122:
000635 9498      	CLZ
000636 9408      	SEC
000637 9508      	RET
                 __CMPF123:
000638 9418      	SEZ
000639 9488      	CLC
00063a 9508      	RET
                 __CMPF120:
00063b 2377      	TST  R23
00063c f7c2      	BRPL __CMPF122
00063d 1797      	CP   R25,R23
00063e f398      	BRLO __CMPF121
00063f f7a9      	BRNE __CMPF122
000640 17ea      	CP   R30,R26
000641 07fb      	CPC  R31,R27
000642 0768      	CPC  R22,R24
000643 f388      	BRLO __CMPF122
000644 f399      	BREQ __CMPF123
000645 cfec      	RJMP __CMPF121
                 
                 __ANEGD1:
000646 95f0      	COM  R31
000647 9560      	COM  R22
000648 9570      	COM  R23
000649 95e1      	NEG  R30
00064a 4fff      	SBCI R31,-1
00064b 4f6f      	SBCI R22,-1
00064c 4f7f      	SBCI R23,-1
00064d 9508      	RET
                 
                 __CWD1:
00064e 2f6f      	MOV  R22,R31
00064f 0f66      	ADD  R22,R22
000650 0b66      	SBC  R22,R22
000651 2f76      	MOV  R23,R22
000652 9508      	RET
                 
                 __GETW1PF:
000653 9005      	LPM  R0,Z+
000654 91f4      	LPM  R31,Z
000655 2de0      	MOV  R30,R0
000656 9508      	RET
                 
                 __GETW2PF:
000657 91a5      	LPM  R26,Z+
000658 91b4      	LPM  R27,Z
000659 9508      	RET
                 
                 __PUTPARD2:
00065a 939a      	ST   -Y,R25
00065b 938a      	ST   -Y,R24
00065c 93ba      	ST   -Y,R27
00065d 93aa      	ST   -Y,R26
00065e 9508      	RET
                 
                 __SWAPD12:
00065f 2e18      	MOV  R1,R24
000660 2f86      	MOV  R24,R22
000661 2d61      	MOV  R22,R1
000662 2e19      	MOV  R1,R25
000663 2f97      	MOV  R25,R23
000664 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000665 2e1b      	MOV  R1,R27
000666 2fbf      	MOV  R27,R31
000667 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000668 2e1a      	MOV  R1,R26
000669 2fae      	MOV  R26,R30
00066a 2de1      	MOV  R30,R1
00066b 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
00066c 0fac      	ADD  R26,R28
00066d 1fbd      	ADC  R27,R29
                 __INITLOC0:
00066e 9005      	LPM  R0,Z+
00066f 920d      	ST   X+,R0
000670 958a      	DEC  R24
000671 f7e1      	BRNE __INITLOC0
000672 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :  23 r1 :  26 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   2 
r16:  34 r17:   8 r18:   5 r19:   4 r20:  14 r21:  53 r22:  53 r23:  47 
r24:  37 r25:  25 r26:  95 r27:  46 r28:  11 r29:   2 r30: 173 r31:  55 
x  :  10 y  :  88 z  :  14 
Registers used: 22 out of 35 (62.9%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  10 add   :   8 
adiw  :  10 and   :   2 andi  :   8 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   4 brcs  :   0 break :   0 breq  :  18 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  11 
brlt  :   2 brmi  :   7 brne  :  23 brpl  :   7 brsh  :   2 brtc  :   1 
brts  :   1 brvc  :   3 brvs  :   3 bset  :   0 bst   :   0 call  :  39 
cbi   :   7 cbr   :   0 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  22 cls   :   0 clt   :   2 clv   :   0 clz   :   2 com   :   8 
cp    :   5 cpc   :  11 cpi   :  22 cpse  :   0 dec   :  10 des   :   0 
eor   :   6 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   1 inc   :   1 jmp   :  31 ld    :  22 ldd   :  28 ldi   : 104 
lds   :  16 lpm   :  18 lsl   :  14 lsr   :   2 mov   :  44 movw  :  18 
mul   :   0 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   0 
ori   :   3 out   :   7 pop   :  12 push  :  11 rcall :  31 ret   :  33 
reti  :   1 rjmp  :  45 rol   :  22 ror   :  12 sbc   :   7 sbci  :   8 
sbi   :  13 sbic  :   0 sbis  :   0 sbiw  :  11 sbr   :   0 sbrc  :   0 
sbrs  :   1 sec   :   3 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   3 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  44 std   :   4 sts   :  24 sub   :   4 subi  :  15 swap  :   1 
tst   :  15 wdr   :   1 
Instructions used: 72 out of 116 (62.1%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000ce6   2014   1288   3302   32768  10.1%
[.dseg] 0x000100 0x000324      0     36     36    2048   1.8%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 5 warnings
