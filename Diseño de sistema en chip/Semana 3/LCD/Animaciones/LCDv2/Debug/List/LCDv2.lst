
AVRASM ver. 2.1.30  C:\Users\nerij\OneDrive\Escritorio\Diseño de sistema en chip\Semana 3\LCD\LCDv2\Debug\List\LCDv2.asm Mon Apr 12 19:59:18 2021

C:\Users\nerij\OneDrive\Escritorio\Diseño de sistema en chip\Semana 3\LCD\LCDv2\Debug\List\LCDv2.asm(1085): warning: Register r4 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.43 Evaluation
                 ;(C) Copyright 1998-2021 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega328P
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _cursor=R4
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0062 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 _0x3:
000034 0303
000035 0203
000036 0c02
000037 0800      	.DB  0x3,0x3,0x3,0x2,0x2,0xC,0x0,0x8
000038 0100
000039 0600      	.DB  0x0,0x1,0x0,0x6
                 _0x22:
00003a 0a00
00003b 000a
00003c 1104
C:\Users\nerij\OneDrive\Escritorio\Diseño de sistema en chip\Semana 3\LCD\LCDv2\Debug\List\LCDv2.asm(1128): warning: .cseg .db misalignment - padding zero byte
00003d 000e      	.DB  0x0,0xA,0xA,0x0,0x4,0x11,0xE
                 _0x23:
00003e 151f
00003f 1f15
000040 0a1f
000041 1b0a      	.DB  0x1F,0x15,0x15,0x1F,0x1F,0xA,0xA,0x1B
                 _0x0:
000042 6944
000043 6573
000044 6f00
000045 5320      	.DB  0x44,0x69,0x73,0x65,0x0,0x6F,0x20,0x53
000046 7369
000047 6574
000048 616d
000049 0073      	.DB  0x69,0x73,0x74,0x65,0x6D,0x61,0x73,0x0
00004a 6e65
00004b 6320
00004c 6968
00004d 0070      	.DB  0x65,0x6E,0x20,0x63,0x68,0x69,0x70,0x0
00004e 7345
00004f 6174
000050 7320
000051 6d65      	.DB  0x45,0x73,0x74,0x61,0x20,0x73,0x65,0x6D
000052 6e61
000053 0061
000054 6574
000055 656e      	.DB  0x61,0x6E,0x61,0x0,0x74,0x65,0x6E,0x65
000056 6f6d
000057 2073
000058 6e49
000059 6574      	.DB  0x6D,0x6F,0x73,0x20,0x49,0x6E,0x74,0x65
00005a 006c      	.DB  0x6C,0x0
                 
                 __GLOBAL_INI_TBL:
00005b 0007      	.DW  0x07
00005c 0300      	.DW  _car0
00005d 0074      	.DW  _0x22*2
                 
00005e 0008      	.DW  0x08
00005f 0308      	.DW  _car1
000060 007c      	.DW  _0x23*2
                 
                 _0xFFFFFFFF:
000061 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000062 94f8      	CLI
000063 27ee      	CLR  R30
000064 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000065 e0f1      	LDI  R31,1
000066 bff5      	OUT  MCUCR,R31
000067 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000068 e08d      	LDI  R24,(14-2)+1
000069 e0a2      	LDI  R26,2
00006a 27bb      	CLR  R27
                 __CLEAR_REG:
00006b 93ed      	ST   X+,R30
00006c 958a      	DEC  R24
00006d f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00006e e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00006f e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000070 e0a0      	LDI  R26,LOW(__SRAM_START)
000071 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000072 93ed      	ST   X+,R30
000073 9701      	SBIW R24,1
000074 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000075 ebe6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000076 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000077 9185      	LPM  R24,Z+
000078 9195      	LPM  R25,Z+
000079 9700      	SBIW R24,0
00007a f061      	BREQ __GLOBAL_INI_END
00007b 91a5      	LPM  R26,Z+
00007c 91b5      	LPM  R27,Z+
00007d 9005      	LPM  R0,Z+
00007e 9015      	LPM  R1,Z+
00007f 01bf      	MOVW R22,R30
000080 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000081 9005      	LPM  R0,Z+
000082 920d      	ST   X+,R0
000083 9701      	SBIW R24,1
000084 f7e1      	BRNE __GLOBAL_INI_LOOP
000085 01fb      	MOVW R30,R22
000086 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
000087 e0e0      	LDI  R30,__GPIOR0_INIT
000088 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000089 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00008a bfed      	OUT  SPL,R30
00008b e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00008c bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00008d e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00008e e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00008f 940c 014a 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                     .equ __lcd_port=0x05
                     .equ __lcd_EN=1
                     .equ __lcd_RS=0
                     .equ __lcd_D4=2
                     .equ __lcd_D5=3
                     .equ __lcd_D6=4
                     .equ __lcd_D7=5
                 ; 0000 0010    #endasm
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 
                 	.CSEG
                 _SetupLCD:
                 ; .FSTART _SetupLCD
000091 972c      	SBIW R28,12
000092 e08c      	LDI  R24,12
                +
000093 e060     +LDI R22 , LOW ( 0 )
000094 e070     +LDI R23 , HIGH ( 0 )
                 	__GETWRN 22,23,0
000095 e6e8      	LDI  R30,LOW(_0x3*2)
000096 e0f0      	LDI  R31,HIGH(_0x3*2)
000097 d0f3      	RCALL __INITLOCB
000098 931a      	ST   -Y,R17
                 ;	TableSetup -> Y+1
                 ;	i -> R17
                 ; 0000 0014     SBI __lcd_port-1,__lcd_EN
000099 9a21          SBI __lcd_port-1,__lcd_EN
00009a 9a20          SBI __lcd_port-1,__lcd_RS
00009b 9a22          SBI __lcd_port-1,__lcd_D4
00009c 9a23          SBI __lcd_port-1,__lcd_D5
00009d 9a24          SBI __lcd_port-1,__lcd_D6
00009e 9a25          SBI __lcd_port-1,__lcd_D7
00009f e3a2      	LDI  R26,LOW(50)
0000a0 e0b0      	LDI  R27,0
0000a1 d0f5      	RCALL _delay_ms
0000a2 e010      	LDI  R17,LOW(0)
                 _0x5:
0000a3 301c      	CPI  R17,12
0000a4 f470      	BRSH _0x6
0000a5 e0a2      	LDI  R26,LOW(2)
0000a6 e0b0      	LDI  R27,0
0000a7 d0ef      	RCALL _delay_ms
0000a8 2fe1      	MOV  R30,R17
0000a9 e0f0      	LDI  R31,0
0000aa 01de      	MOVW R26,R28
0000ab 9611      	ADIW R26,1
0000ac 0fae      	ADD  R26,R30
0000ad 1fbf      	ADC  R27,R31
0000ae 91ac      	LD   R26,X
0000af d00d      	RCALL _SendDataBitsLCD
0000b0 d009      	RCALL _PulseEn
0000b1 5f1f      	SUBI R17,-1
0000b2 cff0      	RJMP _0x5
                 _0x6:
0000b3 e0ec      	LDI  R30,LOW(12)
0000b4 2e4e      	MOV  R4,R30
0000b5 2da4      	MOV  R26,R4
0000b6 d01e      	RCALL _WriteComandLCD
0000b7 8118      	LDD  R17,Y+0
0000b8 962d      	ADIW R28,13
0000b9 9508      	RET
                 ; .FEND
                 _PulseEn:
                 ; .FSTART _PulseEn
0000ba 9a29          SBI __lcd_port,__lcd_EN  // EN=1;
0000bb 9829          CBI __lcd_port,__lcd_EN // EN=0;
0000bc 9508      	RET
                 ; .FEND
                 _SendDataBitsLCD:
                 ; .FSTART _SendDataBitsLCD
0000bd 931a      	ST   -Y,R17
0000be 2f1a      	MOV  R17,R26
                 ;	dato -> R17
0000bf ff13      	SBRS R17,3
0000c0 c002      	RJMP _0x7
0000c1 9a2d      	SBI __lcd_port,__lcd_D7
0000c2 c001      	RJMP _0x8
                 _0x7:
0000c3 982d      	CBI __lcd_port,__lcd_D7
                 _0x8:
0000c4 ff12      	SBRS R17,2
0000c5 c002      	RJMP _0x9
0000c6 9a2c      	SBI __lcd_port,__lcd_D6
0000c7 c001      	RJMP _0xA
                 _0x9:
0000c8 982c      	CBI __lcd_port,__lcd_D6
                 _0xA:
0000c9 ff11      	SBRS R17,1
0000ca c002      	RJMP _0xB
0000cb 9a2b      	SBI __lcd_port,__lcd_D5
0000cc c001      	RJMP _0xC
                 _0xB:
0000cd 982b      	CBI __lcd_port,__lcd_D5
                 _0xC:
0000ce ff10      	SBRS R17,0
0000cf c002      	RJMP _0xD
0000d0 9a2a      	SBI __lcd_port,__lcd_D4
0000d1 c001      	RJMP _0xE
                 _0xD:
0000d2 982a      	CBI __lcd_port,__lcd_D4
                 _0xE:
0000d3 9119      	LD   R17,Y+
0000d4 9508      	RET
                 ; .FEND
                 _WriteComandLCD:
                 ; .FSTART _WriteComandLCD
0000d5 931a      	ST   -Y,R17
0000d6 930a      	ST   -Y,R16
0000d7 2f0a      	MOV  R16,R26
                 ;	Comando -> R16
                 ;	tempComando -> R17
0000d8 9828      	CBI __lcd_port,__lcd_RS
0000d9 c004      	RJMP _0x2000001
                 ; .FEND
                 _CharLCD:
                 ; .FSTART _CharLCD
0000da 931a      	ST   -Y,R17
0000db 930a      	ST   -Y,R16
0000dc 2f0a      	MOV  R16,R26
                 ;	dato -> R16
                 ;	tempdato -> R17
0000dd 9a28      	SBI __lcd_port,__lcd_RS
                 _0x2000001:
0000de e0a2      	LDI  R26,LOW(2)
0000df e0b0      	LDI  R27,0
0000e0 d0b6      	RCALL _delay_ms
0000e1 2fe0      	MOV  R30,R16
0000e2 7fe0      	ANDI R30,LOW(0xF0)
0000e3 2f1e      	MOV  R17,R30
0000e4 9512      	SWAP R17
0000e5 701f      	ANDI R17,0xF
0000e6 2fa1      	MOV  R26,R17
0000e7 dfd5      	RCALL _SendDataBitsLCD
0000e8 dfd1      	RCALL _PulseEn
0000e9 2fe0      	MOV  R30,R16
0000ea 70ef      	ANDI R30,LOW(0xF)
0000eb 2f1e      	MOV  R17,R30
0000ec 2fa1      	MOV  R26,R17
0000ed dfcf      	RCALL _SendDataBitsLCD
0000ee e0a2      	LDI  R26,LOW(2)
0000ef e0b0      	LDI  R27,0
0000f0 d0a6      	RCALL _delay_ms
0000f1 dfc8      	RCALL _PulseEn
0000f2 9109      	LD   R16,Y+
0000f3 9119      	LD   R17,Y+
0000f4 9508      	RET
                 ; .FEND
                 _StringLCD:
                 ; .FSTART _StringLCD
0000f5 d08b      	RCALL __SAVELOCR4
0000f6 019d      	MOVW R18,R26
                 ;	Mensaje -> R18,R19
                 ;	i -> R17
0000f7 e010      	LDI  R17,LOW(0)
                 _0x10:
0000f8 2fe1      	MOV  R30,R17
0000f9 5f1f      	SUBI R17,-1
0000fa e0f0      	LDI  R31,0
0000fb 0fe2      	ADD  R30,R18
0000fc 1ff3      	ADC  R31,R19
0000fd 91a4      	LPM  R26,Z
0000fe dfdb      	RCALL _CharLCD
0000ff 2fe1      	MOV  R30,R17
000100 e0f0      	LDI  R31,0
000101 0fe2      	ADD  R30,R18
000102 1ff3      	ADC  R31,R19
000103 91e4      	LPM  R30,Z
000104 30e0      	CPI  R30,0
000105 f791      	BRNE _0x10
000106 d07f      	RCALL __LOADLOCR4
000107 9624      	ADIW R28,4
000108 9508      	RET
                 ; .FEND
                 ;	Mensaje -> R20,R21
                 ;	tiempo -> R18,R19
                 ;	i -> R17
                 ;	Mensaje -> R18,R19
                 ;	i -> R17
                 _EraseLCD:
                 ; .FSTART _EraseLCD
000109 e0a1      	LDI  R26,LOW(1)
00010a dfca      	RCALL _WriteComandLCD
00010b 9508      	RET
                 ; .FEND
                 _MoveCursor:
                 ; .FSTART _MoveCursor
00010c 931a      	ST   -Y,R17
00010d 930a      	ST   -Y,R16
00010e 2f1a      	MOV  R17,R26
00010f 810a      	LDD  R16,Y+2
                 ;	x -> R16
                 ;	y -> R17
000110 2fe1      	MOV  R30,R17
000111 e0f0      	LDI  R31,0
000112 9730      	SBIW R30,0
000113 f419      	BRNE _0x1B
000114 2fa0      	MOV  R26,R16
000115 58a0      	SUBI R26,-LOW(128)
000116 c014      	RJMP _0x28
                 _0x1B:
000117 30e1      	CPI  R30,LOW(0x1)
000118 e0a0      	LDI  R26,HIGH(0x1)
000119 07fa      	CPC  R31,R26
00011a f419      	BRNE _0x1C
00011b 2fa0      	MOV  R26,R16
00011c 54a0      	SUBI R26,-LOW(192)
00011d c00d      	RJMP _0x28
                 _0x1C:
00011e 30e2      	CPI  R30,LOW(0x2)
00011f e0a0      	LDI  R26,HIGH(0x2)
000120 07fa      	CPC  R31,R26
000121 f419      	BRNE _0x1D
000122 2fa0      	MOV  R26,R16
000123 56ac      	SUBI R26,-LOW(148)
000124 c006      	RJMP _0x28
                 _0x1D:
000125 30e3      	CPI  R30,LOW(0x3)
000126 e0a0      	LDI  R26,HIGH(0x3)
000127 07fa      	CPC  R31,R26
000128 f419      	BRNE _0x1A
000129 2fa0      	MOV  R26,R16
00012a 52ac      	SUBI R26,-LOW(212)
                 _0x28:
00012b dfa9      	RCALL _WriteComandLCD
                 _0x1A:
00012c 8119      	LDD  R17,Y+1
00012d 8108      	LDD  R16,Y+0
00012e 9623      	ADIW R28,3
00012f 9508      	RET
                 ; .FEND
                 _CreateChar:
                 ; .FSTART _CreateChar
000130 d050      	RCALL __SAVELOCR4
000131 019d      	MOVW R18,R26
000132 810c      	LDD  R16,Y+4
                 ;	NoCaracter -> R16
                 ;	datos -> R18,R19
                 ;	i -> R17
000133 2fe0      	MOV  R30,R16
000134 0fee      	LSL  R30
000135 0fee      	LSL  R30
000136 0fee      	LSL  R30
000137 5ce0      	SUBI R30,-LOW(64)
000138 2fae      	MOV  R26,R30
000139 df9b      	RCALL _WriteComandLCD
00013a e010      	LDI  R17,LOW(0)
                 _0x20:
00013b 3018      	CPI  R17,8
00013c f440      	BRSH _0x21
00013d 01d9      	MOVW R26,R18
00013e 27ee      	CLR  R30
00013f 0fa1      	ADD  R26,R17
000140 1fbe      	ADC  R27,R30
000141 91ac      	LD   R26,X
000142 df97      	RCALL _CharLCD
000143 5f1f      	SUBI R17,-1
000144 cff6      	RJMP _0x20
                 _0x21:
000145 e8a0      	LDI  R26,LOW(128)
000146 df8e      	RCALL _WriteComandLCD
000147 d03e      	RCALL __LOADLOCR4
000148 9625      	ADIW R28,5
000149 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 ;void main(void)
                 ; 0000 001A {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 001B SetupLCD();
00014a df46      	RCALL _SetupLCD
                 ; 0000 001C CreateChar(0,car0);
00014b e0e0      	LDI  R30,LOW(0)
00014c 93ea      	ST   -Y,R30
00014d e0a0      	LDI  R26,LOW(_car0)
00014e e0b3      	LDI  R27,HIGH(_car0)
00014f dfe0      	RCALL _CreateChar
                 ; 0000 001D CreateChar(1,car1);
000150 e0e1      	LDI  R30,LOW(1)
000151 93ea      	ST   -Y,R30
000152 e0a8      	LDI  R26,LOW(_car1)
000153 e0b3      	LDI  R27,HIGH(_car1)
000154 dfdb      	RCALL _CreateChar
                 ; 0000 001E 
                 ; 0000 001F while (1)
                 _0x24:
                 ; 0000 0020 {
                 ; 0000 0021 MoveCursor(0,0);
000155 e0e0      	LDI  R30,LOW(0)
000156 93ea      	ST   -Y,R30
000157 e0a0      	LDI  R26,LOW(0)
000158 dfb3      	RCALL _MoveCursor
                 ; 0000 0022 StringLCD("Dise");
                +
000159 e8a4     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
00015a e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
00015b df99      	RCALL _StringLCD
                 ; 0000 0023 CharLCD(0xEE);
00015c eeae      	LDI  R26,LOW(238)
00015d df7c      	RCALL _CharLCD
                 ; 0000 0024 StringLCD("o Sistemas");
                +
00015e e8a9     +LDI R26 , LOW ( 2 * _0x0 + ( 5 ) )
00015f e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 5 ) )
                 	__POINTW2FN _0x0,5
000160 df94      	RCALL _StringLCD
                 ; 0000 0025 MoveCursor(4,1);
000161 e0e4      	LDI  R30,LOW(4)
000162 93ea      	ST   -Y,R30
000163 e0a1      	LDI  R26,LOW(1)
000164 dfa7      	RCALL _MoveCursor
                 ; 0000 0026 StringLCD("en chip");
                +
000165 e9a4     +LDI R26 , LOW ( 2 * _0x0 + ( 16 ) )
000166 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 16 ) )
                 	__POINTW2FN _0x0,16
000167 df8d      	RCALL _StringLCD
                 ; 0000 0027 CharLCD(0);
000168 e0a0      	LDI  R26,LOW(0)
000169 d012      	RCALL SUBOPT_0x0
                 ; 0000 0028 delay_ms(2000);
                 ; 0000 0029 EraseLCD();
                 ; 0000 002A 
                 ; 0000 002B MoveCursor(2,0);
00016a e0e2      	LDI  R30,LOW(2)
00016b 93ea      	ST   -Y,R30
00016c e0a0      	LDI  R26,LOW(0)
00016d df9e      	RCALL _MoveCursor
                 ; 0000 002C StringLCD("Esta semana");
                +
00016e e9ac     +LDI R26 , LOW ( 2 * _0x0 + ( 24 ) )
00016f e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 24 ) )
                 	__POINTW2FN _0x0,24
000170 df84      	RCALL _StringLCD
                 ; 0000 002D MoveCursor(1,1);
000171 e0e1      	LDI  R30,LOW(1)
000172 93ea      	ST   -Y,R30
000173 e0a1      	LDI  R26,LOW(1)
000174 df97      	RCALL _MoveCursor
                 ; 0000 002E StringLCD("tenemos Intel");
                +
000175 eaa8     +LDI R26 , LOW ( 2 * _0x0 + ( 36 ) )
000176 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 36 ) )
                 	__POINTW2FN _0x0,36
000177 df7d      	RCALL _StringLCD
                 ; 0000 002F CharLCD(1);
000178 e0a1      	LDI  R26,LOW(1)
000179 d002      	RCALL SUBOPT_0x0
                 ; 0000 0030 delay_ms(2000);
                 ; 0000 0031 EraseLCD();
                 ; 0000 0032 
                 ; 0000 0033 }
00017a cfda      	RJMP _0x24
                 ; 0000 0034 }
                 _0x27:
00017b cfff      	RJMP _0x27
                 ; .FEND
                 
                 	.DSEG
                 _car0:
000300           	.BYTE 0x8
                 _car1:
000308           	.BYTE 0x8
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x0:
00017c df5d      	RCALL _CharLCD
00017d eda0      	LDI  R26,LOW(2000)
00017e e0b7      	LDI  R27,HIGH(2000)
00017f d017      	RCALL _delay_ms
000180 cf88      	RJMP _EraseLCD
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR4:
000181 933a      	ST   -Y,R19
                 __SAVELOCR3:
000182 932a      	ST   -Y,R18
                 __SAVELOCR2:
000183 931a      	ST   -Y,R17
000184 930a      	ST   -Y,R16
000185 9508      	RET
                 
                 __LOADLOCR4:
000186 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000187 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000188 8119      	LDD  R17,Y+1
000189 8108      	LD   R16,Y
00018a 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
00018b 93af      	PUSH R26
00018c 93bf      	PUSH R27
00018d 01db      	MOVW R26,R22
00018e 0fac      	ADD  R26,R28
00018f 1fbd      	ADC  R27,R29
                 __INITLOC0:
000190 9005      	LPM  R0,Z+
000191 920d      	ST   X+,R0
000192 958a      	DEC  R24
000193 f7e1      	BRNE __INITLOC0
000194 91bf      	POP  R27
000195 91af      	POP  R26
000196 9508      	RET
                 
                 _delay_ms:
000197 9610      	adiw r26,0
000198 f039      	breq __delay_ms1
                 __delay_ms0:
000199 95a8      	wdr
                +
00019a ef8a     +LDI R24 , LOW ( 0xFA )
00019b e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
00019c 9701     +SBIW R24 , 1
00019d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
00019e 9711      	sbiw r26,1
00019f f7c9      	brne __delay_ms0
                 __delay_ms1:
0001a0 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :   6 r1 :   1 r2 :   0 r3 :   0 r4 :   2 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:  18 r17:  36 r18:   7 r19:   4 r20:   0 r21:   0 r22:   4 r23:   1 
r24:  11 r25:   3 r26:  62 r27:  20 r28:   8 r29:   2 r30:  57 r31:  14 
x  :   6 y  :  30 z  :  10 
Registers used: 20 out of 35 (57.1%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   5 add   :   5 
adiw  :   6 and   :   0 andi  :   3 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   2 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   0 brmi  :   0 brne  :  11 brpl  :   0 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   6 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   3 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   0 cpc   :   3 cpi   :   6 cpse  :   0 dec   :   2 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   0 inc   :   0 jmp   :  27 ld    :   6 ldd   :   8 ldi   :  71 
lds   :   0 lpm   :  12 lsl   :   3 lsr   :   0 mov   :  22 movw  :   8 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   0 
ori   :   0 out   :   6 pop   :   2 push  :   2 rcall :  39 ret   :  12 
reti  :   0 rjmp  :  18 rol   :   0 ror   :   0 sbc   :   0 sbci  :   0 
sbi   :  12 sbic  :   0 sbis  :   0 sbiw  :   7 sbr   :   0 sbrc  :   0 
sbrs  :   4 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  22 std   :   0 sts   :   0 sub   :   0 subi  :   8 swap  :   1 
tst   :   0 wdr   :   1 
Instructions used: 34 out of 116 (29.3%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000342    742     92    834   32768   2.5%
[.dseg] 0x000100 0x000310      0     16     16    2048   0.8%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 2 warnings
