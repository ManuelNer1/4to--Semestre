
AVRASM ver. 2.1.30  C:\Users\ManuelNeri\Desktop\Puerto Serial Fecha\Debug\List\program.asm Fri Apr 30 17:21:10 2021

C:\Users\ManuelNeri\Desktop\Puerto Serial Fecha\Debug\List\program.asm(1090): warning: Register r3 already defined by the .DEF directive
C:\Users\ManuelNeri\Desktop\Puerto Serial Fecha\Debug\List\program.asm(1091): warning: Register r4 already defined by the .DEF directive
C:\Users\ManuelNeri\Desktop\Puerto Serial Fecha\Debug\List\program.asm(1092): warning: Register r5 already defined by the .DEF directive
C:\Users\ManuelNeri\Desktop\Puerto Serial Fecha\Debug\List\program.asm(1093): warning: Register r6 already defined by the .DEF directive
C:\Users\ManuelNeri\Desktop\Puerto Serial Fecha\Debug\List\program.asm(1094): warning: Register r7 already defined by the .DEF directive
C:\Users\ManuelNeri\Desktop\Puerto Serial Fecha\Debug\List\program.asm(1095): warning: Register r8 already defined by the .DEF directive
C:\Users\ManuelNeri\Desktop\Puerto Serial Fecha\Debug\List\program.asm(1096): warning: Register r9 already defined by the .DEF directive
C:\Users\ManuelNeri\Desktop\Puerto Serial Fecha\Debug\List\program.asm(1097): warning: Register r10 already defined by the .DEF directive
C:\Users\ManuelNeri\Desktop\Puerto Serial Fecha\Debug\List\program.asm(1098): warning: Register r12 already defined by the .DEF directive
C:\Users\ManuelNeri\Desktop\Puerto Serial Fecha\Debug\List\program.asm(1099): warning: Register r11 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega328P
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _dia=R3
                 	.DEF _dia_msb=R4
                 	.DEF _mes=R5
                 	.DEF _mes_msb=R6
                 	.DEF _year=R7
                 	.DEF _year_msb=R8
                 	.DEF _diasemana=R9
                 	.DEF _diasemana_msb=R10
                 	.DEF _sep1=R12
                 	.DEF _sep2=R11
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 00a0 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
000034 2710
000035 03e8
000036 0064
000037 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000038 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000039 1000
00003a 0100
00003b 0010
00003c 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
00003d 6144
00003e 656d
00003f 6c20
000040 2061      	.DB  0x44,0x61,0x6D,0x65,0x20,0x6C,0x61,0x20
000041 6566
000042 6863
000043 2061
000044 6e65      	.DB  0x66,0x65,0x63,0x68,0x61,0x20,0x65,0x6E
000045 6620
000046 726f
000047 616d
000048 6f74      	.DB  0x20,0x66,0x6F,0x72,0x6D,0x61,0x74,0x6F
000049 6420
00004a 2d64
00004b 6d6d
00004c 792d      	.DB  0x20,0x64,0x64,0x2D,0x6D,0x6D,0x2D,0x79
00004d 7979
00004e 2d20
00004f 203e
000050 2500      	.DB  0x79,0x79,0x20,0x2D,0x3E,0x20,0x0,0x25
000051 2569
000052 2563
000053 2569
000054 2563      	.DB  0x69,0x25,0x63,0x25,0x69,0x25,0x63,0x25
000055 0069
000056 6c45
000057 6420
000058 6169      	.DB  0x69,0x0,0x45,0x6C,0x20,0x64,0x69,0x61
000059 6420
00005a 2065
00005b 616c
00005c 7320      	.DB  0x20,0x64,0x65,0x20,0x6C,0x61,0x20,0x73
00005d 6d65
00005e 6e61
00005f 2061
000060 7365      	.DB  0x65,0x6D,0x61,0x6E,0x61,0x20,0x65,0x73
000061 203a
000062 0020
000063 4153
000064 4142      	.DB  0x3A,0x20,0x20,0x0,0x53,0x41,0x42,0x41
000065 4f44
000066 0a20
000067 000d
000068 4f44      	.DB  0x44,0x4F,0x20,0xA,0xD,0x0,0x44,0x4F
000069 494d
00006a 474e
00006b 204f
00006c 0d0a      	.DB  0x4D,0x49,0x4E,0x47,0x4F,0x20,0xA,0xD
00006d 4c00
00006e 4e55
00006f 5345
000070 0a20      	.DB  0x0,0x4C,0x55,0x4E,0x45,0x53,0x20,0xA
000071 000d
000072 414d
000073 5452
000074 5345      	.DB  0xD,0x0,0x4D,0x41,0x52,0x54,0x45,0x53
000075 0a20
000076 000d
000077 494d
000078 5245      	.DB  0x20,0xA,0xD,0x0,0x4D,0x49,0x45,0x52
000079 4f43
00007a 454c
00007b 2053
00007c 0d0a      	.DB  0x43,0x4F,0x4C,0x45,0x53,0x20,0xA,0xD
00007d 4a00
00007e 4555
00007f 4556
000080 2053      	.DB  0x0,0x4A,0x55,0x45,0x56,0x45,0x53,0x20
000081 0d0a
000082 5600
000083 4549
000084 4e52      	.DB  0xA,0xD,0x0,0x56,0x49,0x45,0x52,0x4E
000085 5345
000086 0a20
000087 000d
000088 6f46      	.DB  0x45,0x53,0x20,0xA,0xD,0x0,0x46,0x6F
000089 6d72
00008a 7461
00008b 206f
00008c 6f4e      	.DB  0x72,0x6D,0x61,0x74,0x6F,0x20,0x4E,0x6F
00008d 5620
00008e 6c61
00008f 6469
000090 6f6f      	.DB  0x20,0x56,0x61,0x6C,0x69,0x64,0x6F,0x6F
000091 6f6f
000092 6f6f
000093 0a20
000094 000d      	.DB  0x6F,0x6F,0x6F,0x6F,0x20,0xA,0xD,0x0
000095 6f46
000096 6d72
000097 7461
000098 206f      	.DB  0x46,0x6F,0x72,0x6D,0x61,0x74,0x6F,0x20
000099 6f4e
00009a 5620
00009b 6c61
00009c 6469      	.DB  0x4E,0x6F,0x20,0x56,0x61,0x6C,0x69,0x64
00009d 206f
00009e 0d0a
C:\Users\ManuelNeri\Desktop\Puerto Serial Fecha\Debug\List\program.asm(1169): warning: .cseg .db misalignment - padding zero byte
00009f 0000      	.DB  0x6F,0x20,0xA,0xD,0x0
                 __RESET:
0000a0 94f8      	CLI
0000a1 27ee      	CLR  R30
0000a2 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0000a3 e0f1      	LDI  R31,1
0000a4 bff5      	OUT  MCUCR,R31
0000a5 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
0000a6 e08d      	LDI  R24,(14-2)+1
0000a7 e0a2      	LDI  R26,2
0000a8 27bb      	CLR  R27
                 __CLEAR_REG:
0000a9 93ed      	ST   X+,R30
0000aa 958a      	DEC  R24
0000ab f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000ac e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000ad e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000ae e0a0      	LDI  R26,LOW(__SRAM_START)
0000af e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0000b0 93ed      	ST   X+,R30
0000b1 9701      	SBIW R24,1
0000b2 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GPIOR0 INITIALIZATION
0000b3 e0e0      	LDI  R30,__GPIOR0_INIT
0000b4 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000b5 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000b6 bfed      	OUT  SPL,R30
0000b7 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000b8 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000b9 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000ba e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000bb 940c 00bd 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 ;/*
                 ; * program.c
                 ; *
                 ; * Created: 30/04/2021 02:28:10 p. m.
                 ; * Author: ManuelNeri
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <stdio.h>
                 ;
                 ;int dia, mes, year, diasemana;
                 ;char sep1, sep2;
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0010 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0011     UCSR0A = 0x02;
0000bd e0e2      	LDI  R30,LOW(2)
0000be 93e0 00c0 	STS  192,R30
                 ; 0000 0012     UCSR0B = 0x18;
0000c0 e1e8      	LDI  R30,LOW(24)
0000c1 93e0 00c1 	STS  193,R30
                 ; 0000 0013     UCSR0C = 0X06;
0000c3 e0e6      	LDI  R30,LOW(6)
0000c4 93e0 00c2 	STS  194,R30
                 ; 0000 0014     UBRR0H = 0x00;
0000c6 e0e0      	LDI  R30,LOW(0)
0000c7 93e0 00c5 	STS  197,R30
                 ; 0000 0015     UBRR0L = 0x0C;
0000c9 e0ec      	LDI  R30,LOW(12)
0000ca 93e0 00c4 	STS  196,R30
                 ; 0000 0016 
                 ; 0000 0017     while (1)
                 _0x3:
                 ; 0000 0018     {
                 ; 0000 0019         printf("Dame la fecha en formato dd-mm-yyy -> ");
                +
0000cc e7ea     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000cd e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000ce 940e 04bf 	CALL SUBOPT_0x0
                 ; 0000 001A         scanf("%i%c%i%c%i",&dia,&sep1,&mes,&sep2,&year);
                +
0000d0 eae1     +LDI R30 , LOW ( 2 * _0x0 + ( 39 ) )
0000d1 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 39 ) )
                 	__POINTW1FN _0x0,39
0000d2 93fa      	ST   -Y,R31
0000d3 93ea      	ST   -Y,R30
                +
0000d4 e0e3     +LDI R30 , LOW ( 0x3 )
0000d5 e0f0     +LDI R31 , HIGH ( 0x3 )
0000d6 e060     +LDI R22 , BYTE3 ( 0x3 )
0000d7 e070     +LDI R23 , BYTE4 ( 0x3 )
                 	__GETD1N 0x3
0000d8 940e 0560 	CALL __PUTPARD1
                +
0000da e0ec     +LDI R30 , LOW ( 0xC )
0000db e0f0     +LDI R31 , HIGH ( 0xC )
0000dc e060     +LDI R22 , BYTE3 ( 0xC )
0000dd e070     +LDI R23 , BYTE4 ( 0xC )
                 	__GETD1N 0xC
0000de 940e 0560 	CALL __PUTPARD1
                +
0000e0 e0e5     +LDI R30 , LOW ( 0x5 )
0000e1 e0f0     +LDI R31 , HIGH ( 0x5 )
0000e2 e060     +LDI R22 , BYTE3 ( 0x5 )
0000e3 e070     +LDI R23 , BYTE4 ( 0x5 )
                 	__GETD1N 0x5
0000e4 940e 0560 	CALL __PUTPARD1
                +
0000e6 e0eb     +LDI R30 , LOW ( 0xB )
0000e7 e0f0     +LDI R31 , HIGH ( 0xB )
0000e8 e060     +LDI R22 , BYTE3 ( 0xB )
0000e9 e070     +LDI R23 , BYTE4 ( 0xB )
                 	__GETD1N 0xB
0000ea 940e 0560 	CALL __PUTPARD1
                +
0000ec e0e7     +LDI R30 , LOW ( 0x7 )
0000ed e0f0     +LDI R31 , HIGH ( 0x7 )
0000ee e060     +LDI R22 , BYTE3 ( 0x7 )
0000ef e070     +LDI R23 , BYTE4 ( 0x7 )
                 	__GETD1N 0x7
0000f0 940e 0560 	CALL __PUTPARD1
0000f2 e184      	LDI  R24,20
0000f3 940e 0466 	CALL _scanf
0000f5 9666      	ADIW R28,22
                 ; 0000 001B 
                 ; 0000 001C         if ((sep1 == '-')&&(sep2 == '-'))
0000f6 e2ed      	LDI  R30,LOW(45)
0000f7 15ec      	CP   R30,R12
0000f8 f411      	BRNE _0x7
0000f9 15eb      	CP   R30,R11
0000fa f009      	BREQ _0x8
                 _0x7:
0000fb c09b      	RJMP _0x6
                 _0x8:
                 ; 0000 001D         {
                 ; 0000 001E             if ((dia >= 1)&&(dia <= 31)&&(mes >= 1)&&(mes <= 12)&&(year >=1))
0000fc e0e1      	LDI  R30,LOW(1)
0000fd e0f0      	LDI  R31,HIGH(1)
0000fe 163e      	CP   R3,R30
0000ff 064f      	CPC  R4,R31
000100 f0a4      	BRLT _0xA
000101 e1ef      	LDI  R30,LOW(31)
000102 e0f0      	LDI  R31,HIGH(31)
000103 15e3      	CP   R30,R3
000104 05f4      	CPC  R31,R4
000105 f07c      	BRLT _0xA
000106 e0e1      	LDI  R30,LOW(1)
000107 e0f0      	LDI  R31,HIGH(1)
000108 165e      	CP   R5,R30
000109 066f      	CPC  R6,R31
00010a f054      	BRLT _0xA
00010b e0ec      	LDI  R30,LOW(12)
00010c e0f0      	LDI  R31,HIGH(12)
00010d 15e5      	CP   R30,R5
00010e 05f6      	CPC  R31,R6
00010f f02c      	BRLT _0xA
000110 e0e1      	LDI  R30,LOW(1)
000111 e0f0      	LDI  R31,HIGH(1)
000112 167e      	CP   R7,R30
000113 068f      	CPC  R8,R31
000114 f40c      	BRGE _0xB
                 _0xA:
000115 c07c      	RJMP _0x9
                 _0xB:
                 ; 0000 001F             {
                 ; 0000 0020                 if (mes <=2)
000116 e0e2      	LDI  R30,LOW(2)
000117 e0f0      	LDI  R31,HIGH(2)
000118 15e5      	CP   R30,R5
000119 05f6      	CPC  R31,R6
00011a f04c      	BRLT _0xC
                 ; 0000 0021                 {
                 ; 0000 0022                     mes = mes+12;
00011b e0ec      	LDI  R30,LOW(12)
00011c e0f0      	LDI  R31,HIGH(12)
                +
00011d 0e5e     +ADD R5 , R30
00011e 1e6f     +ADC R6 , R31
                 	__ADDWRR 5,6,30,31
                 ; 0000 0023                     year--;
                +
00011f 2de7     +MOV R30 , R7
000120 2df8     +MOV R31 , R8
                 	__GETW1R 7,8
000121 9731      	SBIW R30,1
                +
000122 2e7e     +MOV R7 , R30
000123 2e8f     +MOV R8 , R31
                 	__PUTW1R 7,8
                 ; 0000 0024                 }
                 ; 0000 0025                 diasemana = (dia+((mes+1)*26)/10+year+year/4+6*(year/100)+year/400)%7;
                 _0xC:
                +
000124 2de5     +MOV R30 , R5
000125 2df6     +MOV R31 , R6
                 	__GETW1R 5,6
000126 9631      	ADIW R30,1
000127 e1aa      	LDI  R26,LOW(26)
000128 e0b0      	LDI  R27,HIGH(26)
000129 940e 051f 	CALL __MULW12
00012b 01df      	MOVW R26,R30
00012c e0ea      	LDI  R30,LOW(10)
00012d e0f0      	LDI  R31,HIGH(10)
00012e 940e 0537 	CALL __DIVW21
000130 0de3      	ADD  R30,R3
000131 1df4      	ADC  R31,R4
000132 0de7      	ADD  R30,R7
000133 1df8      	ADC  R31,R8
000134 01bf      	MOVW R22,R30
                +
000135 2da7     +MOV R26 , R7
000136 2db8     +MOV R27 , R8
                 	__GETW2R 7,8
000137 e0e4      	LDI  R30,LOW(4)
000138 e0f0      	LDI  R31,HIGH(4)
000139 940e 0537 	CALL __DIVW21
                +
00013b 0f6e     +ADD R22 , R30
00013c 1f7f     +ADC R23 , R31
                 	__ADDWRR 22,23,30,31
                +
00013d 2da7     +MOV R26 , R7
00013e 2db8     +MOV R27 , R8
                 	__GETW2R 7,8
00013f e6e4      	LDI  R30,LOW(100)
000140 e0f0      	LDI  R31,HIGH(100)
000141 940e 0537 	CALL __DIVW21
000143 e0a6      	LDI  R26,LOW(6)
000144 e0b0      	LDI  R27,HIGH(6)
000145 940e 051f 	CALL __MULW12
                +
000147 0f6e     +ADD R22 , R30
000148 1f7f     +ADC R23 , R31
                 	__ADDWRR 22,23,30,31
                +
000149 2da7     +MOV R26 , R7
00014a 2db8     +MOV R27 , R8
                 	__GETW2R 7,8
00014b e9e0      	LDI  R30,LOW(400)
00014c e0f1      	LDI  R31,HIGH(400)
00014d 940e 0537 	CALL __DIVW21
00014f 01db      	MOVW R26,R22
000150 0fae      	ADD  R26,R30
000151 1fbf      	ADC  R27,R31
000152 e0e7      	LDI  R30,LOW(7)
000153 e0f0      	LDI  R31,HIGH(7)
000154 940e 053c 	CALL __MODW21
                +
000156 2e9e     +MOV R9 , R30
000157 2eaf     +MOV R10 , R31
                 	__PUTW1R 9,10
                 ; 0000 0026                 printf("El dia de la semana es:  ");
                +
000158 eaec     +LDI R30 , LOW ( 2 * _0x0 + ( 50 ) )
000159 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 50 ) )
                 	__POINTW1FN _0x0,50
00015a 940e 04bf 	CALL SUBOPT_0x0
                 ; 0000 0027                 switch(diasemana)
                +
00015c 2de9     +MOV R30 , R9
00015d 2dfa     +MOV R31 , R10
                 	__GETW1R 9,10
                 ; 0000 0028                 {
                 ; 0000 0029                     case 0:
00015e 9730      	SBIW R30,0
00015f f419      	BRNE _0x10
                 ; 0000 002A                         printf("SABADO \n\r");
                +
000160 ece6     +LDI R30 , LOW ( 2 * _0x0 + ( 76 ) )
000161 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 76 ) )
                 	__POINTW1FN _0x0,76
000162 c029      	RJMP _0x1A
                 ; 0000 002B                         break;
                 ; 0000 002C                     case 1:
                 _0x10:
000163 30e1      	CPI  R30,LOW(0x1)
000164 e0a0      	LDI  R26,HIGH(0x1)
000165 07fa      	CPC  R31,R26
000166 f419      	BRNE _0x11
                 ; 0000 002D                         printf("DOMINGO \n\r");
                +
000167 ede0     +LDI R30 , LOW ( 2 * _0x0 + ( 86 ) )
000168 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 86 ) )
                 	__POINTW1FN _0x0,86
000169 c022      	RJMP _0x1A
                 ; 0000 002E                         break;
                 ; 0000 002F                     case 2:
                 _0x11:
00016a 30e2      	CPI  R30,LOW(0x2)
00016b e0a0      	LDI  R26,HIGH(0x2)
00016c 07fa      	CPC  R31,R26
00016d f419      	BRNE _0x12
                 ; 0000 0030                         printf("LUNES \n\r");
                +
00016e edeb     +LDI R30 , LOW ( 2 * _0x0 + ( 97 ) )
00016f e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 97 ) )
                 	__POINTW1FN _0x0,97
000170 c01b      	RJMP _0x1A
                 ; 0000 0031                         break;
                 ; 0000 0032                     case 3:
                 _0x12:
000171 30e3      	CPI  R30,LOW(0x3)
000172 e0a0      	LDI  R26,HIGH(0x3)
000173 07fa      	CPC  R31,R26
000174 f419      	BRNE _0x13
                 ; 0000 0033                         printf("MARTES \n\r");
                +
000175 eee4     +LDI R30 , LOW ( 2 * _0x0 + ( 106 ) )
000176 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 106 ) )
                 	__POINTW1FN _0x0,106
000177 c014      	RJMP _0x1A
                 ; 0000 0034                         break;
                 ; 0000 0035                     case 4:
                 _0x13:
000178 30e4      	CPI  R30,LOW(0x4)
000179 e0a0      	LDI  R26,HIGH(0x4)
00017a 07fa      	CPC  R31,R26
00017b f419      	BRNE _0x14
                 ; 0000 0036                         printf("MIERCOLES \n\r");
                +
00017c eeee     +LDI R30 , LOW ( 2 * _0x0 + ( 116 ) )
00017d e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 116 ) )
                 	__POINTW1FN _0x0,116
00017e c00d      	RJMP _0x1A
                 ; 0000 0037                         break;
                 ; 0000 0038                     case 5:
                 _0x14:
00017f 30e5      	CPI  R30,LOW(0x5)
000180 e0a0      	LDI  R26,HIGH(0x5)
000181 07fa      	CPC  R31,R26
000182 f419      	BRNE _0x15
                 ; 0000 0039                         printf("JUEVES \n\r");
                +
000183 efeb     +LDI R30 , LOW ( 2 * _0x0 + ( 129 ) )
000184 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 129 ) )
                 	__POINTW1FN _0x0,129
000185 c006      	RJMP _0x1A
                 ; 0000 003A                         break;
                 ; 0000 003B                     case 6:
                 _0x15:
000186 30e6      	CPI  R30,LOW(0x6)
000187 e0a0      	LDI  R26,HIGH(0x6)
000188 07fa      	CPC  R31,R26
000189 f439      	BRNE _0xF
                 ; 0000 003C                         printf("VIERNES \n\r");
                +
00018a e0e5     +LDI R30 , LOW ( 2 * _0x0 + ( 139 ) )
00018b e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 139 ) )
                 	__POINTW1FN _0x0,139
                 _0x1A:
00018c 93fa      	ST   -Y,R31
00018d 93ea      	ST   -Y,R30
00018e e080      	LDI  R24,0
00018f d15f      	RCALL _printf
000190 9622      	ADIW R28,2
                 ; 0000 003D                         break;
                 ; 0000 003E                 }
                 _0xF:
                 ; 0000 003F             }
                 ; 0000 0040             else
000191 c004      	RJMP _0x17
                 _0x9:
                 ; 0000 0041                 printf("Formato No Validoooooo \n\r");
                +
000192 e1e0     +LDI R30 , LOW ( 2 * _0x0 + ( 150 ) )
000193 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 150 ) )
                 	__POINTW1FN _0x0,150
000194 940e 04bf 	CALL SUBOPT_0x0
                 ; 0000 0042         }
                 _0x17:
                 ; 0000 0043         else
000196 c004      	RJMP _0x18
                 _0x6:
                 ; 0000 0044             printf("Formato No Valido \n\r");
                +
000197 e2ea     +LDI R30 , LOW ( 2 * _0x0 + ( 176 ) )
000198 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 176 ) )
                 	__POINTW1FN _0x0,176
000199 940e 04bf 	CALL SUBOPT_0x0
                 ; 0000 0045 
                 ; 0000 0046 
                 ; 0000 0047 
                 ; 0000 0048     }
                 _0x18:
00019b cf30      	RJMP _0x3
                 ; 0000 0049 }
                 _0x19:
00019c cfff      	RJMP _0x19
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _getchar:
                 ; .FSTART _getchar
                 _0x2000003:
00019d 91e0 00c0 	LDS  R30,192
00019f 78e0      	ANDI R30,LOW(0x80)
0001a0 f3e1      	BREQ _0x2000003
0001a1 91e0 00c6 	LDS  R30,198
0001a3 9508      	RET
                 ; .FEND
                 _putchar:
                 ; .FSTART _putchar
0001a4 93aa      	ST   -Y,R26
                 _0x2000006:
0001a5 91e0 00c0 	LDS  R30,192
0001a7 72e0      	ANDI R30,LOW(0x20)
0001a8 f3e1      	BREQ _0x2000006
0001a9 81e8      	LD   R30,Y
0001aa 93e0 00c6 	STS  198,R30
0001ac 9621      	ADIW R28,1
0001ad 9508      	RET
                 ; .FEND
                 _put_usart_G100:
                 ; .FSTART _put_usart_G100
0001ae 93ba      	ST   -Y,R27
0001af 93aa      	ST   -Y,R26
0001b0 81aa      	LDD  R26,Y+2
0001b1 dff2      	RCALL _putchar
0001b2 81a8      	LD   R26,Y
0001b3 81b9      	LDD  R27,Y+1
0001b4 91ed      	LD   R30,X+
0001b5 91fd      	LD   R31,X+
0001b6 9631      	ADIW R30,1
0001b7 93fe      	ST   -X,R31
0001b8 93ee      	ST   -X,R30
0001b9 9623      	ADIW R28,3
0001ba 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0001bb 93ba      	ST   -Y,R27
0001bc 93aa      	ST   -Y,R26
0001bd 9726      	SBIW R28,6
0001be 940e 0565 	CALL __SAVELOCR6
0001c0 e010      	LDI  R17,0
0001c1 85ac      	LDD  R26,Y+12
0001c2 85bd      	LDD  R27,Y+12+1
0001c3 e0e0      	LDI  R30,LOW(0)
0001c4 e0f0      	LDI  R31,HIGH(0)
0001c5 93ed      	ST   X+,R30
0001c6 93fc      	ST   X,R31
                 _0x200001C:
0001c7 89ea      	LDD  R30,Y+18
0001c8 89fb      	LDD  R31,Y+18+1
0001c9 9631      	ADIW R30,1
0001ca 8bea      	STD  Y+18,R30
0001cb 8bfb      	STD  Y+18+1,R31
0001cc 9731      	SBIW R30,1
0001cd 91e4      	LPM  R30,Z
0001ce 2f2e      	MOV  R18,R30
0001cf 30e0      	CPI  R30,0
0001d0 f409      	BRNE PC+2
0001d1 c115      	RJMP _0x200001E
0001d2 2fe1      	MOV  R30,R17
0001d3 30e0      	CPI  R30,0
0001d4 f439      	BRNE _0x2000022
0001d5 3225      	CPI  R18,37
0001d6 f411      	BRNE _0x2000023
0001d7 e011      	LDI  R17,LOW(1)
0001d8 c002      	RJMP _0x2000024
                 _0x2000023:
0001d9 940e 04c6 	CALL SUBOPT_0x1
                 _0x2000024:
0001db c10a      	RJMP _0x2000021
                 _0x2000022:
0001dc 30e1      	CPI  R30,LOW(0x1)
0001dd f4a9      	BRNE _0x2000025
0001de 3225      	CPI  R18,37
0001df f419      	BRNE _0x2000026
0001e0 940e 04c6 	CALL SUBOPT_0x1
0001e2 c102      	RJMP _0x20000D2
                 _0x2000026:
0001e3 e012      	LDI  R17,LOW(2)
0001e4 e040      	LDI  R20,LOW(0)
0001e5 e000      	LDI  R16,LOW(0)
0001e6 322d      	CPI  R18,45
0001e7 f411      	BRNE _0x2000027
0001e8 e001      	LDI  R16,LOW(1)
0001e9 c0fc      	RJMP _0x2000021
                 _0x2000027:
0001ea 322b      	CPI  R18,43
0001eb f411      	BRNE _0x2000028
0001ec e24b      	LDI  R20,LOW(43)
0001ed c0f8      	RJMP _0x2000021
                 _0x2000028:
0001ee 3220      	CPI  R18,32
0001ef f411      	BRNE _0x2000029
0001f0 e240      	LDI  R20,LOW(32)
0001f1 c0f4      	RJMP _0x2000021
                 _0x2000029:
0001f2 c002      	RJMP _0x200002A
                 _0x2000025:
0001f3 30e2      	CPI  R30,LOW(0x2)
0001f4 f439      	BRNE _0x200002B
                 _0x200002A:
0001f5 e050      	LDI  R21,LOW(0)
0001f6 e013      	LDI  R17,LOW(3)
0001f7 3320      	CPI  R18,48
0001f8 f411      	BRNE _0x200002C
0001f9 6800      	ORI  R16,LOW(128)
0001fa c0eb      	RJMP _0x2000021
                 _0x200002C:
0001fb c003      	RJMP _0x200002D
                 _0x200002B:
0001fc 30e3      	CPI  R30,LOW(0x3)
0001fd f009      	BREQ PC+2
0001fe c0e7      	RJMP _0x2000021
                 _0x200002D:
0001ff 3320      	CPI  R18,48
000200 f010      	BRLO _0x2000030
000201 332a      	CPI  R18,58
000202 f008      	BRLO _0x2000031
                 _0x2000030:
000203 c007      	RJMP _0x200002F
                 _0x2000031:
000204 e0aa      	LDI  R26,LOW(10)
000205 9f5a      	MUL  R21,R26
000206 2d50      	MOV  R21,R0
000207 2fe2      	MOV  R30,R18
000208 53e0      	SUBI R30,LOW(48)
000209 0f5e      	ADD  R21,R30
00020a c0db      	RJMP _0x2000021
                 _0x200002F:
00020b 2fe2      	MOV  R30,R18
00020c 36e3      	CPI  R30,LOW(0x63)
00020d f449      	BRNE _0x2000035
00020e 940e 04cd 	CALL SUBOPT_0x2
000210 89e8      	LDD  R30,Y+16
000211 89f9      	LDD  R31,Y+16+1
000212 81a4      	LDD  R26,Z+4
000213 93aa      	ST   -Y,R26
000214 940e 04d3 	CALL SUBOPT_0x3
000216 c0ce      	RJMP _0x2000036
                 _0x2000035:
000217 37e3      	CPI  R30,LOW(0x73)
000218 f441      	BRNE _0x2000038
000219 940e 04cd 	CALL SUBOPT_0x2
00021b 940e 04d9 	CALL SUBOPT_0x4
00021d 940e 04a6 	CALL _strlen
00021f 2f1e      	MOV  R17,R30
000220 c00a      	RJMP _0x2000039
                 _0x2000038:
000221 37e0      	CPI  R30,LOW(0x70)
000222 f461      	BRNE _0x200003B
000223 940e 04cd 	CALL SUBOPT_0x2
000225 940e 04d9 	CALL SUBOPT_0x4
000227 940e 04b2 	CALL _strlenf
000229 2f1e      	MOV  R17,R30
00022a 6008      	ORI  R16,LOW(8)
                 _0x2000039:
00022b 6002      	ORI  R16,LOW(2)
00022c 770f      	ANDI R16,LOW(127)
00022d e030      	LDI  R19,LOW(0)
00022e c034      	RJMP _0x200003C
                 _0x200003B:
00022f 36e4      	CPI  R30,LOW(0x64)
000230 f011      	BREQ _0x200003F
000231 36e9      	CPI  R30,LOW(0x69)
000232 f411      	BRNE _0x2000040
                 _0x200003F:
000233 6004      	ORI  R16,LOW(4)
000234 c002      	RJMP _0x2000041
                 _0x2000040:
000235 37e5      	CPI  R30,LOW(0x75)
000236 f431      	BRNE _0x2000042
                 _0x2000041:
000237 e6e8      	LDI  R30,LOW(_tbl10_G100*2)
000238 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000239 83ee      	STD  Y+6,R30
00023a 83ff      	STD  Y+6+1,R31
00023b e015      	LDI  R17,LOW(5)
00023c c00c      	RJMP _0x2000043
                 _0x2000042:
00023d 35e8      	CPI  R30,LOW(0x58)
00023e f411      	BRNE _0x2000045
00023f 6008      	ORI  R16,LOW(8)
000240 c003      	RJMP _0x2000046
                 _0x2000045:
000241 37e8      	CPI  R30,LOW(0x78)
000242 f009      	BREQ PC+2
000243 c0a1      	RJMP _0x2000077
                 _0x2000046:
000244 e7e2      	LDI  R30,LOW(_tbl16_G100*2)
000245 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000246 83ee      	STD  Y+6,R30
000247 83ff      	STD  Y+6+1,R31
000248 e014      	LDI  R17,LOW(4)
                 _0x2000043:
000249 ff02      	SBRS R16,2
00024a c014      	RJMP _0x2000048
00024b 940e 04cd 	CALL SUBOPT_0x2
00024d 940e 04e3 	CALL SUBOPT_0x5
00024f 85ab      	LDD  R26,Y+11
000250 23aa      	TST  R26
000251 f43a      	BRPL _0x2000049
000252 85ea      	LDD  R30,Y+10
000253 85fb      	LDD  R31,Y+10+1
000254 940e 0513 	CALL __ANEGW1
000256 87ea      	STD  Y+10,R30
000257 87fb      	STD  Y+10+1,R31
000258 e24d      	LDI  R20,LOW(45)
                 _0x2000049:
000259 3040      	CPI  R20,0
00025a f011      	BREQ _0x200004A
00025b 5f1f      	SUBI R17,-LOW(1)
00025c c001      	RJMP _0x200004B
                 _0x200004A:
00025d 7f0b      	ANDI R16,LOW(251)
                 _0x200004B:
00025e c004      	RJMP _0x200004C
                 _0x2000048:
00025f 940e 04cd 	CALL SUBOPT_0x2
000261 940e 04e3 	CALL SUBOPT_0x5
                 _0x200004C:
                 _0x200003C:
000263 fd00      	SBRC R16,0
000264 c011      	RJMP _0x200004D
                 _0x200004E:
000265 1715      	CP   R17,R21
000266 f478      	BRSH _0x2000050
000267 ff07      	SBRS R16,7
000268 c008      	RJMP _0x2000051
000269 ff02      	SBRS R16,2
00026a c004      	RJMP _0x2000052
00026b 7f0b      	ANDI R16,LOW(251)
00026c 2f24      	MOV  R18,R20
00026d 5011      	SUBI R17,LOW(1)
00026e c001      	RJMP _0x2000053
                 _0x2000052:
00026f e320      	LDI  R18,LOW(48)
                 _0x2000053:
000270 c001      	RJMP _0x2000054
                 _0x2000051:
000271 e220      	LDI  R18,LOW(32)
                 _0x2000054:
000272 940e 04c6 	CALL SUBOPT_0x1
000274 5051      	SUBI R21,LOW(1)
000275 cfef      	RJMP _0x200004E
                 _0x2000050:
                 _0x200004D:
000276 2f31      	MOV  R19,R17
000277 ff01      	SBRS R16,1
000278 c017      	RJMP _0x2000055
                 _0x2000056:
000279 3030      	CPI  R19,0
00027a f0a1      	BREQ _0x2000058
00027b ff03      	SBRS R16,3
00027c c006      	RJMP _0x2000059
00027d 81ee      	LDD  R30,Y+6
00027e 81ff      	LDD  R31,Y+6+1
00027f 9125      	LPM  R18,Z+
000280 83ee      	STD  Y+6,R30
000281 83ff      	STD  Y+6+1,R31
000282 c005      	RJMP _0x200005A
                 _0x2000059:
000283 81ae      	LDD  R26,Y+6
000284 81bf      	LDD  R27,Y+6+1
000285 912d      	LD   R18,X+
000286 83ae      	STD  Y+6,R26
000287 83bf      	STD  Y+6+1,R27
                 _0x200005A:
000288 940e 04c6 	CALL SUBOPT_0x1
00028a 3050      	CPI  R21,0
00028b f009      	BREQ _0x200005B
00028c 5051      	SUBI R21,LOW(1)
                 _0x200005B:
00028d 5031      	SUBI R19,LOW(1)
00028e cfea      	RJMP _0x2000056
                 _0x2000058:
00028f c04b      	RJMP _0x200005C
                 _0x2000055:
                 _0x200005E:
000290 e320      	LDI  R18,LOW(48)
000291 81ee      	LDD  R30,Y+6
000292 81ff      	LDD  R31,Y+6+1
000293 940e 055c 	CALL __GETW1PF
000295 87e8      	STD  Y+8,R30
000296 87f9      	STD  Y+8+1,R31
000297 81ee      	LDD  R30,Y+6
000298 81ff      	LDD  R31,Y+6+1
000299 9632      	ADIW R30,2
00029a 83ee      	STD  Y+6,R30
00029b 83ff      	STD  Y+6+1,R31
                 _0x2000060:
00029c 85e8      	LDD  R30,Y+8
00029d 85f9      	LDD  R31,Y+8+1
00029e 85aa      	LDD  R26,Y+10
00029f 85bb      	LDD  R27,Y+10+1
0002a0 17ae      	CP   R26,R30
0002a1 07bf      	CPC  R27,R31
0002a2 f050      	BRLO _0x2000062
0002a3 5f2f      	SUBI R18,-LOW(1)
0002a4 85a8      	LDD  R26,Y+8
0002a5 85b9      	LDD  R27,Y+8+1
0002a6 85ea      	LDD  R30,Y+10
0002a7 85fb      	LDD  R31,Y+10+1
0002a8 1bea      	SUB  R30,R26
0002a9 0bfb      	SBC  R31,R27
0002aa 87ea      	STD  Y+10,R30
0002ab 87fb      	STD  Y+10+1,R31
0002ac cfef      	RJMP _0x2000060
                 _0x2000062:
0002ad 332a      	CPI  R18,58
0002ae f028      	BRLO _0x2000063
0002af ff03      	SBRS R16,3
0002b0 c002      	RJMP _0x2000064
0002b1 5f29      	SUBI R18,-LOW(7)
0002b2 c001      	RJMP _0x2000065
                 _0x2000064:
0002b3 5d29      	SUBI R18,-LOW(39)
                 _0x2000065:
                 _0x2000063:
0002b4 fd04      	SBRC R16,4
0002b5 c01a      	RJMP _0x2000067
0002b6 3321      	CPI  R18,49
0002b7 f420      	BRSH _0x2000069
0002b8 85a8      	LDD  R26,Y+8
0002b9 85b9      	LDD  R27,Y+8+1
0002ba 9711      	SBIW R26,1
0002bb f409      	BRNE _0x2000068
                 _0x2000069:
0002bc c009      	RJMP _0x20000D3
                 _0x2000068:
0002bd 1753      	CP   R21,R19
0002be f010      	BRLO _0x200006D
0002bf ff00      	SBRS R16,0
0002c0 c001      	RJMP _0x200006E
                 _0x200006D:
0002c1 c013      	RJMP _0x200006C
                 _0x200006E:
0002c2 e220      	LDI  R18,LOW(32)
0002c3 ff07      	SBRS R16,7
0002c4 c00b      	RJMP _0x200006F
0002c5 e320      	LDI  R18,LOW(48)
                 _0x20000D3:
0002c6 6100      	ORI  R16,LOW(16)
0002c7 ff02      	SBRS R16,2
0002c8 c007      	RJMP _0x2000070
0002c9 7f0b      	ANDI R16,LOW(251)
0002ca 934a      	ST   -Y,R20
0002cb 940e 04d3 	CALL SUBOPT_0x3
0002cd 3050      	CPI  R21,0
0002ce f009      	BREQ _0x2000071
0002cf 5051      	SUBI R21,LOW(1)
                 _0x2000071:
                 _0x2000070:
                 _0x200006F:
                 _0x2000067:
0002d0 940e 04c6 	CALL SUBOPT_0x1
0002d2 3050      	CPI  R21,0
0002d3 f009      	BREQ _0x2000072
0002d4 5051      	SUBI R21,LOW(1)
                 _0x2000072:
                 _0x200006C:
0002d5 5031      	SUBI R19,LOW(1)
0002d6 85a8      	LDD  R26,Y+8
0002d7 85b9      	LDD  R27,Y+8+1
0002d8 9712      	SBIW R26,2
0002d9 f008      	BRLO _0x200005F
0002da cfb5      	RJMP _0x200005E
                 _0x200005F:
                 _0x200005C:
0002db ff00      	SBRS R16,0
0002dc c008      	RJMP _0x2000073
                 _0x2000074:
0002dd 3050      	CPI  R21,0
0002de f031      	BREQ _0x2000076
0002df 5051      	SUBI R21,LOW(1)
0002e0 e2e0      	LDI  R30,LOW(32)
0002e1 93ea      	ST   -Y,R30
0002e2 940e 04d3 	CALL SUBOPT_0x3
0002e4 cff8      	RJMP _0x2000074
                 _0x2000076:
                 _0x2000073:
                 _0x2000077:
                 _0x2000036:
                 _0x20000D2:
0002e5 e010      	LDI  R17,LOW(0)
                 _0x2000021:
0002e6 cee0      	RJMP _0x200001C
                 _0x200001E:
0002e7 85ac      	LDD  R26,Y+12
0002e8 85bd      	LDD  R27,Y+12+1
0002e9 940e 0558 	CALL __GETW1P
0002eb 940e 056c 	CALL __LOADLOCR6
0002ed 9664      	ADIW R28,20
0002ee 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
0002ef 92ff      	PUSH R15
0002f0 2ef8      	MOV  R15,R24
0002f1 9726      	SBIW R28,6
0002f2 931a      	ST   -Y,R17
0002f3 930a      	ST   -Y,R16
0002f4 01de      	MOVW R26,R28
0002f5 9614      	ADIW R26,4
0002f6 940e 050f 	CALL __ADDW2R15
0002f8 018d      	MOVW R16,R26
0002f9 e0e0      	LDI  R30,LOW(0)
0002fa 83ec      	STD  Y+4,R30
0002fb 83ed      	STD  Y+4+1,R30
0002fc 83ee      	STD  Y+6,R30
0002fd 83ef      	STD  Y+6+1,R30
0002fe 01de      	MOVW R26,R28
0002ff 9618      	ADIW R26,8
000300 940e 04eb 	CALL SUBOPT_0x6
000302 eaee      	LDI  R30,LOW(_put_usart_G100)
000303 e0f1      	LDI  R31,HIGH(_put_usart_G100)
000304 93fa      	ST   -Y,R31
000305 93ea      	ST   -Y,R30
000306 01de      	MOVW R26,R28
000307 9618      	ADIW R26,8
000308 deb2      	RCALL __print_G100
000309 8119      	LDD  R17,Y+1
00030a 8108      	LDD  R16,Y+0
00030b 9628      	ADIW R28,8
00030c 90ff      	POP  R15
00030d 9508      	RET
                 ; .FEND
                 _get_usart_G100:
                 ; .FSTART _get_usart_G100
00030e 93ba      	ST   -Y,R27
00030f 93aa      	ST   -Y,R26
000310 931a      	ST   -Y,R17
000311 81a9      	LDD  R26,Y+1
000312 81ba      	LDD  R27,Y+1+1
000313 e0e0      	LDI  R30,LOW(0)
000314 93ec      	ST   X,R30
000315 81ab      	LDD  R26,Y+3
000316 81bc      	LDD  R27,Y+3+1
000317 91ec      	LD   R30,X
000318 2f1e      	MOV  R17,R30
000319 30e0      	CPI  R30,0
00031a f019      	BREQ _0x200007E
00031b e0e0      	LDI  R30,LOW(0)
00031c 93ec      	ST   X,R30
00031d c002      	RJMP _0x200007F
                 _0x200007E:
00031e de7e      	RCALL _getchar
00031f 2f1e      	MOV  R17,R30
                 _0x200007F:
000320 2fe1      	MOV  R30,R17
000321 8118      	LDD  R17,Y+0
000322 9625      	ADIW R28,5
000323 9508      	RET
                 ; .FEND
                 __scanf_G100:
                 ; .FSTART __scanf_G100
000324 92ff      	PUSH R15
000325 93ba      	ST   -Y,R27
000326 93aa      	ST   -Y,R26
000327 9724      	SBIW R28,4
000328 940e 0565 	CALL __SAVELOCR6
00032a e0e0      	LDI  R30,LOW(0)
00032b e0f0      	LDI  R31,HIGH(0)
00032c 87e8      	STD  Y+8,R30
00032d 87f9      	STD  Y+8+1,R31
00032e 2f4e      	MOV  R20,R30
                 _0x2000085:
00032f 89e8      	LDD  R30,Y+16
000330 89f9      	LDD  R31,Y+16+1
000331 9631      	ADIW R30,1
000332 8be8      	STD  Y+16,R30
000333 8bf9      	STD  Y+16+1,R31
000334 9731      	SBIW R30,1
000335 91e4      	LPM  R30,Z
000336 2f3e      	MOV  R19,R30
000337 30e0      	CPI  R30,0
000338 f409      	BRNE PC+2
000339 c125      	RJMP _0x2000087
00033a 940e 04f4 	CALL SUBOPT_0x7
00033c f0c1      	BREQ _0x2000088
                 _0x2000089:
00033d b7ed      	IN   R30,SPL
00033e b7fe      	IN   R31,SPH
00033f 93fa      	ST   -Y,R31
000340 93ea      	ST   -Y,R30
000341 934f      	PUSH R20
000342 940e 04f9 	CALL SUBOPT_0x8
000344 914f      	POP  R20
000345 2f3e      	MOV  R19,R30
000346 30e0      	CPI  R30,0
000347 f019      	BREQ _0x200008C
000348 940e 04f4 	CALL SUBOPT_0x7
00034a f409      	BRNE _0x200008D
                 _0x200008C:
00034b c007      	RJMP _0x200008B
                 _0x200008D:
00034c 940e 04ff 	CALL SUBOPT_0x9
00034e f41c      	BRGE _0x200008E
00034f efef      	LDI  R30,LOW(65535)
000350 efff      	LDI  R31,HIGH(65535)
000351 c10f      	RJMP _0x2060001
                 _0x200008E:
000352 cfea      	RJMP _0x2000089
                 _0x200008B:
000353 2f43      	MOV  R20,R19
000354 c109      	RJMP _0x200008F
                 _0x2000088:
000355 3235      	CPI  R19,37
000356 f009      	BREQ PC+2
000357 c0ee      	RJMP _0x2000090
000358 e050      	LDI  R21,LOW(0)
                 _0x2000091:
000359 89e8      	LDD  R30,Y+16
00035a 89f9      	LDD  R31,Y+16+1
00035b 9135      	LPM  R19,Z+
00035c 8be8      	STD  Y+16,R30
00035d 8bf9      	STD  Y+16+1,R31
00035e 3330      	CPI  R19,48
00035f f010      	BRLO _0x2000095
000360 333a      	CPI  R19,58
000361 f008      	BRLO _0x2000094
                 _0x2000095:
000362 c007      	RJMP _0x2000093
                 _0x2000094:
000363 e0aa      	LDI  R26,LOW(10)
000364 9f5a      	MUL  R21,R26
000365 2d50      	MOV  R21,R0
000366 2fe3      	MOV  R30,R19
000367 53e0      	SUBI R30,LOW(48)
000368 0f5e      	ADD  R21,R30
000369 cfef      	RJMP _0x2000091
                 _0x2000093:
00036a 3030      	CPI  R19,0
00036b f409      	BRNE _0x2000097
00036c c0f2      	RJMP _0x2000087
                 _0x2000097:
                 _0x2000098:
00036d b7ed      	IN   R30,SPL
00036e b7fe      	IN   R31,SPH
00036f 93fa      	ST   -Y,R31
000370 93ea      	ST   -Y,R30
000371 934f      	PUSH R20
000372 940e 04f9 	CALL SUBOPT_0x8
000374 914f      	POP  R20
000375 2f2e      	MOV  R18,R30
000376 2fae      	MOV  R26,R30
000377 940e 048c 	CALL _isspace
000379 30e0      	CPI  R30,0
00037a f039      	BREQ _0x200009A
00037b 940e 04ff 	CALL SUBOPT_0x9
00037d f41c      	BRGE _0x200009B
00037e efef      	LDI  R30,LOW(65535)
00037f efff      	LDI  R31,HIGH(65535)
000380 c0e0      	RJMP _0x2060001
                 _0x200009B:
000381 cfeb      	RJMP _0x2000098
                 _0x200009A:
000382 3020      	CPI  R18,0
000383 f409      	BRNE _0x200009C
000384 c0d1      	RJMP _0x200009D
                 _0x200009C:
000385 2f42      	MOV  R20,R18
000386 3050      	CPI  R21,0
000387 f409      	BRNE _0x200009E
000388 ef5f      	LDI  R21,LOW(255)
                 _0x200009E:
000389 2fe3      	MOV  R30,R19
00038a 36e3      	CPI  R30,LOW(0x63)
00038b f499      	BRNE _0x20000A2
00038c 940e 0504 	CALL SUBOPT_0xA
00038e b7ed      	IN   R30,SPL
00038f b7fe      	IN   R31,SPH
000390 93fa      	ST   -Y,R31
000391 93ea      	ST   -Y,R30
000392 934f      	PUSH R20
000393 940e 04f9 	CALL SUBOPT_0x8
000395 914f      	POP  R20
000396 01d8      	MOVW R26,R16
000397 93ec      	ST   X,R30
000398 940e 04ff 	CALL SUBOPT_0x9
00039a f41c      	BRGE _0x20000A3
00039b efef      	LDI  R30,LOW(65535)
00039c efff      	LDI  R31,HIGH(65535)
00039d c0c3      	RJMP _0x2060001
                 _0x20000A3:
00039e c0a1      	RJMP _0x20000A1
                 _0x20000A2:
00039f 37e3      	CPI  R30,LOW(0x73)
0003a0 f541      	BRNE _0x20000AC
0003a1 940e 0504 	CALL SUBOPT_0xA
                 _0x20000A5:
0003a3 2fe5      	MOV  R30,R21
0003a4 5051      	SUBI R21,1
0003a5 30e0      	CPI  R30,0
0003a6 f0f1      	BREQ _0x20000A7
0003a7 b7ed      	IN   R30,SPL
0003a8 b7fe      	IN   R31,SPH
0003a9 93fa      	ST   -Y,R31
0003aa 93ea      	ST   -Y,R30
0003ab 934f      	PUSH R20
0003ac 940e 04f9 	CALL SUBOPT_0x8
0003ae 914f      	POP  R20
0003af 2f3e      	MOV  R19,R30
0003b0 30e0      	CPI  R30,0
0003b1 f019      	BREQ _0x20000A9
0003b2 940e 04f4 	CALL SUBOPT_0x7
0003b4 f039      	BREQ _0x20000A8
                 _0x20000A9:
0003b5 940e 04ff 	CALL SUBOPT_0x9
0003b7 f41c      	BRGE _0x20000AB
0003b8 efef      	LDI  R30,LOW(65535)
0003b9 efff      	LDI  R31,HIGH(65535)
0003ba c0a6      	RJMP _0x2060001
                 _0x20000AB:
0003bb c009      	RJMP _0x20000A7
                 _0x20000A8:
0003bc 931f      	PUSH R17
0003bd 930f      	PUSH R16
                +
0003be 5f0f     +SUBI R16 , LOW ( - 1 )
0003bf 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0003c0 2fe3      	MOV  R30,R19
0003c1 91af      	POP  R26
0003c2 91bf      	POP  R27
0003c3 93ec      	ST   X,R30
0003c4 cfde      	RJMP _0x20000A5
                 _0x20000A7:
0003c5 01d8      	MOVW R26,R16
0003c6 e0e0      	LDI  R30,LOW(0)
0003c7 93ec      	ST   X,R30
0003c8 c077      	RJMP _0x20000A1
                 _0x20000AC:
0003c9 9468      	SET
0003ca f8f1      	BLD  R15,1
0003cb 94e8      	CLT
0003cc f8f2      	BLD  R15,2
0003cd 2fe3      	MOV  R30,R19
0003ce 36e4      	CPI  R30,LOW(0x64)
0003cf f011      	BREQ _0x20000B1
0003d0 36e9      	CPI  R30,LOW(0x69)
0003d1 f419      	BRNE _0x20000B2
                 _0x20000B1:
0003d2 94e8      	CLT
0003d3 f8f1      	BLD  R15,1
0003d4 c002      	RJMP _0x20000B3
                 _0x20000B2:
0003d5 37e5      	CPI  R30,LOW(0x75)
0003d6 f411      	BRNE _0x20000B4
                 _0x20000B3:
0003d7 e02a      	LDI  R18,LOW(10)
0003d8 c008      	RJMP _0x20000AF
                 _0x20000B4:
0003d9 37e8      	CPI  R30,LOW(0x78)
0003da f411      	BRNE _0x20000B5
0003db e120      	LDI  R18,LOW(16)
0003dc c004      	RJMP _0x20000AF
                 _0x20000B5:
0003dd 32e5      	CPI  R30,LOW(0x25)
0003de f409      	BRNE _0x20000B8
0003df c066      	RJMP _0x20000B7
                 _0x20000B8:
0003e0 c07e      	RJMP _0x2060002
                 _0x20000AF:
0003e1 e0e0      	LDI  R30,LOW(0)
0003e2 83ee      	STD  Y+6,R30
0003e3 83ef      	STD  Y+6+1,R30
0003e4 9468      	SET
0003e5 f8f0      	BLD  R15,0
                 _0x20000B9:
0003e6 2fe5      	MOV  R30,R21
0003e7 5051      	SUBI R21,1
0003e8 30e0      	CPI  R30,0
0003e9 f409      	BRNE PC+2
0003ea c046      	RJMP _0x20000BB
0003eb b7ed      	IN   R30,SPL
0003ec b7fe      	IN   R31,SPH
0003ed 93fa      	ST   -Y,R31
0003ee 93ea      	ST   -Y,R30
0003ef 934f      	PUSH R20
0003f0 940e 04f9 	CALL SUBOPT_0x8
0003f2 914f      	POP  R20
0003f3 2f3e      	MOV  R19,R30
0003f4 32e1      	CPI  R30,LOW(0x21)
0003f5 f438      	BRSH _0x20000BC
0003f6 940e 04ff 	CALL SUBOPT_0x9
0003f8 f41c      	BRGE _0x20000BD
0003f9 efef      	LDI  R30,LOW(65535)
0003fa efff      	LDI  R31,HIGH(65535)
0003fb c065      	RJMP _0x2060001
                 _0x20000BD:
0003fc c017      	RJMP _0x20000BE
                 _0x20000BC:
0003fd fcf1      	SBRC R15,1
0003fe c008      	RJMP _0x20000BF
0003ff 9468      	SET
000400 f8f1      	BLD  R15,1
000401 323d      	CPI  R19,45
000402 f411      	BRNE _0x20000C0
000403 f8f2      	BLD  R15,2
000404 cfe1      	RJMP _0x20000B9
                 _0x20000C0:
000405 323b      	CPI  R19,43
000406 f2f9      	BREQ _0x20000B9
                 _0x20000BF:
000407 3120      	CPI  R18,16
000408 f431      	BRNE _0x20000C2
000409 2fa3      	MOV  R26,R19
00040a 940e 0497 	CALL _isxdigit
00040c 30e0      	CPI  R30,0
00040d f031      	BREQ _0x20000BE
00040e c009      	RJMP _0x20000C4
                 _0x20000C2:
00040f 2fa3      	MOV  R26,R19
000410 940e 0483 	CALL _isdigit
000412 30e0      	CPI  R30,0
000413 f421      	BRNE _0x20000C5
                 _0x20000BE:
000414 fcf0      	SBRC R15,0
000415 c049      	RJMP _0x20000C7
000416 2f43      	MOV  R20,R19
000417 c019      	RJMP _0x20000BB
                 _0x20000C5:
                 _0x20000C4:
000418 3631      	CPI  R19,97
000419 f010      	BRLO _0x20000C8
00041a 5537      	SUBI R19,LOW(87)
00041b c005      	RJMP _0x20000C9
                 _0x20000C8:
00041c 3431      	CPI  R19,65
00041d f010      	BRLO _0x20000CA
00041e 5337      	SUBI R19,LOW(55)
00041f c001      	RJMP _0x20000CB
                 _0x20000CA:
000420 5330      	SUBI R19,LOW(48)
                 _0x20000CB:
                 _0x20000C9:
000421 2fe2      	MOV  R30,R18
000422 81ae      	LDD  R26,Y+6
000423 81bf      	LDD  R27,Y+6+1
000424 e0f0      	LDI  R31,0
000425 940e 0517 	CALL __MULW12U
000427 01df      	MOVW R26,R30
000428 2fe3      	MOV  R30,R19
000429 e0f0      	LDI  R31,0
00042a 0fea      	ADD  R30,R26
00042b 1ffb      	ADC  R31,R27
00042c 83ee      	STD  Y+6,R30
00042d 83ff      	STD  Y+6+1,R31
00042e 94e8      	CLT
00042f f8f0      	BLD  R15,0
000430 cfb5      	RJMP _0x20000B9
                 _0x20000BB:
000431 940e 0504 	CALL SUBOPT_0xA
000433 fef2      	SBRS R15,2
000434 c006      	RJMP _0x20000CC
000435 81ee      	LDD  R30,Y+6
000436 81ff      	LDD  R31,Y+6+1
000437 940e 0513 	CALL __ANEGW1
000439 83ee      	STD  Y+6,R30
00043a 83ff      	STD  Y+6+1,R31
                 _0x20000CC:
00043b 81ee      	LDD  R30,Y+6
00043c 81ff      	LDD  R31,Y+6+1
00043d 01d8      	MOVW R26,R16
00043e 93ed      	ST   X+,R30
00043f 93fc      	ST   X,R31
                 _0x20000A1:
000440 85e8      	LDD  R30,Y+8
000441 85f9      	LDD  R31,Y+8+1
000442 9631      	ADIW R30,1
000443 87e8      	STD  Y+8,R30
000444 87f9      	STD  Y+8+1,R31
000445 c018      	RJMP _0x20000CD
                 _0x2000090:
                 _0x20000B7:
000446 b7ed      	IN   R30,SPL
000447 b7fe      	IN   R31,SPH
000448 93fa      	ST   -Y,R31
000449 93ea      	ST   -Y,R30
00044a 934f      	PUSH R20
00044b 940e 04f9 	CALL SUBOPT_0x8
00044d 914f      	POP  R20
00044e 17e3      	CP   R30,R19
00044f f071      	BREQ _0x20000CE
000450 940e 04ff 	CALL SUBOPT_0x9
000452 f41c      	BRGE _0x20000CF
000453 efef      	LDI  R30,LOW(65535)
000454 efff      	LDI  R31,HIGH(65535)
000455 c00b      	RJMP _0x2060001
                 _0x20000CF:
                 _0x200009D:
000456 85e8      	LDD  R30,Y+8
000457 85f9      	LDD  R31,Y+8+1
000458 9730      	SBIW R30,0
000459 f419      	BRNE _0x20000D0
00045a efef      	LDI  R30,LOW(65535)
00045b efff      	LDI  R31,HIGH(65535)
00045c c004      	RJMP _0x2060001
                 _0x20000D0:
00045d c001      	RJMP _0x2000087
                 _0x20000CE:
                 _0x20000CD:
                 _0x200008F:
00045e ced0      	RJMP _0x2000085
                 _0x2000087:
                 _0x20000C7:
                 _0x2060002:
00045f 85e8      	LDD  R30,Y+8
000460 85f9      	LDD  R31,Y+8+1
                 _0x2060001:
000461 940e 056c 	CALL __LOADLOCR6
000463 9662      	ADIW R28,18
000464 90ff      	POP  R15
000465 9508      	RET
                 ; .FEND
                 _scanf:
                 ; .FSTART _scanf
000466 92ff      	PUSH R15
000467 2ef8      	MOV  R15,R24
000468 9723      	SBIW R28,3
000469 931a      	ST   -Y,R17
00046a 930a      	ST   -Y,R16
00046b 01de      	MOVW R26,R28
00046c 9611      	ADIW R26,1
00046d 940e 050f 	CALL __ADDW2R15
00046f 018d      	MOVW R16,R26
000470 e0e0      	LDI  R30,LOW(0)
000471 83eb      	STD  Y+3,R30
000472 83ec      	STD  Y+3+1,R30
000473 01de      	MOVW R26,R28
000474 9615      	ADIW R26,5
000475 940e 04eb 	CALL SUBOPT_0x6
000477 e0ee      	LDI  R30,LOW(_get_usart_G100)
000478 e0f3      	LDI  R31,HIGH(_get_usart_G100)
000479 93fa      	ST   -Y,R31
00047a 93ea      	ST   -Y,R30
00047b 01de      	MOVW R26,R28
00047c 9618      	ADIW R26,8
00047d dea6      	RCALL __scanf_G100
00047e 8119      	LDD  R17,Y+1
00047f 8108      	LDD  R16,Y+0
000480 9625      	ADIW R28,5
000481 90ff      	POP  R15
000482 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _isdigit:
                 ; .FSTART _isdigit
000483 93aa      	ST   -Y,R26
000484 e0e1          ldi  r30,1
000485 91f9          ld   r31,y+
000486 33f0          cpi  r31,'0'
000487 f010          brlo isdigit0
000488 33fa          cpi  r31,'9'+1
000489 f008          brlo isdigit1
                 isdigit0:
00048a 27ee          clr  r30
                 isdigit1:
00048b 9508          ret
                 ; .FEND
                 _isspace:
                 ; .FSTART _isspace
00048c 93aa      	ST   -Y,R26
00048d e0e1          ldi  r30,1
00048e 91f9          ld   r31,y+
00048f 32f0          cpi  r31,' '
000490 f029          breq isspace1
000491 30f9          cpi  r31,9
000492 f010          brlo isspace0
000493 30fe          cpi  r31,13+1
000494 f008          brlo isspace1
                 isspace0:
000495 27ee          clr  r30
                 isspace1:
000496 9508          ret
                 ; .FEND
                 _isxdigit:
                 ; .FSTART _isxdigit
000497 93aa      	ST   -Y,R26
000498 e0e1          ldi  r30,1
000499 91f9          ld   r31,y+
00049a 53f0          subi r31,0x30
00049b f040          brcs isxdigit0
00049c 30fa          cpi  r31,10
00049d f038          brcs isxdigit1
00049e 75ff          andi r31,0x5f
00049f 50f7          subi r31,7
0004a0 30fa          cpi  r31,10
0004a1 f010          brcs isxdigit0
0004a2 31f0          cpi  r31,16
0004a3 f008          brcs isxdigit1
                 isxdigit0:
0004a4 27ee          clr  r30
                 isxdigit1:
0004a5 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0004a6 93ba      	ST   -Y,R27
0004a7 93aa      	ST   -Y,R26
0004a8 91a9          ld   r26,y+
0004a9 91b9          ld   r27,y+
0004aa 27ee          clr  r30
0004ab 27ff          clr  r31
                 strlen0:
0004ac 916d          ld   r22,x+
0004ad 2366          tst  r22
0004ae f011          breq strlen1
0004af 9631          adiw r30,1
0004b0 cffb          rjmp strlen0
                 strlen1:
0004b1 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0004b2 93ba      	ST   -Y,R27
0004b3 93aa      	ST   -Y,R26
0004b4 27aa          clr  r26
0004b5 27bb          clr  r27
0004b6 91e9          ld   r30,y+
0004b7 91f9          ld   r31,y+
                 strlenf0:
0004b8 9005      	lpm  r0,z+
0004b9 2000          tst  r0
0004ba f011          breq strlenf1
0004bb 9611          adiw r26,1
0004bc cffb          rjmp strlenf0
                 strlenf1:
0004bd 01fd          movw r30,r26
0004be 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
0004bf 93fa      	ST   -Y,R31
0004c0 93ea      	ST   -Y,R30
0004c1 e080      	LDI  R24,0
0004c2 940e 02ef 	CALL _printf
0004c4 9622      	ADIW R28,2
0004c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1:
0004c6 932a      	ST   -Y,R18
0004c7 85ad      	LDD  R26,Y+13
0004c8 85be      	LDD  R27,Y+13+1
0004c9 85ef      	LDD  R30,Y+15
0004ca 89f8      	LDD  R31,Y+15+1
0004cb 9509      	ICALL
0004cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2:
0004cd 89e8      	LDD  R30,Y+16
0004ce 89f9      	LDD  R31,Y+16+1
0004cf 9734      	SBIW R30,4
0004d0 8be8      	STD  Y+16,R30
0004d1 8bf9      	STD  Y+16+1,R31
0004d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
0004d3 85ad      	LDD  R26,Y+13
0004d4 85be      	LDD  R27,Y+13+1
0004d5 85ef      	LDD  R30,Y+15
0004d6 89f8      	LDD  R31,Y+15+1
0004d7 9509      	ICALL
0004d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
0004d9 89a8      	LDD  R26,Y+16
0004da 89b9      	LDD  R27,Y+16+1
0004db 9614      	ADIW R26,4
0004dc 940e 0558 	CALL __GETW1P
0004de 83ee      	STD  Y+6,R30
0004df 83ff      	STD  Y+6+1,R31
0004e0 81ae      	LDD  R26,Y+6
0004e1 81bf      	LDD  R27,Y+6+1
0004e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
0004e3 89a8      	LDD  R26,Y+16
0004e4 89b9      	LDD  R27,Y+16+1
0004e5 9614      	ADIW R26,4
0004e6 940e 0558 	CALL __GETW1P
0004e8 87ea      	STD  Y+10,R30
0004e9 87fb      	STD  Y+10+1,R31
0004ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
0004eb 940e 050f 	CALL __ADDW2R15
0004ed 940e 0558 	CALL __GETW1P
0004ef 93fa      	ST   -Y,R31
0004f0 93ea      	ST   -Y,R30
0004f1 931a      	ST   -Y,R17
0004f2 930a      	ST   -Y,R16
0004f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
0004f4 2fa3      	MOV  R26,R19
0004f5 940e 048c 	CALL _isspace
0004f7 30e0      	CPI  R30,0
0004f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x8:
0004f9 85ac      	LDD  R26,Y+12
0004fa 85bd      	LDD  R27,Y+12+1
0004fb 85ee      	LDD  R30,Y+14
0004fc 85ff      	LDD  R31,Y+14+1
0004fd 9509      	ICALL
0004fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9:
0004ff 85aa      	LDD  R26,Y+10
000500 85bb      	LDD  R27,Y+10+1
000501 91ac      	LD   R26,X
000502 30a0      	CPI  R26,0
000503 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xA:
000504 85ee      	LDD  R30,Y+14
000505 85ff      	LDD  R31,Y+14+1
000506 9734      	SBIW R30,4
000507 87ee      	STD  Y+14,R30
000508 87ff      	STD  Y+14+1,R31
000509 85ae      	LDD  R26,Y+14
00050a 85bf      	LDD  R27,Y+14+1
00050b 9614      	ADIW R26,4
00050c 910d      	LD   R16,X+
00050d 911c      	LD   R17,X
00050e 9508      	RET
                 
                 
                 	.CSEG
                 __ADDW2R15:
00050f 2400      	CLR  R0
000510 0daf      	ADD  R26,R15
000511 1db0      	ADC  R27,R0
000512 9508      	RET
                 
                 __ANEGW1:
000513 95f1      	NEG  R31
000514 95e1      	NEG  R30
000515 40f0      	SBCI R31,0
000516 9508      	RET
                 
                 __MULW12U:
000517 9ffa      	MUL  R31,R26
000518 2df0      	MOV  R31,R0
000519 9feb      	MUL  R30,R27
00051a 0df0      	ADD  R31,R0
00051b 9fea      	MUL  R30,R26
00051c 2de0      	MOV  R30,R0
00051d 0df1      	ADD  R31,R1
00051e 9508      	RET
                 
                 __MULW12:
00051f d02a      	RCALL __CHKSIGNW
000520 dff6      	RCALL __MULW12U
000521 f40e      	BRTC __MULW121
000522 dff0      	RCALL __ANEGW1
                 __MULW121:
000523 9508      	RET
                 
                 __DIVW21U:
000524 2400      	CLR  R0
000525 2411      	CLR  R1
000526 e190      	LDI  R25,16
                 __DIVW21U1:
000527 0faa      	LSL  R26
000528 1fbb      	ROL  R27
000529 1c00      	ROL  R0
00052a 1c11      	ROL  R1
00052b 1a0e      	SUB  R0,R30
00052c 0a1f      	SBC  R1,R31
00052d f418      	BRCC __DIVW21U2
00052e 0e0e      	ADD  R0,R30
00052f 1e1f      	ADC  R1,R31
000530 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000531 60a1      	SBR  R26,1
                 __DIVW21U3:
000532 959a      	DEC  R25
000533 f799      	BRNE __DIVW21U1
000534 01fd      	MOVW R30,R26
000535 01d0      	MOVW R26,R0
000536 9508      	RET
                 
                 __DIVW21:
000537 d012      	RCALL __CHKSIGNW
000538 dfeb      	RCALL __DIVW21U
000539 f40e      	BRTC __DIVW211
00053a dfd8      	RCALL __ANEGW1
                 __DIVW211:
00053b 9508      	RET
                 
                 __MODW21:
00053c 94e8      	CLT
00053d ffb7      	SBRS R27,7
00053e c004      	RJMP __MODW211
00053f 95a0      	COM  R26
000540 95b0      	COM  R27
000541 9611      	ADIW R26,1
000542 9468      	SET
                 __MODW211:
000543 fdf7      	SBRC R31,7
000544 dfce      	RCALL __ANEGW1
000545 dfde      	RCALL __DIVW21U
000546 01fd      	MOVW R30,R26
000547 f40e      	BRTC __MODW212
000548 dfca      	RCALL __ANEGW1
                 __MODW212:
000549 9508      	RET
                 
                 __CHKSIGNW:
00054a 94e8      	CLT
00054b fff7      	SBRS R31,7
00054c c002      	RJMP __CHKSW1
00054d dfc5      	RCALL __ANEGW1
00054e 9468      	SET
                 __CHKSW1:
00054f ffb7      	SBRS R27,7
000550 c006      	RJMP __CHKSW2
000551 95a0      	COM  R26
000552 95b0      	COM  R27
000553 9611      	ADIW R26,1
000554 f800      	BLD  R0,0
000555 9403      	INC  R0
000556 fa00      	BST  R0,0
                 __CHKSW2:
000557 9508      	RET
                 
                 __GETW1P:
000558 91ed      	LD   R30,X+
000559 91fc      	LD   R31,X
00055a 9711      	SBIW R26,1
00055b 9508      	RET
                 
                 __GETW1PF:
00055c 9005      	LPM  R0,Z+
00055d 91f4      	LPM  R31,Z
00055e 2de0      	MOV  R30,R0
00055f 9508      	RET
                 
                 __PUTPARD1:
000560 937a      	ST   -Y,R23
000561 936a      	ST   -Y,R22
000562 93fa      	ST   -Y,R31
000563 93ea      	ST   -Y,R30
000564 9508      	RET
                 
                 __SAVELOCR6:
000565 935a      	ST   -Y,R21
                 __SAVELOCR5:
000566 934a      	ST   -Y,R20
                 __SAVELOCR4:
000567 933a      	ST   -Y,R19
                 __SAVELOCR3:
000568 932a      	ST   -Y,R18
                 __SAVELOCR2:
000569 931a      	ST   -Y,R17
00056a 930a      	ST   -Y,R16
00056b 9508      	RET
                 
                 __LOADLOCR6:
00056c 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00056d 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00056e 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00056f 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000570 8119      	LDD  R17,Y+1
000571 8108      	LD   R16,Y
000572 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :  19 r1 :   5 r2 :   0 r3 :   3 r4 :   3 r5 :   5 r6 :   5 r7 :   7 
r8 :   7 r9 :   2 r10:   2 r11:   1 r12:   1 r13:   0 r14:   0 r15:  19 
r16:  39 r17:  29 r18:  34 r19:  35 r20:  25 r21:  27 r22:  12 r23:   8 
r24:   9 r25:   3 r26: 111 r27:  47 r28:  21 r29:   1 r30: 280 r31: 161 
x  :  23 y  : 206 z  :   8 
Registers used: 32 out of 35 (91.4%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   9 add   :  13 
adiw  :  29 and   :   0 andi  :   7 asr   :   0 bclr  :   0 bld   :   8 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   4 break :   0 breq  :  27 
brge  :   7 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  14 
brlt  :   5 brmi  :   0 brne  :  44 brpl  :   1 brsh  :   3 brtc  :   3 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 call  :  76 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  12 cls   :   0 clt   :   5 clv   :   0 clz   :   0 com   :   4 
cp    :  12 cpc   :  13 cpi   :  73 cpse  :   0 dec   :   2 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :  12 inc   :   1 jmp   :  27 ld    :  20 ldd   :  90 ldi   : 164 
lds   :   3 lpm   :  10 lsl   :   1 lsr   :   0 mov   :  55 movw  :  19 
mul   :   5 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   0 
ori   :   6 out   :   6 pop   :  11 push  :  11 rcall :  15 ret   :  37 
reti  :   0 rjmp  : 106 rol   :   3 ror   :   0 sbc   :   2 sbci  :   2 
sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :  15 sbr   :   1 sbrc  :   5 
sbrs  :  14 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   5 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  74 std   :  46 sts   :   6 sub   :   2 subi  :  22 swap  :   0 
tst   :   3 wdr   :   0 
Instructions used: 60 out of 116 (51.7%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000ae6   2574    216   2790   32768   8.5%
[.dseg] 0x000100 0x000300      0      0      0    2048   0.0%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 11 warnings
